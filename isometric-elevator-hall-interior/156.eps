%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title:  2003.w003.n001.11A.p25.11.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Albina Kondratyeva
%%CreationDate: 11.03.2020
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.1 x540 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 14696 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD57FF%AF8A84FD7CFF845F5983A8FD79FFAF5F5F7DA77DFD78FFA88459837DA77D%83A8FD76FF848459837DA883A87DFD74FFA8A8598383A87D837DA77D83A8%FD64FFCFFFA8CFA8CFA8FFCAFD05FFA8845FAEA8CAA1A883A77DA87DFD62%FFA8FFA8A8A1A8A1A8A1A8A1A7A1CFCAA87D8383A8A7A8A1A77D837D837D%83A8FD62FFA8CAA8CAA8CAA8CAA8A8A1CAA8AE5F84A8CFA7A8A7A8A1A883%A87DA87DFD60FFCAA8A8CAA8A8A7A8A7A8A1A8A8CA84845FA8A8CAA1A7A1%A8A1A77D837D837D83A8FD60FFA8CAA8CFA8A8A8CAA8CAA8FF848484FFA8%A17DA8A7A8A1CAA7837DA87D837DFD60FFA8CAA8A8A7A8A8A8A1CAA88459%84A8CA7D7D517DA1A8A1A17DA17D837D837D83A8FD60FFA8CFA8CFA8CAA8%FFA88484FFCAA87C7C767C7CCAA17D777D7DA87DA87D837DFD60FFA7CFA8%A8A8CAA8A88384A8CAA7A15276767C767D7D7D52FD047D837D837D83A8FD%5EFFAE83A8FFA8FFA8AE83AEA8CAA7A87C76767C76FD047DA77D7D52A87D%837D837DFD60FF587DA8FF848483AEA8A87DA8A17D517C767D52FD047D83%7D7D7D837D7D7D83A8FD5FFFA8A8AF84AEA8FFA8A8A1A8A7CAFD057DA17D%7D52837D7D52A87D837D847DFD52FFA8FFA8CAA8CFA8FFA8FFFFFFCFFFA8%A883AEA8A8A1A8A1A7A1A8A17D527D7D7D587D527D7D837D7D7D837D837D%83A8FD50FFA8CAA8CAA8A8A1A8A7A8A7FFFFFF84AEA8FFA8A8A1A8A1A8A7%A8FD067D7C7D587D52837D7D7D837D837D837DA8A8FD4CFFA8A8A7A8A8A8%A1A8A7A8A1A8A1A8A8A883A8A8CAA1A7A1A8A1A7A1A77D7D527D7C7D527D%525852FD077D59837D7D7DA7A1CAFD4AFFCFA8FFA8CAA8CAA8A8A7A8A8FF%A8AE84FFA8CAA7A8A1CAA7A8A7A1777D7DA87D7D587D587D587D76837DA8%7D837D837D837DA8A1A8A1CACAFD47FFCFA8A8A8CAA8A8A7A8A7A8A8FF84%84A8FFA8A17CA8A1A8A1A8A1A87652FD047D587D527D5258527D7D83FD04%7D59837D7D7DA8A1A77DA8A8FD46FFA8FFA8CAA8CAA8A8A8CFA8AE84AFA8%CFA17D76A1A7CAA17D77A1A77D527D7D837D7D587D527D587D5283A17D52%837D837D837DA7A1A8A1A8A1FD46FFFD06A8A7A8A8CFA8A884AEA8A87676%527C7CA77D7D527D52A876527C837D7D527D5258525852527DA7587D7D83%597D58837DA77DA77DA7A8FFA8FFA8FD42FFA8FFA8CAA8FFCAFF84AFA8FF%A8A8767C767D76A1FD067DA77D52837D837D7D587D5259527D52A87D7D76%847D837DA8A7A8A1A8A1A8A1CACFFFCAFD42FFA87DA8CAA8CAA8AE84AEA8%CAA1A87D76767C767D767D767D7D7D52A87C527C837D7D52595258525852%7D7D7D587D7D837DA1A1A8A1A77DA8A1A7A1FFA8CFA8FFA8FD40FF7D83A8%FFAEAEA8FFA8A8A1A8A7A1527D7C7D777D7DA7FD047DA17D527D7D837D59%52595258527D7683587D7D837DA8A1A2A1A8A1A8A1A8A1A8A8FFCFFFA8FF%CFFD3EFFA87D588383A87DCAA1A7A1A7A1A87D76527D76FD057D527D52A7%76527D7D587D52582E582E52527D587D587D7DA1A1A87D7D7DA77DA77DA7%7DA8A8FFA8CFA8FFA8FFA8FD3CFF7D837DA77D83A7CAA7A8A7CAA1FD067D%837DA8597D7D7DA1A1527D7D837D58525952582E7D527D7D7D7CA8A1A87D%7D58A8A1A8A1A8A1A8A1A8A8FFA8FFCFFFA8FD3CFFA87D7D837D7D7DA7A1%A8A1A77D7D76FD067DA77D59527D52A77652FD047D2E582E582E52527D58%7D527D7C7D587D58597DA8A1A77DA8A1A77DA8A8CFA8FFA8CFA8FFA8FFA8%FD37FFAE58837D837D83A1A8A1A7FD057D837D837D837D83597D767DA17D%527D7D83595852582E582E7D52837D7D7683597D587D59A7A1A8A1A8A1A8%A1A8A1FFCFFFA8FFCFFFA8FFCFFFCFFD36FFA87D58837D7D7DA7A17D52FD%057D58FD057D587D7C7D52A17652587D7D7D2D582E2E2D525276587D527D%587D585958597DA77DA77DA77DA7A1A1A7FFA8CFA8FFA8CFA8FFA8CFA8FD%35FFAE59837D837DA7A7A87D7D7D837D837D837DA87DA8FD087D527D7D83%7D582E582E582E7D7683597D7683597D58837DA8A1A8A1A8A1A8A7A77CA7%A7CFCFFFCFFFA8FFCFFFA8FFCFFD34FFA87D58837D7D7DA8A17D527D7D7D%597D597D7D837D7D587D527D52A176527D837D7D52582E2E2E58527D5859%587D5859587D7DA77DA17DA7A1A77DA175A7A7A7A1A7A8FFA8CFA8FFA8CF%A8FFA8FFA8FD31FFAF597D7D837D83A1CA7D527D837D837D837D7D7DA759%7D587D7D7D777D527D7DA87DA77D7D2E522E7D527D58FD047DA8A1A77DA8%A1A77DA87D7C517CCACAA7CAA1A7A7FFCFFFA8FFCFFFA8FFCFFFA8FD30FF%A87D58FD047DA7A17D527D7D7D597D587D7DA1587D7D59527D527D765258%FD047DA17DA1522E527D5859527D7DA17DA17DA17DA17DA17676517576CA%A7CAA7A7A1A17DCFA8CFA8FFA8CFA8FFA8CFA8FFA8FD2EFF597D7D837D83%A1CA7D777D837D837D837DA87D837D7D587D7D7DA1A1527D7D837DA77DA8%A1A87D7D527D587D7DA8A1A8A1A77DA8A1A1767C757675A1A8CFA8CFA8CA%A7A77DCFCFFFCFFFA8FFCFFFA8FFCFFFCFFD2CFFA87D58FD047DA7A17D52%FD097D587D5859527D52A87C527DA7587D7DA17DA77DA1527D5859527D7D%A17DA77DA17DA776755176767C7CA7A7CAA7CAA7CA7C767CFFA8FFA8CFA8%FFA8CFA8FFA8CFA8FD2BFFAE587D7D835983A1A87C7D7D837D837D837DA8%597D7D7D587D767DA7A152A77D7D58A8A1A77DA87D7D527D587D7DA8A1A7%7DA8A1A77D7C757C76A7A1A77DA7A1CAA8CF7D7C51A1CFFFA8FFCFFFA8FF%CFFFA8FFCFFFA8FD2AFFA859587D7D7D58A7A17D527D7D7D58FD077D5859%527D52A87D527D7D587D7DA17DA17DA77652527D7C7D7CA17DA17DA17DA1%517C7DA7A1A7A1A17CA17DA15176517576CAA8CFA8FFA8CFA8FFA8CFA8FF%A8CFA8FFA8FFA8FD25FFAE587D7D835983A7CA7D7D7D837D837D837D8359%83587D597D7D7DA7A1527D597D7DA8A1A8A1A87D7D77A17DA17DA17DA17D%A8A1A87DA1A1CAA7CAA7A7A1A7A17C517C767C51A1A8FFA8FFCFFFA8FFCF%FFA8FFCFFFA8FFCFFFCAFD26FFA85958837D7D58A8A17D52FD077D587D58%595859527D52A87D5258FD047DA77D7D527D767D7DA17DA17CA17DA17DA7%7DA17CA7A7A8A1A8A1A77C765176517651767CA8848484CFA8CFA8FFA8CF%A8FFA8CFA8FFA8CFA8FFA8FD23FFAE587D5983597DA1CA7D527D837D837D%A8FD047D597D587D7D7DA1A1527D588359A7FD057DA17DA17DA17DA17DA1%7DA17DA7A1A17CA7A7CAA7CAA7A1517C757675A17DA884AE84AE84AFA8FF%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFD22FF8459587D597D58A7A17D527D%58FD077D58595859527D52A77C52587D587D7D7D527D7DA17CA17D7D7CA1%7D7D7CA17D7D7DA17D7D7CA17DA7A1A776765176767D7D84838483A884A8%84AEA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FD1FFFAF587D598359%7DA1CA7D777D837D837D837DA7587D597D587D7D7DA1A1527D7D59597D7D%A87DA17DA77DA17DA77DA17DA77DA17DA8A1A8A8CFA8A77DA8A17C517D7D%A884AE84AE84AEA8AEA8AFA8AE84AFCFFFCAFFCFFFA8FFCFFFA8FFCFFFA8%FD20FFA85958837D7D58A7A17D527D587D7DA1527D7D5958595859527D52%A77C527D7D527D7DA17DA77DA17DA17DA17DA17DA17DA17DA17DA8A8CAA8%CAA8A87DA1767D7DA17DA883A8848483AE84A884AE848483A8A8FFA8FFA8%CFA8FFA8CFA8FFA8CFA8FFA8FFA8FD1BFFA858848383587DA1A87D777D7D%7DA77D59587D587D587D587D767DA1A1527D7DA17DA8A1A77DA8A1A17DA1%7DA17DA17DA77DA7A7CAA8FFA8CFA8FFA8A8A1A17DA17DA7A1A883AE84AE%84AEA8AE84AE84A8838484CFCAFFCFCFA8FFCFFFA8FFCFFFA8FFCFFFCFFD%1AFFA8835F837D5958A7A17D52FD057D527D525852585259527D52A17D7D%7DA17DA17DA17DA17DA17DA17DA17DA17DA17DA7A7CFA8A8A8CAA8A8A8CA%A8A8A7A8A1A8A8CA7D7D7DA884A884AE84A883A8838483845F84A8A77CA7%A7FFA8CFA8FFA8CFA8FFA8FFA8FD19FFAF5F8483835883A7CA7D7D7D837D%A8587D7D7D5859525958FD047DA8A1A8A1A77DA8A1A77DA8A1A77DA8A1A7%7DA8A1A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFA8A87DA7A1A884AF%A8AE84AE84AE84AE84847DA17CCAA1A7A7CFCFFFCFFFA8FFCFFFA8FFCFFD%18FFA8835F837D5958A8A77D527D7DA17C7D7C7D585852582E59527D76A1%7DA17DA77DA17DA77DA17DA77DA17DA17DA1A1CFA8CAA8CFA8CAA8CFA8CA%A8CFA8CAA8CAA8CAA8CFA8A8A1A17DA783AE84A884A884847D837C7651A8%A7A7A1A7A1A7A8FFA8CFA8FFA8CFA8FFA8FFA8FD16FF83847D83597DA1CA%7D5258A77D7D587D7D7D5259587D777D7DA17DA7A1A77DA8A1A77DA8A1A7%7DA77DA17DA8A8CAA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8A8A8CAA8CFA8FF%A8FFA8A8A1A17DAE84AE84A883A7767C757CA7CFA7CAA7CAA1A7A8FFCFFF%A8FFCFFFA8FFCFFFCFFD15FFA85983585958A7A17D527D7D7D527D527D58%58527D527D7CA17DA17CA17DA17DA17DA17DA17DA17CA17DFD06A8CAA8A8%A8CAA8A8A8CAA8A8A7A8A8A8A7FD04A8CAA8CAA8A87DA17D8483837D7C51%76517676CAA7CAA7CAA1A7A1A1A1CAA8FFA8FFA8CFA8CF7CA8A8FFA8FD13%FFAE5983597DA1CA7D767DA8FD097DA17DA77DA17DA77DA17DA8A1A77DA8%7DA17DA7A7CAA8CFA8CAA8CFA8CFA8FFA8FFA8FFA8CAA8CFA8CAA8CFA8CA%A8CFA8FFA8FFA8FFA8A8A17D7DA07576757C76A1A7CFA8CFA8CFA7A7A7CA%A1A8A8FFCFFFA8FFCF7C7DFFA8FFCFFD13FFA8585958A7A17D52FD057D52%7D767D7CA17DA17DA17DA17DA17DA17DA17DA17DA17DA7A7CAFD0BA8CFFD%0AA8A7A8A8A8A7FD04A8CFA8CAA8A87D7D5176517676A7A1A7A1CAA7CAA7%A8A7CAA7A7A1A7A1CFA8FFA8FFA87C7CA8CAFFA8FD12FFA87D587DA1A87D%777D7D587D7D7D777D7DA17DA77DA17DA77DA17DA77DA17DA87DA17DCAA8%CAA8CAA8CAA8CAA8CAA8CAA8A8A8FFA8A8A8CAA8CAA8CAA8CAA8CAA8A8A8%CAA8CAA8FFA8CAA8CA7C7651A1A1A8A1A8A1A7A1CAA8CAA1CFCACAA7CAA7%A7A1CACAFFA8FF7C587DFFCFFFA8A8A8FD10FF585958A7A17D527D587D52%7D7DA17DA17DA17DA17DA17DA17DA17DA17DA17DA7A7FD05A8A7A8A8A8A7%A8A8A8A7FD04A8CAA8A8A7A8A8A8A7A8A8A8A7A8A8A8A7FD05A8A7A8A77C%76A7A1A8A1A7A1A7A1A77CA7A1A7A7CAA7CAA7CAA7A776A7A8FF837C527D%A8FFA8CF76A8FD0FFFA883587DA1CAFD057DA1A1A87DA8A1A77DA77DA17D%A77DA17DA8A1A77DCAA8FFA8FFA8CAA8CFA8CAA8CFA8CAA8FFA8FFA8FFA8%FFA8CFA8CAA8CFA8CAA8CFA8CAA8CFA8FFA8FFA8CAA8CAA1CAA8CAA7CAA7%CAA7A8A1A8A1A7A1CAA8CFA8CFCACAA1A17CA7A783587C83FFCFFFA8A1A8%FD10FF585858A7A17D527D7DA17DA17DA17DA17DA17DA17DA17DA17DA17D%A1A1A8A8CFA8CAA8CFFD0BA8CFA8CAA8CFA8CAA8CAFD0BA8CFA8CAA8CFA8%A8A8A7A7A8A7A8A7A8A1A8A1A7A1A7A1A77DA7A7CAA7CFA7A176767C8351%5152CFA8FFA8CF7CA8FD0FFFAEA87DA8A8A8A7A87DA8A7A8A1A8A1A87DA8%A1A77DA77DA17DA8A1A8A8FFA8CFA8FFA8CFA8FFA8CAA8CAA8CAA8FFA8CF%A8FFA8CFA8FFA8CFA8FFA8CAA8CAA8CAA8FFA8FFA8FFA8CFA8FFA8FFA7A1%A1CAA7CAA7A8A7CAA7A8A1A8A7A7A1A7A7CAA1A1767651A17D5852CFCFFF%A8FFCA7DA8FD10FFA8CFA8CAA8CFA8CAA8CAA8A8A8CAA8A8A8CAA8A8A7A8%A7A8A7A8A8CAA8CAA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CAA8A8%A8CAA8A8A8CAA8A8A7FD04A8CAA8A8A8CAA8A8A8CAA8A8A7A17CA7A7CAA7%A8A1A8A1A7A1A7A1A7A1A77C765176517576A7517DA7CFA8CFA8CF7CA8FD%13FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DA7A7CFA7CAA7CAA7CAA7A8%A7A77676757C7676767D7D7C52A8FFFFCAFFCA7DA8FD14FFA8CFA8A8A8CF%A8CAA8CFA8CAA8CAA8A8A8CAA8A8A8CFA8CAA8CFA8CAA8CFA8CAA8CFFD07%A8CFA8CAA8CFA8CAA8CFA8CAA8CFA8A8A8CAA8CAA8CFA8CAA8CFA8CAA8CF%A8CAA8FFA8A87DA17DA8A7CAA7A8A1A8A7A15176517651767CA8767D5151%7DCAA8FFA8FF7DA8FD15FFCAFFA8CFA8FFA8CFA8FFA8CAA8CFA8CAA8CFA8%CAA8FFA8FFA8FFA8CFA8FFA8CAA8CAA8CAA8CAA8CAA8FFA8CFA8FFA8CFA8%FFA8CFA8CAA8CAA8CAA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8CAA8CAA7A17C%A7A7CFA7CAA7CA7676757C757651A8FFFF7D7C517652A1A8FFA87DA8FD16%FFA8FFA8A8A8CAFD13A8CAFD0FA8CAA8A8A8CAA8A8A8CAA8A8A7A8A8A8A7%FD04A8CAA8A8A8CAA8A8A8CAA8A8A7FD05A87C7DA1CAA7A87D7651765176%767DA1FFA8FFA87D7D7D527DA8CF7CA8FD19FFCAFFA8CFA8FFA8CAA8FFA8%CAA8FFA8CAA8CFA8CAA8FFA8FFA8CFA8CAA8CFA8CAA8CFA8CAA8CFA8CFA8%FFA8FFA8CFA8CAA8CFA8CAA8CFA8CAA8CFA8FFA8FFA8FFA8FFA8CAA8CFA8%CAA8CFA8CAA1A1A1CAA1A77676757C7DA77DA8FFFFA8FFA87D527D7DA8A8%A1A8FD1AFFA8FFA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8FFA8A8A8%CAA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CAFD0BA8CFFD%0EA8A7A17C7D7C76757D7DA17D7D7DFFA8FFA8AF527C527DA1A87CA8FD1D%FFA8CFA8CFA8CAA8CFA8CAA8CFA8CAA8CFA8FFA8FFA8CAA8CFA8CAA8CFA8%CAA8CFA8CAA8CAA8FFA8CFA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CFA8%CAA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8A87D7D76A17DA17DA1A1A8A7CAA8%FFA87D527D7DA7A17DA8FD1EFFA8CAFD0DA8FFA8CFA8FFA8A8A7FD0CA8FF%A8CFA8CFA8A8A7A8A8A8A7A8A8A8A7FD04A8CAFD06A8A7A8A8A8A7A8A8A8%A7FD04A8CFA7A77DA17DA1A1A8A8A8A1A8A8A8527D7DA17CA176A8FD21FF%A8CFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCAFFA8FFA8CAA8CFA8CAA8CFA8FF%A8FFCAFFA8FFCAFFA8CFA8CAA8CFA8CAA8CFA8CAA8FFA8FFA8FFA8CFA8CF%A8CAA8CFA8CAA8CFA8CAA8FFCAFFCAFFA8CAA8CFA8CAA8CFA8A8A8A17DA7%7DA17DA8FD23FFA8CAA8CAA8A8A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8A8A8%CAA8A8A8FFA8CFA8FFA8CFA8FFA8FFA8CFA8A8A8CAA8A8A8CAA8CAA8CFA8%CAA8CFFD0AA8A7CAA8CFA8FFA8CFA8FFA8A8A7FD09A87D7D7DFD26FFCFFF%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCACFA8FFA8FFA8FFCAFFA8FF%CAFFA8FFCAFFA8FFA8CAA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8CFA8CA%A8CAA8CFA8FFCAFFA8FFCAFFA8FFCAFFA8CAA8CAA8CFA8A87DA8A8FD28FF%CFCFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8A8A8FFA8CFA8FFA8CF%A8FFA8CFA8FFA8CFA8FFA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CA%A8A8A8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFFD04A87D7D7DA8FD2DFFCFFF%A8FFCAFFA8FFCAFFA8FFCAFFA8FFA8CFA8FFA8FFA8FFCAFFA8FFCAFFA8FF%CAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CFA8FFCAFF%A8FFCAFFA8FFCAFFA8FFCAFFA8FFCFCA7D7DA8FD30FFA8CFA8FFA8CFA8FF%A8CFA8FFA8CAA8CAA8A8A8CAA8CAA8FFA8CFA8FFA8CFA8FFA8CFA8CAA8A8%A8CAA8CAA8CFA8CAA8CFA8CAA8CFA8CAA8CAA8A8A8FFA8CFA8FFA8CFA8FF%A8CFA8FFA8FFA8A87CA1A8FD34FFA8FFCAFFA8FFCAFFA8FFA8CAA8CFA8CA%A8CFA8CAA8FFCAFFA8FFCAFFA8FFA8CAA8CFA8CAA8CFA8CFA8FFA8CFA8FF%A8CFA8FFA8CAA8CAA8CAA8FFA8FFA8FFCAFFA8FFCAFFA8FFA87D7DFD38FF%A8FFA8CFA8FFFD0FA8FFA8CFA8FFFD0FA8CAA8A8A8CAFD06A8A7A8A8A8A7%A8A8CFA8FFA8CFA8FFA8A87D7DA7FD3CFFA8FFA8CAA8FFA8CFA8FFA8CFA8%FFA8CFA8CFA8FFA8FFA8CAA8FFA8CAA8FFA8CAA8CFA8CAA8FFA8FFA8FFA8%CFA8CFA8CAA8CFA8CAA8CFA8CAA8FFCAFFA8FFA8A87DA8FD3FFFA8CAA8A8%A8CAA8A8A8CAA8A8A8CAA8A8A8CAA8CAA8CAA8A8A8CAA8A8A8CAA8A8A8CA%A8A8A8CAA8CAA8CAA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CAA8CFA17D7DFD%42FFA8FFA8CAA8CFA8CAA8CFA8CAA8CFA8CAA8FFCAFFA8FFA8CAA8CFA8CA%A8CFA8CAA8CFA8CAA8FFCAFFA8CAA8CAA8CFA8CAA8CFA8CAA8CFA8CAA8A8%7D7DA8FD44FFA8FFFD0BA8CAA8CFA8FFA8CFA8CFFD0DA8CAA8FFA8CFFD0D%A8CAA77D76A8FD49FFA8FFA8CAA8FFA8CFA8FFCAFFA8FFCAFFA8FFCAFFA8%FFA8CFA8FFA8CAA8FFCAFFA8FFCAFFA8FFCAFFA8CFA8CAA8CFA8CAA8CFA1%7D7DFD4CFFA8FFA8A8A8CAA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8CFA8A8A8%CAA8CAA8FFA8CFA8FFA8CFA8FFA8CFA8CAA8A8A8CAA8A87CA7A8FD50FFA8%CFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8CAA8FFCAFFA8FFCAFFA8%FFCAFFA8FFCAFFA8CFA8CAA7A17DA8FD53FFA8CFA8FFA8CFA8FFA8CFA8FF%A8CFA8FFA8CFA8CFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8A87D7D%7DFD56FFCFFFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8CAA8FFCAFFA8FF%CAFFA8FFCAFFA8FFCAFFA8A87DA8CAFD58FFCAFFA8CFA8FFA8CFA8FFA8CF%A8FFA8A8A8CAA8A8A8CAA8CFA8FFA8CFA8FFA8CFA8FFA77D7DFD5EFFCFFF%A8FFCAFFA8FFCAFFA8CFA8CAA8CFA8CAA8CFA8FFA8FFCAFFA8FFCFCA7D7D%A8FD60FFA8CFA8FFA8CFA8CAA8A8A8CAA8A8A8CAFD05A8CAA8FFA8FFA8A7%7CA8A8FD64FFCFFFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFCAFFA7A1%7DFD68FFA8CFA8CAA8A8A8CAA8A8A8CAA8A8A8CAFD04A87D7DA8FD6CFFA8%FFA8CAA8CFA8CAA8CFA8CAA8FFA8A17DA8FD6FFFA8CFA8A8A8CAA8A8A8CA%A8A87D7D7DFD74FFA8FFA8CFA8FFA8A87DA8CAFD76FFA8CFA8CAA17D7DA8%FD79FFA8FF7D7DA8FD7CFFA8A8A8FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD%FCFFFDFCFFFDFCFFFD54FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2020-03-11T16:35:51+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-03-11T16:35:51+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-03-11T16:35:51+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FVC9vrOygM93MsMQ/aY9fYDqT7DFjOYiLLBtb/ADAu7gtb6Mhi&#xA;j6G6cfF/sRuF/E/LImVOHLPPJtDYd6I/LuW7a6vFnuZJ+ShyHYleRbcgEnc4IytuwY+HqSzjJuQ7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FULdapZW1RLIOY/YXc/hg&#xA;JSAl0vmuzU/DDI3z4j+JyPGy4FsfnDTSaSRyR+9Aw/A1/DHjC+GUxi1jTZoDNFOrov2qbEfMGhH0&#xA;4eIMSK5se1HzdNPIbXSYjPL3cfYHuTt/TAS4k9TZqA4j9jG9Rt0mRnv7p7u7p8KxmkUfcjpv9GQM&#xA;+5lHRk+rIbKUVAFAKAdAMillv5dmt9d/8Yl/4llkGcGd5Y2OxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KpbrV7JBEscZ4vJWrDqB7YCWUQxmXvlZZoVkd24oCzHoBgZKckd&#xA;tbsBcEzTn7NrFua/5TDp9GIi42XVRjsNypajPFBbmXV51tLRN1soiFPtyPifpOEyAaRgyZd57DuQ&#xA;Fj5gh1K3kWyjNvZxvwCAcedBXkf2j/svuyoytz8eGMBQCy4u7aMmJ5VWRlPFCQD0xALKZ2KA5ZN1&#xA;zL/y4Nb68/4xL/xLJwZ42e5Y2uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KsR856xDp2o2YuDS3mRgz/wApDCh+W++Qkjj4Tuh5fRSMSzyBI2FVA3Zgf5RkWU80YjdDvLM0&#xA;dQRY2jdZDvK49u+NgONeTLy9MUr1DUxY6fdSafGI3jidxM+7sVUncilBt0GQMrcvDpow97zV7m/1&#xA;N1ubmRppCK8m2VOQr8I6D9ZyrcuXsExsr+5s7N4IHCK7Vec7UJAFFJ/28vhirm0zyXybuoGggM5b&#xA;1JuaBmbcfEwB69TvkxJxxOynJam2VuNI7sx/LU1v7z/jEv8AxLJwZ4ub0DLG52KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVLr3XLW2JRAZZB1C7AfM4DJkIpRP5ovq/u441HuCT+sZDjZ&#xA;CAQ/+L9TRt0iYeHFh+o4OMp4Amen+aVuI2ee3aFVH97UGMnwqaH9eSE2EwI8ylep3q6jcpcRwJW3&#xA;BCXUo+GMHeq8tq+/XAfNxTMzNQHxSuW7t4nLR/6TcHrcSbqD/kqf1nIGfc34tIBvLcoGe4d2aaeS&#xA;p6s7HoMg5lUkGp69BIklrbJ6/qKUdjXhQihp3OWRx97AzY/xihRVNGCiixr9kU98lYHJx55Ut1KY&#xA;yTW/gGNANgNxhiUQlbINVU/UB7SRM30uAo+7Ix5scaPZtzgaJc2ReR9at9MvZ3nVmSVAtVpUb16G&#xA;mEGm3ALJel2Oo2d9F6ltKJF/aHRh8wdxlgNtxFIjCh2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxVBavcNDZnieLSEID33BJp9AwFI5sWl65W2If0ZZX4xqWP6vngTapHaQo9OP1mfsg+wPme+G&#xA;nHnqOkdygtZ13S9NQSX86yy/7qto/s7dgF6/R9OAzARDTGZubGrPzbfazqhiZFhskRmji71BG+x4&#xA;jr03+eVcVucMYiNm7/zFa27cIR68g68TRR9OWRxksTNKPN1+02j2s8XKImahU7HZTkoCixkbDkSO&#xA;O1+EULJVj3NVxJ3cSUjaQSz/AAD5n+GBqJQUkgaeKu4DCv3jJxbcJ5ss1l+OnxqR8c0sbkeA5imQ&#xA;jzZR2+KIdviPzxcWXNF6ZUtIabADfIycnS8ym1reXNtKJYZGjdejKaHADTmEPS7C+L28frOJHKgm&#xA;UDiDXvxy8ScchHAgioNR45JDsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYz+YN1La6LDcRGk&#xA;kdzGR/wL1H05GXJjM1ukWmazp99EZJW9IoDzjJA3FK0J7b5BPjikW1/atapN6gFtJX044ty9DQ/5&#xA;nASAwEJ5OewS651KaVTHGBDCeqL1P+s3U5Ayty8eKMeTzHVEkk1zUCxJpNxDNU0UItAK9sjwElt4&#xA;wAqWtpLRmQlVIo79KivTLowEWjJlRN3Clp6SIf3r7uT1A8BkhK2sS3pB6iSfKGnk9TOf+ItiPqbO&#xA;iZkkwADc8B/xHI9XDP1MRln+AfM/wxaDJTtn53Eff41/Xkw36Y82V6xKZyzg/Akkar/wY/tOQiyi&#xA;bnacwWSyMebAPX4UNQD9OAt+PR73Lkj4byEEwRKPUT7SAig+ZGRIbwYD0xXb9+vtsMilmXl66E2m&#xA;xiv7yH4GHeg+z+GTDVIbpzDdPGeu2SEmFI+K6jcb7H8MsBRSthQ7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FWJfmcaeXE/wCYlP8AiLZGfJrycnmIb/RR/rN+pcraQnNrdpDpYlmakMKlyetB3yB5uwxf&#xA;SEmuvMF1efu7EFIj/uz9ojxr0GWCAHNZZEAbZYxzc+pISK13G53+eS4mjxLNBHxR1lofs1Lt7Kho&#xA;B9+QLWBcksvJGmn9b9gvxX6BkoriNyJQuoOp8qWSd0lDH/ZBx/xrhA3csj0prGG9BmHUoFX/AIGr&#xA;H7sj1cP+JgEk5MYp4n9QwuESq6eSZd/5l/Xkg5Ok6sqvm4wxRd+aO/zZhT7hkYssX1AIyfU70q0L&#xA;SkqCQGoA3HpxLDqMjS5NRM7Xsi/LprNN/qj9eCTPScynmQc9Vtrme2lEsLlHHh39jighnkMqyxJK&#xA;v2ZFDD5EVyxpVAxU7HFUVBesuzbjwOSEkUjo5kkGx38O+TBYr8KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxViH5omnlpP+YmP/iL5GXJry8nl6t/on+yb9S5W0BH3X/KMXX/MO36jkRzdhj+hj/l0004/65yy&#xA;bj5UVcGo+kfrGANUPqRV1IYraRujztxUf5I2wdWWQ0D5pVcmkkcX++/tf6x3b+mSiuHnSWz0/QY6&#xA;V9WGtK1+xJ1yXVzpfQGSwlFtHlP2Uj4L7swFf4DK+rhjmSx3VvJU0Sc9PYzIKkwvQP8AQdgcIk15&#xA;dGR9O6R2EckVyUkQq6MoZGFCDXoQcmEaUVdshuJWkcM3VpEJ+lxkQwwG5p1FpLPK0k54oWJCDqRX&#xA;uciS5ENKSbkmUUaRKFjUIB4ZFzYxERQddaxa2UXO6cD+VR9pvkMjIgMhG0s0TVZfMGvw2LAw2FHe&#xA;RFPxOFWoDN4E9aZQZktnDTPFS+05+do9E7xndD9H9MAkRyYmIKbadr1tdOIZR6FwdgjfZY/5JzIh&#xA;kBaJYyE0yxguSRlOxxBQjYL7s+/68mJIpGK6sKqajJobxV2KuxV2KuxV2KuxV2KuxV2KsO/NQ08s&#xA;p/zEx/8AEXyMuTVm5PLUb/Qj/rN+pcraByTGc18rXP8Axgf9RyPV2GL+7Y/oBpp3+zOWTcfN0Rxq&#xA;I2YCpJCr+tj9AwDmwx8272YPdM3WO3HTtyH/ADdgY5JXL3JVyLSgnck1JyQXTHcql+qjyXZMAAxu&#xA;BU03PwPhH1OcT6UfdyVt7e2j68BI/wB1cj1cTIfUAE4yDsGPea7cl7SdY9gxWSQDxK8QT9+WQa5j&#xA;qgorWWZgFHQq33Gv8MeXNwdNgldllqsGFQajK3ZN4pYXHpeq6xeyShGIdj8Z6AV2p7ZiEEm26wGU&#xA;aL5fOkTLdI5N0opUdN+oPjjVMSbZba+YbcoVvKQ8RVnP2KDvXthYsL82+crCaYRaVyf0zUz7ovIH&#xA;YrT4j+GRtsAem+U9Qm1Dy9Y3M787hoU9ZzSpfiCTt41zMgbDhzFFN8kxdiqrFcOhqDhBRSOhvUcU&#xA;bY+OTEkUiQQRUbjJIdirsVdirsVdirsVdirsVYb+a5p5YT/mKj/4i+Rlyac30vKoz/oLf6x/UuVu&#xA;ODsmkn/KKXP/ABgf+OR6uyw/3bHtCP8AuP8A9m2WScbN0TcqqQSM3RAIx/rMRy/pkRzTjCAvjw5J&#xA;+07l2+QJC/xOFxsuyBjNZRhDPS8yr6h/yhVl/wAxA/4i+I+pz/4V7OVV5CfifjGnyAHL8KDB1deT&#xA;UyfNM7rV41Pp249WTpX9n+3ER73ZmfchPqs9w/qXbk+Cf57DEyrkohfNFJGiKFUUA7DKyWwBerMh&#xA;qppiqJin57EbjuOmFCJ0e/gtY3t5YysfIkSKK0GwHIZUYsimsqQtF6qupipXnUUp88gQh5fr+rXN&#xA;7fTRliLeNysUQPw0U0qfEnKiW4BW0rynqmofEF9GPsz7fhlkMJLTm1MMfN6losUun2EVpHKeMYUV&#xA;G1eKhR+rMyMaDp8uplM9yf2upGlJhX/LH8RiQ2Y9R3o9HR15IQynuMDlAg8l2KXAkbjFURDdvGeu&#xA;34ZISRSPiuY5O9D4ZMFjSrhV2KuxV2KuxV2KuxVhv5qxvL5bhjjFXa7jAH+xfIyaNQai8wu7T6pa&#xA;iMtyYjkx7VJA2+7IEOLjlYKYJv5Vuf8AmGm/4i2Q6u1wf3bG9CLCyDD9hmNPE7BR9+WTapjdG6lN&#xA;JG1tZoeRBDS/Mmp/icjFidiAlt3frJdSiT4W5EDwoDQYXDy/UVkJrKMIbNJzKPmtprryfaQ26mSV&#xA;JfUKDrxAYbffjfqdjVxRUelPOyNKTHEqgKv7RPUn78BLSNNcrKZRWsEScEQBe/ifpyJNuUBSyS3I&#xA;3TceGBKlxNaU38MCVaK1ZiAaknoo64UWyDTvLUrgPc/uY/8AfY+0f6ZIRYGSepp1nHF6UcQVehp1&#xA;PzJ6/TkqYWkmqeWSY5Pqb+kH+1Hv6bb13A6ZXLG2Rmxez8nX0EjStbB7l2LF+asBU/s1p+quQjjp&#xA;mclshkkk02CE6ggiMhCqYx8O5oKgdOvbLxydXn0tm4plAysAVIYeIwuHwkGii1+wcWSh9ant35xO&#xA;VPcdj8xigTMTYTCz8xWshCXNIJP5j9g/T2+nImLl49XE7HYom41vS7eb0JbhRLSpUVYgVpvSuVmY&#xA;DmiBKMjkjkQPGwdG3VlNQfuyQLFerFTthVFwXzLs248DkxJjSOjlSQfCfo75O0LsVdirsVdirsVS&#xA;HzraTXGhuYl5NA6ykDc8QCCR8g2JcbVxJhs8i1tvg/2P8crk4eD6SiYv+UUuf+Yab/iLZX1dxg/u&#xA;wkXlla2nJto42aRj7jplk2J5rJZmaQ3B+3NKqJ7LyBb8KDAGkHe0pvIZJbuUIK/G1T264aaJQMia&#xA;RumaXcD7LFvEn7I+WEkBysGn4WR2CR21sluDslaH5muVk25gjSLwK7FVjzKvTc4pRWn6Ze3biQj0&#xA;4T+2w6j/ACR3xAQSyrTrKxtgPST973dt2P0/0yYayUfhYuxVTkmROu7eAxSh1nAkLcBQ+HXBaaX3&#xA;FtZ30PpzIJEB5AHqCO4woSW40W+s2Mti5kj6mP8Aa+7o2RqkTjGYqTdrrUTD07gek/Svavv4YQXC&#xA;y6aUdxuFPUNStIInkaVeCfabkOIr0qf8zjKYHNox4JZOTAdb82+s7JafGvZ3FEHuqHr/ALL7sxZ5&#xA;yeTtMGghDc7lmvk7TFk8vQXMrGS6u+Us0jblqsQu58FplVOWTumca32nyF7ZyFJq0Z3U/MZKMiOT&#xA;ExBTnTvMFpcjhKRBOG4FD9kmgOzdO+ZEcgLRLGQmmWMFyzMm9dh+GIKFfS9dsdQt1ntZ47mBiQs0&#xA;TBhUGh3G2TjO0JkrKwqpqMmhvFXYq7FXYq8k/NPS7KwvI2tU9MXEZd0H2Q3KnwjtkJOJlxiPJJ4P&#xA;+USuP+Yab/iLZV1c7T/3YY7pE/DR3QGhkeh+Q65ZLm1zOyobeW5kQQKXWEDiegqNyTX3xArmscRJ&#xA;RkGmKrc5/icmpUbCvXfAZ9zkRxgI0KAAAKAdAMg2OwJVIvUrt09+mFCKhsL67bjAhKD7TdAPmcaR&#xA;YCdWGgW1vR5v30vuPhHyH9cIDEyTTCxdTFVaGSWtKch44QhueSUGgHFf5sSqHwJapirgSDUbHFUT&#xA;DcMx4sKnxGEFCD1K0tLpvij4yD/do2bb/PviUh5r5s0u/fV10yyiaYAeu4jU05SEgM3YUVR1zEzE&#xA;mTfiAEURpXkLgBLqLcm6+gvT6TkBFmZsusbqSwjSBFBt0FFQbcR7ZJgmM2p272rFHHqNREVuodth&#xA;tjShe+lwekEj6AU36n3yJCbat73UNPPE/vbcf7rY9B/kt2ycchDGUAU30jXNP1WD1bSStCQ6HZgQ&#xA;aHMiMwWiUCGB/pWPy95tk07Sl9PRrm5jlmijUVSf+5lRVJrxbip9jWnbKuKjQce6Oz1GK5eM9cyA&#xA;W2lTQNcg1mzkuoFZY0laIFti3EA8qduuWA2ghMsKHYq7FWB/mX5a1PV3tpLJVbghjYMeNKtWu+Qk&#xA;1ZcZkNkij8p6hHo508yRsXjaKRwSKcwQaVHvkOHe3JxDhjwpTZfl3f28YjmdJVViVCsRUGnWo/Vk&#xA;ySkAJmvlrUY1CpEgUdArAZCiz4g0/l3VD/ukH3DL/E4KTxBDyeXtWU/3Fa+DL/XGiniDUWh6i2/1&#xA;d+tKEcf10xpeIJ1p/loCkl4an/fKnb/ZH+mERYGSeRxxxoEjUIg6KBQZJi08Ktv0PjjSqDRODSlf&#xA;AjAq9Lfu/wB2NLauAAKDYYUOIBFDuMVUZLYHdNj4Y0m0OUYGhG/hgSqx2xO77Dw740i0QqKoooph&#xA;Vp40cUYfTiqTagsthcvcLbma2lA9eVKc0K7Dau4plM4b22RN7Oie2uo/UgcOvenUHwI6jKmSlLb+&#xA;2Ck2hJLfuOo6YKSirXVJ4iFmHNP5v2h/XG1pJPNPnzTY4Ws7T/SZjtIVNFHsW/XTIkhnEFjPlnV7&#xA;+XUbuTnxUWk1IkHFAHZedFHcgnfrhgefuYZx6U2/LrRbrU9bOqajcqLe1m9K1tWNJHliRZSVXpxX&#xA;1Aa5Zji6+A3evZkNyW/lh/yjsv8AzFSf8RXLIckS5suyTF2KuxVplVgQwqD1BxVAXekxyVaPZvD+&#xA;3ImPcyBSee1lhYhgdsiytRxVY0wGy7n8MUqLEsak1wJXJKy7HcYUKyurDY4quxQpvKq7Dc42lQaR&#xA;2Na/KmBVRJ+z/fhtVYEEVBqMUN4qseVU9z4DG0odp5C1elOgwWqrHcK2zbH8MNrSrihvFVjyIg+I&#xA;/R3xSkd/pSSy/WLJ/qdyP2k+y3swyuUbZxlSGXVpbdxBq0XosdluU3ib+mVEEc2Y35I1okdA6EMj&#xA;bqwNQRkaV5z521u5N++nQSFLeIAS8T9tiK7kdqHKpFuiGNW1pcXMnCFC57nsPmcAiTyZE09Lj/LY&#xA;NolrcafNxu5YI3uIXPwOzKrMA4AIHIbA7fLM+GEAbc3BlluW7HvLc3mbyrrN16+nfWWqzETSenxR&#xA;uKlg7fAoPBRy6dshCBB3YQhzNvVPK/mSHXbOWdE9NoZPTceJoDUe2+TKSr/lh/yjsv8AzFSf8RXL&#xA;IckS5suyTF2KuxV2KuxVbJFHItHFRgIVKL7RSQWhP0f2ZExZCSSywSRGjinv2yLNTpil2KqkMEkh&#xA;quw/mxQiZLRygCv8Q6174VQTxuhowocCVuKuxVUhjlZv3Y+Z7YoRE1vcBBwIP8wHX6MKoIgg0PXA&#xA;l2KtUxVUieQGi7jwxCFWZ5FGwoO564SqFO5qeuRS6mKrJIo5EKSKHRuqsKg4qk1zoF0iuulysqSf&#xA;atCSVP8AqntlZx9zYJ97Db3yveSalLPqEMkIPFRHxpy4Iqkg+FRlQxb7tvH3Jvp+i3DgRW0HpxD9&#xA;ojio9698uEWsyZ5pt6ba1htrkACJFjEyVK0UU+IdR/n0y+M3GnDewxH81XaQ6UsTF0cSlQpqGPwU&#xA;Ip164ZIgEu8pXk2lIDJWNjJ6mx6qQAVb7spkd28R2ekflh/yjkn/ADFSf8RXLYcmmXNl2SYuxV2K&#xA;uxV2KuxV2KqNxZwTqQ67nvgItIKR3uiyRVaPdfwyBFMhJQis1XeT4m8O2KbRGKuxVp0RxRhUYqgp&#xA;7MoCymq9wdiMCbXw2I2aQ1/yRhW0UqhRQCgHYYobxVTmt4pR8Qo38w64qgZrSSPenJfEYErUgJ3b&#xA;YeGGltXChRQCmKG8VUngVtxsfwxpKHeNlNCMCq8FjI+7/Av440to+KCOIUQU8T3woXMiuvFgCD2O&#xA;KoKfTv2oT/sD/A4KTaCZWU0YUI6g4EpLqR065uEtordr6/3EUENagt9qpGw6b40m6TfQ/wAtubC5&#xA;1pgqndbCJjQezvWp+S/fkxBhKZLOra1trWBILaJYYUFEjQBVH0DJtarirsVdirsVdirsVdirsVdi&#xA;qFuNPik3T4G8O2RMUgpbNbyxGjCnhkWVqWKVCW7RNl+JvwxWkHJI8hqxr4DtiluKeSPoar/KemKo&#xA;2K5jk2+y3gcUKuKqU1zHHt9pv5R/HFUDNcSyHc0Xso6YEtJMRsdxhVWVlYVBriq7FC1nVep+jFKg&#xA;07kgj4abjAqJhvx0lFP8ofxxWkWrBhVTUHuMKG8VQWp6zp+mxhrmSjt9iJfidvkoxVCQ6P5g8wlX&#xA;ugdJ0zqE63Mi/wDGgPv9xwiNoMmVaRoWl6RB6NjAsQP25Ort/rMdzkgGJKPwodirsVdirsVdirsV&#xA;dirsVdirsVdirTIrLxYVB7HFUuvdJEin0mI/ya5AxZApFcWc0DEMuw75FmCo0wq1TFV8cMkh+EfT&#xA;2xVGGGT0uHqHl4/574oQUkMkZow+R7YpWYEtYqujSRmogJOKEW1tP6ezAv3H9uFUEysrEMCG71wJ&#xA;axV1MVWvfLZIZZJRHGOpY7Yqttr3X9d+DR4Pq1qdn1KcfD7+mp+1/n0wgWxJAZDonlDTNMk+svyv&#xA;NQO73k/xPX/JBrx/X75MRpgSnmFDsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVWSwRSrR1r4H&#xA;vgItUmvdEIq8O48B/TIkMxJBR2XE1k3PgOmBNogAAUAoB2xV2KuIBFCKg9jiqFmsxQshp4g9PvxT&#xA;ayC0DgM5+HwGK2jFRUFFFBihvFVskSSCjivge+KoGezaMF1NUG5r1AwJtJhqVze3BtNFtze3A+3I&#xA;NoU92fpipKfaV5DhEi3euS/pC7G6w9LdPYLty+nb2yYiwMmVqqqoVQFVRRVGwAHYZJi3irsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqhPZxS1NOLfzD+OAxSCltxZyxbkVX+YdMgdmQK&#xA;hilRluETb7TeAxVByzSSfaO3gOmKWo5HjNVNPbtiqLiu0bZvhb8MUK+KpZqPmCzs5RbRhru+faO0&#xA;gHJyfenTFW7byrrGrkTa9N9WtDuumQNuf+Mrj9Q/DCIoMmWWVhZ2NutvZwpBCvREFB8z4n3ybBXx&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuIBFDuMVQdzpscgPD4Se3b+&#xA;zImKQUjutNmhY0BI8O/9uRZgoMjxxS6mKoW+1GzsY/UuZAgP2V6sfkMCt2Gn+Z9bWqltJ0tv92OP&#xA;9Icf5K/sg/51wgWgyZXovl3SdHiK2UNJG/vLh/ilf/Wb+A2yYFMCUywodirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirTojrxcAjwONKll5o6vVo9z+P9uQMWQkxa&#xA;5t9futQl07TLbh6RAmv5vhiWqhqL/MRXAAWVp5onkvTdPlF3csb/AFHqbmbcKf8AITcL+vJCLAlk&#xA;OSQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 49-c</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>142</xmpG:green>
                           <xmpG:blue>107</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 49-f</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>218</xmpG:red>
                           <xmpG:green>205</xmpG:green>
                           <xmpG:blue>185</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 49-e</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 29-h1</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>225</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>233</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 29-g5</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>161</xmpG:red>
                           <xmpG:green>167</xmpG:green>
                           <xmpG:blue>168</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 29-g4</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>175</xmpG:red>
                           <xmpG:green>182</xmpG:green>
                           <xmpG:blue>183</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 33-g4</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>174</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>186</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 33-g6</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>150</xmpG:green>
                           <xmpG:blue>155</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 29-g2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>203</xmpG:red>
                           <xmpG:green>212</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 29-g7</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>134</xmpG:red>
                           <xmpG:green>138</xmpG:green>
                           <xmpG:blue>138</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 50-b6</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>63</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 50-e4</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>133</xmpG:red>
                           <xmpG:green>116</xmpG:green>
                           <xmpG:blue>108</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 46-f</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>217</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 46-g</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>234</xmpG:green>
                           <xmpG:blue>238</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>TRUMATCH 46-e</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>227</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>199</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Soft 5 </xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=1 M=1 Y=7 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>233</xmpG:green>
                           <xmpG:blue>222</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=7 K=18</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>206</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>193</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=7 M=1 Y=8 K=18</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>191</xmpG:red>
                           <xmpG:green>195</xmpG:green>
                           <xmpG:blue>189</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Light 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=1 M=1 Y=7 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>236</xmpG:red>
                           <xmpG:green>233</xmpG:green>
                           <xmpG:blue>222</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DocumentID>xmp.did:adadd7eb-a6c3-4e71-9ca1-247b91fe80ff</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:adadd7eb-a6c3-4e71-9ca1-247b91fe80ff</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:23d63f27-4000-5441-9cbc-eb1eaf1b6a3d</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2655fe11-31fb-40a6-a89d-f9a1196976ef</stRef:instanceID>
            <stRef:documentID>xmp.did:2655fe11-31fb-40a6-a89d-f9a1196976ef</stRef:documentID>
            <stRef:originalDocumentID>uuid:23d63f27-4000-5441-9cbc-eb1eaf1b6a3d</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2655fe11-31fb-40a6-a89d-f9a1196976ef</stEvt:instanceID>
                  <stEvt:when>2020-03-11T16:35:38+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:adadd7eb-a6c3-4e71-9ca1-247b91fe80ff</stEvt:instanceID>
                  <stEvt:when>2020-03-11T16:35:51+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
437.958 296.4 mo
444.013 299.891 450.061 303.389 456.116 306.887 cv
445.086 313.262 li
426.919 302.774 li
430.596 300.645 434.28 298.522 437.958 296.4 cv
.580392 .521569 .498039 rgb
f
459.327 306.266 mo
445.086 314.497 li
423.709 302.153 li
431.233 297.815 li
431.233 297.808 li
437.958 293.929 li
459.327 306.266 li
456.116 306.887 mo
457.189 306.266 li
437.958 295.164 li
425.847 302.153 li
426.919 302.774 li
445.086 313.262 li
456.116 306.887 li
.886273 .907793 .914781 rgb
f
457.189 306.266 mo
456.116 306.887 li
450.061 303.389 444.013 299.891 437.958 296.4 cv
437.958 295.988 437.958 295.576 437.958 295.164 cv
457.189 306.266 li
f
437.958 295.164 mo
437.958 295.576 437.958 295.988 437.958 296.4 cv
434.28 298.522 430.596 300.645 426.919 302.774 cv
425.847 302.153 li
437.958 295.164 li
.634179 .658432 .659075 rgb
f
459.327 320.405 mo
459.327 322.722 li
445.086 330.946 li
445.086 314.497 li
459.327 306.266 li
459.327 320.405 li
f
445.086 314.497 mo
445.086 330.946 li
423.709 318.609 li
423.709 305.985 li
423.709 302.153 li
445.086 314.497 li
.886273 .907793 .914781 rgb
f
473.794 323.313 mo
473.794 327.961 li
285.113 436.893 li
285.113 432.244 li
321.905 411.007 li
358.698 389.762 li
395.49 368.516 li
432.291 347.278 li
469.083 326.033 li
469.083 276.679 li
473.794 273.958 li
473.794 323.313 li
.74902 .764706 .741176 rgb
f
473.794 273.958 mo
469.083 276.679 li
227.247 137.058 li
227.247 131.616 li
473.794 273.958 li
.94902 .945098 .921569 rgb
f
372.349 246.144 mo
371.073 245.678 369.993 245.53 368.851 245.608 cv
368.415 245.631 368.026 245.748 367.669 245.957 cv
352.16 254.913 li
352.16 254.415 li
359.289 250.303 li
359.289 249.067 li
309.421 220.282 li
297.668 227.068 li
297.154 226.772 li
297.154 226.127 297.154 225.49 297.154 224.845 cv
297.411 224.689 297.676 224.542 297.932 224.394 cv
298.344 224.153 li
298.344 206.476 li
293.991 203.965 li
294.006 202.744 293.61 201.532 292.615 200.957 cv
284.903 196.502 277.2 192.056 269.488 187.602 cv
268.509 187.034 267.374 187.368 266.488 188.091 cv
265.648 187.602 li
247.481 198.088 li
227.247 186.412 li
227.247 167.631 li
238.153 161.334 li
238.153 160.518 li
227.464 154.346 li
227.247 154.47 li
227.247 137.058 li
469.083 276.679 li
469.083 326.033 li
459.327 320.405 li
459.327 306.266 li
437.958 293.929 li
431.233 297.808 li
431.233 292.304 431.233 286.784 431.233 281.281 cv
431.233 281.273 li
431.233 280.946 431.094 280.612 430.915 280.325 cv
430.627 279.851 430.23 279.517 429.811 279.189 cv
423.071 275.303 li
423.024 275.389 li
415.383 270.973 407.733 266.565 400.093 262.15 cv
399.19 261.629 398.149 261.94 397.294 262.57 cv
397.053 262.43 li
397.029 261.342 396.672 260.168 395.747 259.64 cv
388.105 255.224 380.456 250.816 372.814 246.401 cv
372.659 246.315 372.496 246.245 372.333 246.199 cv
372.349 246.144 li
.92549 .913725 .870588 rgb
f
432.291 347.278 mo
432.291 347.278 li
396.423 326.567 li
398.092 327.037 399.838 327.317 401.701 327.321 cv
402.296 327.323 402.89 327.326 403.483 327.326 cv
407.143 327.326 410.749 327.193 414.12 325.597 cv
417.399 324.044 420.549 322.202 423.68 320.359 cv
424.097 320.114 424.454 320.005 424.796 320.005 cv
425.175 320.005 425.535 320.14 425.935 320.372 cv
431.985 323.897 438.038 327.42 444.097 330.933 cv
445.413 331.696 446.731 332.267 448.351 332.267 cv
448.4 332.267 448.449 332.267 448.499 332.266 cv
448.815 332.259 449.131 332.256 449.448 332.256 cv
452.051 332.256 454.687 332.47 457.569 332.589 cv
457.067 332.927 456.846 333.096 456.606 333.234 cv
456.104 333.526 455.601 333.817 455.098 334.108 cv
432.291 347.278 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 365.259 522.174 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.878431 .854902 .835294 ]
/C1 [.768627 .709804 .670588 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 365.259 522.174 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~i8<GLhr!>Khr!;IhVR,GhVR,Fh;-oCh;-oCgt^]?gt^]?gtUT<gY:K;gY:H9g=k97g=k96g"G'3g"G'3
g"=s0f\"j/f\"g-f@SX+f@SX*f%/F'f%/F'e^`4#e^`4#e^W*ueC<!teC;sre'ldpe'ldodaHRldaHRl
da?IidF$@hdF$=fd*U.dd*U.ccd0q`cd0q`cHa_\cHa_\cHXVYc-=MXc-=JVbfn;Tbfn;SbKJ)PbKJ)P
bK@uMb0%lLb0%iJaiVZHaiVZGaN2HDaN2HDa2c6@a2c6@a2Z-=`l?$<`l?!:`Pog8`Pog7`5KU4`5KU4
~>
<~g=b04g"G'2f\"j/f\"g-f@SX+f@JO(f%/F'e^`4#e^`4"eC<!teC;sre'ldpe'c[mdaHRldF$@hdF$@g
d*U.dd*U+bcd0q`cd'h]cHa_\c-=MXc-=JVbfn;Tbfe2QbKJ)Pb0%lLb0%lKaiVZHaiVWFaN2HDaN)?A
a2c6@`l?$<`l?$;`Pog8`Pod6`5KU4`5BL1_o'C0_SX1,_SX1+_83t(_8*k%^qdb$^V@Ou^V@Ot^:q=q
^:q:o]tM+m]tD"j]Y(ni]=Y\e]=Y\d]"5Ja]"5G_\[f8]\[]/Z\@B&Y\$riU\$riT[^NWQ[^NTO[C*EM
~>
<~e^W*ueC<!se'ldpe'c[mdaHRkdF$@hdEp7ed*U.ccd0q`cd'h]cHa_[c-=MXc-4DUbfn;SbKJ)PbK@uM
b0%lLaiVZHaiVWFaN2HDa2c6@a2c3>`l?$<`Pog8`Pod6`5KU4_o'C0_o'@._SX1,_83t(_83q&^qdb$
^q[Y!^V@Ot^:q=q^:h4n]tM+l]Y(ni]Xtef]=Y\d]"5Ja]",A^\[f8\\@B&Y\@8rV\$riT[^NWQ[^ENN
[C*EM['[3I['[0GZa7!EZEgdAZEga?Z*CR=Yct@9Yct=7YHP.5Y-+q1Y-+n/Xf\_-XK8M)XK8J'X/i;%
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
432.291 347.278 mo
395.49 368.516 li
355.192 345.25 li
391.984 324.005 li
392.155 324.105 li
392.163 324.113 li
392.249 324.207 392.35 324.292 392.459 324.362 cv
392.614 324.463 392.793 324.541 392.995 324.588 cv
432.291 347.278 li
.917647 .894118 .87451 rgb
f
431.233 281.281 mo
431.233 286.784 431.233 292.304 431.233 297.808 cv
431.233 297.815 li
423.709 302.153 li
423.709 305.985 li
414.442 311.334 405.169 316.682 395.902 322.038 cv
395.902 322.046 li
395.234 322.427 394.558 322.815 393.889 323.204 cv
394.208 322.994 394.402 322.652 394.402 322.162 cv
394.402 311.31 li
394.402 307.999 395.685 304.68 397.714 302.021 cv
398.413 301.111 399.229 300.381 400.186 299.837 cv
430.588 282.276 li
430.86 282.12 431.102 281.856 431.194 281.56 cv
431.218 281.468 431.233 281.374 431.233 281.281 cv
.65076 .558702 .423055 rgb
f
391.977 318.112 mo
391.984 318.05 li
391.984 309.911 li
391.984 306.607 393.26 303.288 395.296 300.621 cv
395.988 299.712 396.812 298.989 397.761 298.438 cv
407.244 292.957 li
423.366 283.659 li
423.366 283.651 li
426.709 281.724 li
427.681 281.164 427.813 280.192 426.709 279.555 cv
424.338 278.18 li
424.322 278.18 li
424.292 277.036 423.941 275.917 423.024 275.389 cv
423.071 275.303 li
429.811 279.189 li
430.23 279.517 430.627 279.851 430.915 280.325 cv
431.094 280.612 431.233 280.946 431.233 281.273 cv
431.233 281.281 li
431.233 281.374 431.218 281.468 431.194 281.56 cv
431.102 281.856 430.86 282.12 430.588 282.276 cv
400.186 299.837 li
399.229 300.381 398.413 301.111 397.714 302.021 cv
395.685 304.68 394.402 307.999 394.402 311.31 cv
394.402 322.162 li
394.402 322.652 394.208 322.994 393.889 323.204 cv
393.851 323.228 li
393.71 323.305 li
393.252 323.515 392.614 323.444 391.992 323.258 cv
391.409 323.087 390.842 322.823 390.43 322.582 cv
386.621 320.382 li
387.43 318.982 li
388.253 319.457 389.163 319.527 389.94 319.239 cv
389.94 319.247 li
391.34 319.527 391.953 318.929 391.977 318.112 cv
.783513 .709264 .599522 rgb
f
426.709 279.555 mo
427.813 280.192 427.681 281.164 426.709 281.724 cv
423.366 283.651 li
423.639 282.338 423.911 281.04 424.19 279.734 cv
424.292 279.244 424.346 278.708 424.322 278.18 cv
424.338 278.18 li
426.709 279.555 li
.65076 .558702 .423055 rgb
f
407.244 292.957 mo
407.244 292.957 li
407.236 292.941 li
401.313 289.513 395.39 286.093 389.458 282.673 cv
388.961 282.014 388.773 281.149 388.772 280.284 cv
388.772 280.231 388.773 280.177 388.774 280.123 cv
388.774 280.123 li
388.775 280.114 388.775 280.105 388.775 280.096 cv
388.792 279.678 388.846 279.275 388.93 278.887 cv
389.262 277.305 389.595 275.722 389.927 274.139 cv
390.933 270.984 392.519 267.786 394.385 265.472 cv
394.998 264.84 395.611 264.209 396.224 263.576 cv
396.299 263.514 396.375 263.453 396.45 263.394 cv
396.677 263.218 396.84 263.035 396.953 262.849 cv
396.986 262.821 397.019 262.793 397.053 262.765 cv
397.053 262.765 li
397.294 262.57 li
397.3 262.566 397.307 262.561 397.313 262.556 cv
397.32 262.551 397.327 262.546 397.334 262.541 cv
397.877 262.15 398.492 261.889 399.098 261.887 cv
399.1 261.887 399.103 261.887 399.105 261.887 cv
399.105 261.887 li
399.106 261.887 399.107 261.887 399.108 261.887 cv
399.44 261.887 399.769 261.966 400.082 262.144 cv
400.085 262.146 400.089 262.148 400.093 262.15 cv
407.733 266.565 415.383 270.973 423.024 275.389 cv
423.39 275.599 423.665 275.903 423.866 276.265 cv
423.747 276.153 423.628 276.042 423.509 275.929 cv
422.862 276.933 423.182 278.689 422.403 279.678 cv
420.479 282.12 417.221 285.86 415.249 288.266 cv
415.25 288.267 415.253 288.268 415.256 288.268 cv
415.302 288.268 415.539 288.154 415.918 287.955 cv
407.244 292.957 li
level3{
gsave
clp
[14.6836 -27.9552 27.9552 14.6836 400.29 289.775 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.858824 .803922 .72549 ]
/C1 [.909804 .835294 .72549 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.909804 .835294 .72549 ]
/C1 [.678431 .596078 .466667 ]
/N 1 
>>
]
/Bounds [.370267 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.6836 -27.9552 27.9552 14.6836 400.29 289.775 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~gY:K;gY:K;gt^]?gt^]@h;-oCh;-rEhVR,GhVR/Ihr!>Khr*GNi8EPOiSibSiSibSio8tWio8tXj5]1[
j5]4]jQ,C_jQ5LbjlPUcjlY^fk2tggkND$kkND$kkND!ik2k^cjQ,@]j5T(XiSi_Qi8<GLhVR,Fh;$f@
gY:K:g=k65f\"j.f@SU)e^`4"eC;sre'c[ldF$=fd*L%acHa\Zc-4DUbKJ)Ob/qcIaN2HCa2Z-=`Pog7
`5KR2_SX1+_83q&^q[Xu^:q:o]tD"j]=YYc]",A^\@B#W\$i`R[C*EL['R*FZEgd@Z*CO;YHP.4Y-+n/
~>
<~c-=MXc-=MXc-=MXcHa_\cHa_\cHa_\cd0q`cd0q`cd0q`d*U.dd*U.dd*U.ddF$@hdF$@hdF$@hdaHRl
daHRldaHRle'ldpe'ldpe'ldqeC<!teC<!teC<!teC;sre'c[ldF$=fd*L%`cHa\Zbfn;SbKJ&NaiVZG
aN2EB`l?$;`Pod6_o'C/_SX.*^qdb#^V7Fr]tM+l]Xtef]"5J`\[]/Z\$riT[^ENN['[3HZa-mBZ*CO;
Yck76Y-+n/XfSV*X/i8#Wi;tsW2QVlVl$>gV59u`Una]ZU8"?TTqJ'NT:_^HSt2FBS=H(<S!oe6R@0G0
~>
<~\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]
\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8\\@B#W[^NWP[C!<JZa6sCZ*CR<Yck76Y-+n/XfSV)
X/`2"WMuhpW2HPjVP^2dUnjf]US=KVTqS-PT:_aISt2FCS=H(<S!oe6R@'A/Q^=#(QBd`"Pa%AqP*1uj
OcYZcO,o<]NK&pVN/NUPMMd7IM26tCLPCP<KnY25KS+o/JqAQ)J:N0"IsuipI=6KjH[C*cH?jd]G^+FV
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
386.375 316.896 mo
386.134 316.896 385.766 316.682 385.109 316.303 cv
378.428 312.445 371.752 308.577 365.069 304.722 cv
356.257 299.638 347.442 294.559 338.623 289.484 cv
337.433 288.8 336.216 288.16 335.011 287.5 cv
334.924 287.611 334.837 287.723 334.75 287.834 cv
334.979 288.194 335.208 288.554 335.435 288.91 cv
334.601 288.236 334.095 287.188 334.095 286.124 cv
334.095 285.906 334.095 285.681 334.095 285.463 cv
334.095 285.463 li
334.095 285.095 334.095 284.732 334.095 284.37 cv
334.243 283.07 334.3 282.32 334.532 281.788 cv
334.77 281.393 335.101 281.058 335.518 280.822 cv
335.717 280.707 335.916 280.592 336.115 280.477 cv
336.62 280.23 337.274 279.943 338.126 279.555 cv
338.572 279.352 339.028 279.145 339.502 279.028 cv
343.348 278.07 346.883 276.436 350.27 274.386 cv
354.347 271.92 358.509 269.597 362.53 267.282 cv
362.617 267.355 362.71 267.422 362.811 267.482 cv
384.905 280.24 li
384.89 280.244 384.874 280.249 384.858 280.253 cv
384.875 280.333 385.412 280.576 385.86 280.791 cv
386.465 281.141 li
386.465 281.141 li
387.107 281.311 387.248 281.368 387.894 281.523 cv
388.114 281.577 388.283 281.602 388.412 281.602 cv
389.038 281.602 388.724 281.009 388.774 280.123 cv
388.773 280.177 388.772 280.231 388.772 280.284 cv
388.773 281.149 388.961 282.014 389.458 282.673 cv
395.39 286.093 401.313 289.513 407.236 292.941 cv
407.244 292.957 li
397.761 298.438 li
396.812 298.989 395.988 299.712 395.296 300.621 cv
393.26 303.288 391.984 306.607 391.984 309.911 cv
391.984 311.574 li
390.735 312.504 389.452 313.45 388.19 314.425 cv
387.762 314.756 387.191 315.123 387.06 315.582 cv
386.796 316.499 386.704 316.896 386.375 316.896 cv
level3{
gsave
clp
[24.5667 -42.074 42.074 24.5667 363.23 300.488 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.858824 .803922 .72549 ]
/C1 [.678431 .596078 .466667 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[24.5667 -42.074 42.074 24.5667 363.23 300.488 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~gY1B8g=k65g"G'3f\"j/f[na,f@SX*f%/F'e^`4#e^`1!eC<!se'ldpe'c[mdaHRkdF$@hd*U.dd*U+b
cd0q_cHa_\cHXVYc-=JVbfn;TbKJ)PbKJ&Nb0%lKaiVZHaiMQEaN2EBa2c6@`l?$<`l5p9`Pog7`5KU4
`5BL1_o'@._SX1,_83t(_8*k%^qdb#^V@Ou^:q=q^:q:o]tM+l]Y(ni]Xtef]=Y\d]"5Ja\[f8]\[f5[
\@B&X\$riU\$i`R[^NTO[C*EM['[3I['[0GZa7!DZEgdAZE^[>Z*CO;Yct@9YHP.5YHG%2Y-+q0Xf\_-
~>
<~c-4DUbfe2QbKJ&Nb0%lKaiVZHaN2HDaN)?Aa2Z-=`l?!:`Pog7`5KU4_o'C0_ns:-_SX.*_83q&^qdb#
^V@Ou^:q=q^:h4n]tM(k]Y(nh]=Y\d]"5Ja\[f8]\[]/Z\@B#W\$riT[^NWQ[C*EM['[3I['R*FZa6sC
ZEgd@Z*CR=Yct@9Yck76YHG%2Y-+n/Xf\_,XK8M)X/i;%X/`2"WiE%tWMuhpW2QYmVl-GjVP^5fVPU,c
V59u`Unjf]USFTYU8"BVTqS0RTqJ'OTV.pLT:_aISt;OFSXl=BS=H+>S=?";S"#k8R[T\5R@0J2R$a8.
~>
<~\[]/Z\$riU[^NWQ[C*EM['[3IZa7!EZEgdAZ*CR=Yct@8YHP.4Y-+q0Xf\_,XK8M(X/i;$WiE(uWMukq
W2QVlVl-DhVP^2dV59u`Unjc\USFQXU8"?TTqS-PTV%jKT:VXGSt2FCSXc4?S=?";S!oe7R[KS3R@'A/
Q^=&*QBmi&Q'IW"Pa%DsPEV2oP*1ukOcbcgOH>QcO,o?^NfK-ZNK&pVN/W^RMi3LNMMd:JM2@(FLkpkB
LPLV=L5(D9KnY25KS4u1K7ec-JqAQ)JUr?%J:N-!IsuiqIXQWmI=-EiI!^3eH[:!aH?jd]H$FRYG^"@U
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
386.465 281.141 mo
385.86 280.791 li
386.179 280.944 386.453 281.084 386.465 281.141 cv
384.905 280.24 mo
362.811 267.482 li
362.71 267.422 362.617 267.355 362.53 267.282 cv
362.652 267.211 362.774 267.141 362.896 267.07 cv
362.538 264.185 362.626 260.692 362.952 257.535 cv
363.234 255.309 363.721 253.807 364.459 252.593 cv
364.676 252.275 364.911 251.987 365.158 251.733 cv
365.866 251.001 366.577 250.268 367.289 249.536 cv
367.349 249.485 367.41 249.434 367.472 249.383 cv
367.463 249.377 367.464 249.364 367.474 249.345 cv
367.599 249.217 367.724 249.088 367.849 248.96 cv
368.178 248.658 368.591 248.3 368.531 248.259 cv
368.531 248.259 li
368.531 248.259 li
368.531 248.259 li
368.811 247.963 369.092 247.676 369.379 247.38 cv
369.379 247.38 li
369.385 247.374 369.392 247.367 369.398 247.36 cv
369.403 247.356 369.407 247.352 369.411 247.348 cv
369.419 247.34 369.427 247.332 369.435 247.324 cv
369.435 247.324 369.435 247.324 369.435 247.324 cv
370.099 246.66 370.969 246.141 371.825 246.137 cv
371.829 246.137 371.832 246.137 371.835 246.137 cv
371.836 246.137 371.836 246.137 371.837 246.137 cv
371.999 246.137 372.161 246.156 372.322 246.196 cv
372.325 246.197 372.329 246.198 372.333 246.199 cv
372.333 246.199 li
372.496 246.245 372.659 246.315 372.814 246.401 cv
380.456 250.816 388.105 255.224 395.747 259.64 cv
396.251 259.928 396.587 260.408 396.792 260.961 cv
396.181 261.893 395.652 263.042 394.819 263.896 cv
391.262 267.538 388.302 271.464 387.845 276.774 cv
387.723 278.188 386.561 279.772 384.905 280.24 cv
388.775 280.096 mo
388.846 278.31 389.259 276.233 389.927 274.139 cv
389.595 275.722 389.262 277.305 388.93 278.887 cv
388.846 279.275 388.792 279.678 388.775 280.096 cv
394.385 265.472 mo
394.973 264.742 395.589 264.101 396.224 263.576 cv
395.611 264.209 394.998 264.84 394.385 265.472 cv
396.953 262.849 mo
396.995 262.78 397.03 262.711 397.058 262.642 cv
397.057 262.684 397.056 262.725 397.053 262.765 cv
397.053 262.765 li
397.019 262.793 396.986 262.821 396.953 262.849 cv
level3{
gsave
clp
[14.6836 -27.9552 27.9552 14.6836 372.073 274.954 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.6836 -27.9552 27.9552 14.6836 372.073 274.954 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
395.902 322.046 mo
395.902 322.559 395.902 323.056 395.902 323.569 cv
395.902 323.896 395.653 324.191 395.312 324.386 cv
394.728 324.72 393.741 324.806 392.995 324.588 cv
392.163 324.113 li
392.155 324.105 li
391.937 323.864 391.821 323.569 391.992 323.258 cv
392.614 323.444 393.252 323.515 393.71 323.305 cv
393.851 323.228 li
393.889 323.204 li
394.558 322.815 395.234 322.427 395.902 322.046 cv
.65076 .558702 .423055 rgb
f
358.698 389.762 mo
358.698 389.762 li
318.392 366.495 li
355.192 345.25 li
395.49 368.516 li
358.698 389.762 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 311.286 504.139 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 311.286 504.139 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
392.155 324.105 mo
391.984 324.005 li
351.679 300.738 li
352.13 300.474 li
386.621 320.382 li
390.43 322.582 li
390.842 322.823 391.409 323.087 391.992 323.258 cv
391.821 323.569 391.937 323.864 392.155 324.105 cv
.807843 .8 .756863 rgb
f
355.192 345.25 mo
355.192 345.25 li
314.886 321.976 li
350.807 301.241 li
357.42 305.063 364.04 308.873 370.654 312.693 cv
376.126 315.853 381.604 319.004 387.063 322.185 cv
388.431 322.981 389.796 323.762 391.188 324.465 cv
355.192 345.25 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 294.752 498.615 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 294.752 498.615 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
390.375 319.045 mo
390.912 318.734 391.44 318.423 391.977 318.112 cv
391.953 318.929 391.34 319.527 389.94 319.247 cv
389.94 319.239 li
390.088 319.192 390.235 319.123 390.375 319.045 cv
.65076 .558702 .423055 rgb
f
335.074 290.602 mo
333.761 289.777 332.734 288.713 331.934 287.391 cv
331.639 286.893 331.49 286.38 331.49 285.836 cv
331.49 274.984 li
331.49 274.845 331.49 274.712 331.498 274.572 cv
331.592 271.657 332.656 268.75 334.359 266.309 cv
334.499 266.099 334.646 265.897 334.802 265.695 cv
335.494 264.785 336.318 264.063 337.267 263.511 cv
345.04 259.025 li
348.601 256.965 li
352.16 254.913 li
367.669 245.957 li
368.026 245.748 368.415 245.631 368.851 245.608 cv
369.993 245.53 371.073 245.678 372.349 246.144 cv
372.333 246.199 li
371.299 245.935 370.18 246.556 369.379 247.38 cv
369.092 247.676 368.811 247.963 368.531 248.259 cv
339.684 264.91 li
338.735 265.454 337.911 266.185 337.22 267.094 cv
335.183 269.753 333.908 273.072 333.908 276.384 cv
333.908 284.522 li
333.908 284.841 333.986 285.168 334.095 285.463 cv
334.095 285.681 334.095 285.906 334.095 286.124 cv
334.095 287.367 334.786 288.588 335.883 289.218 cv
353.07 299.144 370.25 309.063 387.43 318.982 cv
386.621 320.382 li
352.13 300.474 li
337.259 291.884 li
337.251 291.884 li
335.463 290.851 li
335.331 290.772 335.198 290.694 335.074 290.602 cv
.783513 .709264 .599522 rgb
f
368.531 248.259 mo
367.404 249.417 366.277 250.575 365.158 251.733 cv
364.303 252.612 363.588 253.91 363.284 255.363 cv
362.74 257.952 362.188 260.549 361.645 263.138 cv
361.474 263.953 361.427 264.902 361.637 265.741 cv
352.93 270.764 344.224 275.793 335.518 280.822 cv
334.6 281.343 334.095 282.346 334.095 283.411 cv
334.095 284.095 334.095 284.771 334.095 285.463 cv
333.986 285.168 333.908 284.841 333.908 284.522 cv
333.908 276.384 li
333.908 273.072 335.183 269.753 337.22 267.094 cv
337.911 266.185 338.735 265.454 339.684 264.91 cv
368.531 248.259 li
.65076 .558702 .423055 rgb
f
330.791 265.523 mo
358.86 249.315 li
358.7 249.443 358.551 249.598 358.414 249.677 cv
351.624 253.55 344.851 257.452 338.08 261.359 cv
335.872 262.634 330.816 265.509 330.791 265.523 cv
359.169 249.137 mo
359.289 249.067 li
359.289 249.118 li
359.248 249.119 359.208 249.125 359.169 249.137 cv
359.289 249.067 mo
359.289 249.067 li
level3{
gsave
clp
[28.498 0 0 28.498 330.791 257.91 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.780392 .886275 .815686 ]
/C1 [.490196 .733333 .619608 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[28.498 0 0 28.498 330.791 257.91 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~a2Z-=`Pog7`5KU3_o'@._SX.*_8*k%^q[Y!^:q=q]tM+l]Y(nh]=YYc]",A^\[]/Z\$riU[^NWP[C*EL
['[0GZa6sCZE^[>Z*:I:YHP.5Y-+q0Xf\\+XK8J'X/`2"Wi;tsW2QYnVl-GiVP^5eV59u`Unjc\US=KW
TqS0RTV.sMT:_aISt;LDSXl:@S=?";S!oe7R@0J2R$a8-Q^=&)QBmf$Q'@MtP`q;pP*1ukOcbcfOH>Qb
O,o<]NfK*YNJrgTN/NUPMMd:KM2@(FLkphALPLV=L4t>8KnP,4K7ef/JqAT*JUrB&J:N-!It)orIXQWm
~>
<~io/kTiSibRi8EPOi8EMMhr!>KhVR,GhVR,Fh;-oCh;$f@gt^]?gY:K;gY:H9g=k97g=b04g"G'3f\"j/
f\"g-f@SX+f@JO(f%/F&e^`4#e^`1!eC<!te'ldpe'ldodaHRldaHOjdF$@hd*U.dd*U.ccd0q`cd'h]
cHa_\c-=MXc-=JVbfn;Tbfe2QbKJ)Ob0%lLb0%iJaiVZHaiMQEaN2HCa2c6@a2c3>`l?$<`Pog8`Pog7
`5KU4`5BL1_o'C0_SX1,_SX1+_83t(_8*k%^qdb$^V@Ou^V@Ls^:q=q^:h4n]tM+l]Y(ni]Y(kg]=Y\e
~>
<~d*L%acd0n^cHa_[c-=MXbfn;Tbfe2QbKJ&Nb0%lKaiVZHaN2HDaN)?Aa2c6?`l?$<`Pog8`Pf^5`5KR2
_o'C/_SX1,_83t(_8*k%^qd_"^V@Ou^:q=q^:h4n]tM(k]Y(nh]=Y\e]"5Ja]",A^\[f5[\@B&X\$riU
\$i`R[^NTO[C*EL['[3IZa7!EZa-mBZEga?Z*CR<Yct@9YHP.5YHG%2Y-+q0Xf\_-XK8M)XK/D&X/i8#
WiE(uWMukrW2QYnW2HPkVl-DhVP^5fV5:#bV50o_Unjc\USFTYU8"BVTqS0RTqJ'OTV.pLT:_aISt;OF
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
330.791 265.523 mo
280.924 236.73 li
293.317 229.579 li
296.59 227.701 299.969 225.768 302.439 224.37 cv
302.67 224.24 302.865 224.109 303.027 223.973 cv
309.421 220.282 li
359.289 249.067 li
359.169 249.137 li
359.062 249.168 358.959 249.236 358.86 249.315 cv
330.791 265.523 li
330.791 265.523 330.791 265.523 330.791 265.523 cv
330.791 265.523 li
level3{
gsave
clp
[101.655 6.98881 -6.98881 101.655 274.102 239.74 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.619608 .803922 .705882 ]
/C1 [.768627 .882353 .807843 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.768627 .882353 .807843 ]
/C1 [.490196 .733333 .619608 ]
/N 1 
>>
]
/Bounds [.470465 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[101.655 6.98881 -6.98881 101.655 274.102 239.74 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~St;OFT:_aKTV/!PTq\9UUSFTZUnjf_V5:&dVPg>iW2QYoWMuksWiE,#X/rD(Xf\_.Y-+t3YHP17Yd(I<
ZEgdBZa7$G['d<L[C3NP\$riV\@B)[\[oA`]=Y\e]Y(nj]tM.o^;%Ft^qdb%_83t)_SX4._o'C/_SO((
^q[Ut]tM(k]=YYc\[f5[\$rfS[C*BJZa-mAZ*:I9YHG%1XfSV)X/`2!W2QVlVP^2dUnjc\U8"?TTV.pL
St2FBS=?":R[KS2R$X/*QBd`"P`q8nOcb`eO,o<]NK&mUMi3IMM2@%DLPCP;KnP,3K7\]+JUi9#Isuip
~>
<~c-=MXc-=MYcHa_\cHjh_cd0qad*U.dd*^7gdF$@idaHRldaQ[oe'ldqeC<!teCE+"e^`4$f%/F'f%8O*
f@SX,f\"j/f\+s2g"G'4g=k97g=tB:gY:K<gt^]?gtgfBh;-oDhVR,GhV[5Jhr!>Li8EPOi8EPOi8<GL
hVR,Gh;-oBgt^]>gY:H9g=k65g"=s0f[na,f@JO(e^`4#eC<!se'ldodaHOjdF$=fd*U+bcd'h]cHXVY
bfn;TbKJ)Ob0%lKaiVZGaN2EBa2c3>`l5p9`Pf^5_o'C0_SX1,_83t'^qdb#^V@Ls^:q:o]tD"j]Xtef
~>
<~['[3I['d<L[C*HO[^NZS\$riV\@B&Y\[f8]]"5Ja]">Sd]=Y_g]Y(qk]tM+n^:q=r^V@Ou^qdb$^qmk'
_8=(+_SX4._o'C1`5KU5`Pog8`l?$<`lH-?a2l?CaN2KFaiV]Jb0%lMbKJ)Pbfn;Tc-=MXc-=MXbfn;S
bK@uMaiVZGaN2EBa2Z-=`Pod6`5BL1_SX1+_83q&^V@Ot^:q:o]tD"j]=Y\d]",A^\@B&X\$rfS[^ENN
['[0GZa-mBZ*CR<Yct=7Y-+q0Xf\\+XK/D&WiE(uWMlboVl-GiVP^2dV50o_USFQXU7n9STV.sMT:_^H
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
358.698 389.762 mo
321.905 411.007 li
281.6 387.732 li
318.392 366.495 li
358.698 389.762 li
.917647 .894118 .87451 rgb
f
355.192 345.25 mo
318.392 366.495 li
278.086 343.221 li
314.886 321.976 li
355.192 345.25 li
cp
.878431 .854902 .835294 rgb
f
352.16 254.415 mo
352.16 254.913 li
348.601 256.965 li
348.601 256.476 li
352.16 254.415 li
.634179 .658432 .659075 rgb
f
337.259 291.884 mo
352.13 300.474 li
351.679 300.738 li
336.132 291.76 li
336.505 291.868 336.917 291.907 337.251 291.884 cv
337.259 291.884 li
.92549 .913725 .870588 rgb
f
336.132 291.76 mo
351.679 300.738 li
314.886 321.976 li
274.58 298.709 li
311.372 277.464 li
335.269 291.262 li
335.339 291.34 li
335.533 291.534 335.82 291.674 336.132 291.76 cv
.878431 .854902 .835294 rgb
f
348.601 256.476 mo
348.601 256.965 li
345.04 259.025 li
345.04 258.527 li
348.601 256.476 li
.886273 .907793 .914781 rgb
f
345.04 258.527 mo
345.04 259.025 li
337.267 263.511 li
336.318 264.063 335.494 264.785 334.802 265.695 cv
334.646 265.897 334.499 266.099 334.359 266.309 cv
334.352 266.301 li
334.352 264.7 li
345.04 258.527 li
.92549 .913725 .870588 rgb
f
335.463 290.851 mo
337.251 291.884 li
336.917 291.907 336.505 291.868 336.132 291.76 cv
335.269 291.262 li
335.113 291.075 335.004 290.843 335.074 290.602 cv
335.198 290.694 335.331 290.772 335.463 290.851 cv
.65076 .558702 .423055 rgb
f
335.065 291.144 mo
311.372 277.464 li
323.954 270.198 li
324.688 270.62 325.439 271.052 326.206 271.494 cv
326.525 271.678 326.886 271.908 327.23 271.964 cv
327.23 272.924 li
330.791 274.977 li
331.231 274.725 li
331.265 274.76 331.297 274.794 331.328 274.83 cv
331.367 274.752 331.41 274.675 331.452 274.598 cv
331.498 274.572 li
331.49 274.712 331.49 274.845 331.49 274.984 cv
331.49 285.836 li
331.49 286.38 331.639 286.893 331.934 287.391 cv
332.734 288.713 333.761 289.777 335.074 290.602 cv
335.074 290.602 li
335.059 290.652 335.053 290.703 335.052 290.753 cv
335.052 290.809 335.061 290.864 335.076 290.918 cv
335.024 290.93 334.972 290.943 334.92 290.955 cv
334.97 291.016 335.018 291.08 335.065 291.144 cv
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 256.051 485.683 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 256.051 485.683 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
334.352 266.301 mo
334.359 266.309 li
332.656 268.75 331.592 271.657 331.498 274.572 cv
330.791 274.977 li
330.791 266.752 li
334.352 264.7 li
334.352 266.301 li
.634179 .658432 .659075 rgb
f
330.791 266.752 mo
330.791 274.977 li
327.23 272.924 li
327.23 268.307 li
327.23 264.7 li
330.791 266.752 li
.886273 .907793 .914781 rgb
f
330.791 266.752 mo
330.791 266.752 li
291.612 244.131 li
280.924 237.966 li
280.924 236.73 li
330.791 265.523 li
330.791 266.534 li
330.791 266.752 li
level3{
gsave
clp
[49.8675 0 0 49.8675 280.923 251.741 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[49.8675 0 0 49.8675 280.923 251.741 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
327.23 264.7 mo
327.23 268.307 li
311.372 277.464 li
271.066 254.19 li
288.052 244.388 li
288.052 250.303 li
291.612 252.363 li
295.173 250.303 li
295.173 246.191 li
327.23 264.7 li
.878431 .854902 .835294 rgb
f
285.113 432.244 mo
285.113 432.244 li
244.807 408.978 li
281.6 387.732 li
321.905 411.007 li
285.113 432.244 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 257.863 486.288 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 257.863 486.288 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
278.086 343.221 mo
318.392 366.495 li
281.6 387.732 li
241.293 364.466 li
278.086 343.221 li
cp
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 241.323 480.762 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 241.323 480.762 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
314.886 321.976 mo
278.086 343.221 li
237.78 319.954 li
274.58 298.709 li
314.886 321.976 li
cp
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 224.785 475.236 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 224.785 475.236 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
311.372 277.464 mo
274.58 298.709 li
234.274 275.436 li
271.066 254.19 li
311.372 277.464 li
cp
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 208.247 469.71 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 208.247 469.71 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
297.154 224.845 mo
295.988 225.513 294.822 226.189 293.656 226.858 cv
285.323 231.67 276.998 236.482 268.664 241.293 cv
267.755 241.814 266.854 242.343 265.943 242.864 cv
265.936 242.856 li
266.316 242.654 266.55 242.195 266.55 241.527 cv
266.55 231.989 li
266.55 229.074 267.669 226.158 269.457 223.818 cv
270.071 223.026 270.794 222.388 271.626 221.906 cv
298.344 206.476 li
298.344 224.153 li
297.932 224.394 li
297.676 224.542 297.411 224.689 297.154 224.845 cv
.65076 .558702 .423055 rgb
f
265.158 242.973 mo
264.948 242.941 264.724 242.856 264.482 242.716 cv
238.534 227.736 li
236.606 226.617 li
235.915 226.221 li
234.779 225.567 233.854 223.974 233.854 222.644 cv
233.854 213.114 li
233.854 210.207 234.974 207.284 236.762 204.944 cv
237.376 204.151 238.099 203.506 238.931 203.024 cv
247.481 198.088 li
265.648 187.602 li
266.488 188.091 li
266.348 188.2 266.216 188.324 266.092 188.449 cv
265.835 188.713 265.586 188.97 265.337 189.234 cv
265.322 189.242 li
240.19 203.755 li
239.358 204.237 238.635 204.874 238.021 205.675 cv
236.233 208.015 235.114 210.93 235.114 213.837 cv
235.114 220.989 li
235.114 221.401 235.207 221.836 235.347 222.233 cv
235.347 222.419 235.347 222.614 235.347 222.808 cv
235.347 223.593 235.65 224.425 236.318 224.813 cv
244.9 229.765 253.482 234.717 262.057 239.677 cv
262.057 239.677 263.588 240.47 264.599 239.793 cv
264.98 239.544 265.291 239.148 265.291 238.417 cv
265.291 231.258 li
265.291 228.358 266.41 225.443 268.206 223.096 cv
268.812 222.295 269.535 221.658 270.367 221.176 cv
278.731 216.348 li
293.26 207.96 li
295.849 206.468 li
293.819 205.302 li
293.866 205.069 li
293.897 204.882 li
293.952 204.579 293.983 204.276 293.991 203.965 cv
298.344 206.476 li
271.626 221.906 li
270.794 222.388 270.071 223.026 269.457 223.818 cv
267.669 226.158 266.55 229.074 266.55 231.989 cv
266.55 241.527 li
266.55 242.195 266.316 242.654 265.936 242.856 cv
265.718 242.988 265.454 243.027 265.158 242.973 cv
.783513 .709264 .599522 rgb
f
271.066 254.19 mo
239.393 235.907 li
240.849 235.06 242.304 234.212 243.759 233.363 cv
244.185 233.114 244.538 232.982 244.893 232.982 cv
245.201 232.982 245.51 233.081 245.868 233.291 cv
250.734 236.131 255.647 238.893 260.497 241.762 cv
264.312 244.019 268.076 246.006 272.773 246.098 cv
273.182 246.106 273.587 246.11 273.992 246.11 cv
278.687 246.11 283.125 245.512 287.209 242.931 cv
287.452 242.778 287.974 242.577 288.052 242.548 cv
288.052 244.388 li
271.066 254.19 li
280.924 236.73 mo
282.484 235.811 li
282.484 235.811 287.75 232.773 293.317 229.579 cv
280.924 236.73 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 186.239 462.356 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 186.239 462.356 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
297.154 224.845 mo
297.154 225.49 297.154 226.127 297.154 226.772 cv
297.154 226.99 297.022 227.27 296.642 227.488 cv
295.988 227.861 294.769 227.884 294.131 227.464 cv
293.913 227.324 293.703 227.107 293.656 226.858 cv
294.822 226.189 295.988 225.513 297.154 224.845 cv
.65076 .558702 .423055 rgb
f
295.849 206.468 mo
293.26 207.96 li
293.446 207.074 293.633 206.188 293.819 205.302 cv
295.849 206.468 li
f
295.173 246.191 mo
295.173 250.303 li
291.612 252.363 li
291.612 244.139 li
295.173 246.191 li
.634179 .658432 .659075 rgb
f
278.731 216.348 mo
278.731 216.348 li
261.862 206.608 li
261.871 206.604 261.879 206.598 261.888 206.594 cv
261.69 206.084 261.619 205.494 261.602 205.039 cv
261.469 201.607 261.34 198.174 261.341 194.741 cv
261.342 194.019 261.717 193.146 262.207 192.602 cv
263.722 190.922 264.947 189.75 266.488 188.091 cv
266.488 188.091 li
266.497 188.084 266.506 188.077 266.514 188.07 cv
266.515 188.07 266.515 188.07 266.515 188.069 cv
266.526 188.061 266.536 188.053 266.546 188.045 cv
266.553 188.04 266.56 188.034 266.567 188.028 cv
267.125 187.595 267.773 187.317 268.417 187.315 cv
268.418 187.315 268.42 187.315 268.422 187.315 cv
268.422 187.315 li
268.423 187.315 268.424 187.315 268.425 187.315 cv
268.775 187.316 269.124 187.398 269.455 187.583 cv
269.46 187.586 269.465 187.588 269.47 187.591 cv
269.472 187.592 269.474 187.594 269.476 187.595 cv
269.48 187.597 269.484 187.599 269.488 187.602 cv
277.2 192.056 284.903 196.502 292.615 200.957 cv
293.039 201.202 293.354 201.562 293.575 201.99 cv
293.596 203.644 292.691 204.537 291.809 205.518 cv
290.358 207.128 289.079 208.892 287.548 210.816 cv
287.894 210.816 288.086 210.836 288.207 210.836 cv
288.238 210.836 288.264 210.835 288.286 210.832 cv
278.731 216.348 li
level3{
gsave
clp
[14.1188 -21.4606 21.4606 14.1188 269.915 212.053 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.1188 -21.4606 21.4606 14.1188 269.915 212.053 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
291.612 244.139 mo
291.612 252.363 li
288.052 250.303 li
288.052 244.388 li
288.052 242.079 li
291.612 244.131 li
291.612 244.139 li
.886273 .907793 .914781 rgb
f
285.113 432.244 mo
285.113 436.893 li
38.5664 294.551 li
38.5664 289.901 li
43.2773 292.622 li
83.583 315.896 li
83.5909 315.896 li
123.889 339.163 li
164.195 362.437 li
204.501 385.703 li
244.807 408.978 li
285.113 432.244 li
.92549 .913725 .870588 rgb
f
281.6 387.732 mo
244.807 408.978 li
204.501 385.703 li
241.293 364.466 li
281.6 387.732 li
cp
.917647 .894118 .87451 rgb
f
261.556 238.035 mo
260.264 237.416 248.611 230.534 243.643 227.951 cv
241.069 226.614 239.909 224.658 239.24 222.119 cv
238.846 220.625 239.261 219.676 240.585 218.907 cv
246.639 215.394 234.78 222.255 261.862 206.608 cv
278.731 216.348 li
270.367 221.176 li
269.535 221.658 268.812 222.295 268.206 223.096 cv
266.41 225.443 265.291 228.358 265.291 231.258 cv
265.291 232.382 li
264.829 232.584 261.862 234.031 261.556 238.035 cv
level3{
gsave
clp
[22.8725 -31.9085 31.9085 22.8725 247.666 232.851 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.8725 -31.9085 31.9085 22.8725 247.666 232.851 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
278.086 343.221 mo
241.293 364.466 li
200.988 341.192 li
237.78 319.954 li
278.086 343.221 li
cp
.917647 .894118 .87451 rgb
f
274.58 298.709 mo
237.78 319.954 li
197.474 296.681 li
234.274 275.436 li
274.58 298.709 li
cp
.878431 .854902 .835294 rgb
f
271.066 254.19 mo
234.274 275.436 li
193.968 252.169 li
230.76 230.924 li
271.066 254.19 li
f
268.664 241.293 mo
268.664 241.939 268.664 242.576 268.664 243.221 cv
268.664 243.509 268.447 243.766 268.151 243.936 cv
267.498 244.31 266.278 244.333 265.641 243.921 cv
265.392 243.75 265.158 243.502 265.158 243.221 cv
265.158 242.973 li
265.454 243.027 265.718 242.988 265.936 242.856 cv
265.943 242.864 li
266.854 242.343 267.755 241.814 268.664 241.293 cv
.65076 .558702 .423055 rgb
f
265.322 189.242 mo
264.343 190.252 263.363 191.263 262.384 192.273 cv
261.684 192.996 261.124 194.022 260.883 195.181 cv
260.401 197.458 259.927 199.736 259.445 202.014 cv
259.281 202.814 259.274 203.709 259.507 204.486 cv
259.499 204.486 li
251.959 208.839 244.419 213.192 236.878 217.553 cv
235.953 218.082 235.347 219.271 235.347 220.421 cv
235.347 221.02 235.347 221.626 235.347 222.233 cv
235.207 221.836 235.114 221.401 235.114 220.989 cv
235.114 213.837 li
235.114 210.93 236.233 208.015 238.021 205.675 cv
238.635 204.874 239.358 204.237 240.19 203.755 cv
265.322 189.242 li
f
247.481 198.088 mo
238.931 203.024 li
238.099 203.506 237.376 204.151 236.762 204.944 cv
234.974 207.284 233.854 210.207 233.854 213.114 cv
233.854 222.644 li
233.854 223.974 234.779 225.567 235.915 226.221 cv
236.606 226.617 li
236.552 226.85 236.684 227.091 236.855 227.254 cv
236.964 227.34 li
236.956 227.348 li
230.76 230.924 li
201.244 213.876 li
201.99 213.449 li
203.918 212.329 li
203.918 199.876 li
227.247 186.412 li
247.481 198.088 li
.878431 .854902 .835294 rgb
f
200.988 341.192 mo
241.293 364.466 li
204.501 385.703 li
164.195 362.438 li
200.988 341.192 li
cp
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 171.358 457.384 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 171.358 457.384 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
236.606 226.617 mo
238.534 227.736 li
238.044 227.768 237.368 227.659 236.964 227.34 cv
236.855 227.254 li
236.684 227.091 236.552 226.85 236.606 226.617 cv
.65076 .558702 .423055 rgb
f
238.153 160.518 mo
238.153 161.334 li
227.247 167.631 li
208.73 178.328 li
208.73 177.503 li
230.317 165.042 li
238.153 160.518 li
.688617 .716 .717717 rgb
f
238.153 160.518 mo
230.317 165.042 li
229.758 164.071 li
229.758 163.768 li
221.922 159.236 li
219.007 160.922 li
218.999 160.922 li
218.478 160.619 li
218.012 159.803 li
227.247 154.47 li
227.464 154.346 li
238.153 160.518 li
.972549 .94902 .898039 rgb
f
197.474 296.681 mo
237.78 319.954 li
200.988 341.192 li
160.682 317.918 li
197.474 296.681 li
cp
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 154.817 451.857 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 154.817 451.857 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
197.474 296.681 mo
165.788 278.386 li
177.789 271.464 189.779 264.535 190.775 263.951 cv
194.631 261.691 198.358 259.213 202.193 256.916 cv
234.274 275.436 li
197.474 296.681 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 138.284 446.332 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 138.284 446.332 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
229.758 164.071 mo
230.317 165.042 li
208.73 177.503 li
203.918 174.728 li
203.918 169.784 li
210.953 173.842 li
216.496 170.64 li
208.66 166.115 li
203.918 168.844 li
203.918 167.942 li
218.012 159.803 li
218.478 160.619 li
212.936 163.822 li
220.771 168.354 li
223.422 166.815 li
223.43 166.815 li
224.215 167.273 li
229.758 164.071 li
.972549 .94902 .898039 rgb
f
229.758 163.768 mo
229.758 164.071 li
224.215 167.273 li
224.215 166.97 li
229.758 163.768 li
.929691 .800114 .851661 rgb
f
229.758 163.768 mo
224.215 166.97 li
216.372 162.438 li
218.999 160.922 li
219.007 160.922 li
221.922 159.236 li
229.758 163.768 li
.976898 .919957 .933695 rgb
f
227.247 133.727 mo
227.22 133.718 li
227.247 65.8282 li
227.247 131.616 li
227.247 133.727 li
201.594 85.104 mo
201.594 84.9903 li
197.825 82.8142 li
213.509 73.7591 224.681 67.3094 227.203 65.8531 cv
227.212 65.8478 li
227.214 65.8467 227.216 65.846 227.218 65.8449 cv
227.247 65.8282 li
227.102 65.9118 207.763 77.0966 198.012 82.7114 cv
199.302 83.5118 200.439 84.2168 201.736 85.0214 cv
201.719 85.0317 201.671 85.0592 201.594 85.104 cv
227.247 65.8282 mo
227.247 65.8282 li
227.247 65.8282 li
227.247 65.8282 li
level3{
gsave
clp
[57.9676 168.981 -168.981 57.9676 202.544 78.8758 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.835294 .945098 .870588 ]
/C1 [.529412 .792157 .670588 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.9676 168.981 -168.981 57.9676 202.544 78.8758 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~e^W*ue'ldodaHOjdF$=fd*L%acHa_[c-=MWbfn8RbK@uMb/qcIaN2HCa2c3>`l?!:`Pf^5_o'C0_SX1+
_83q&^q[Y!^V7Fr]tM+l]Y(nh]=YYc]",A^\@B&Y\$riT[^NTO[C*BK['R*FZEgd@Z*CR<Yct=7YHG%2
Y-"h.XK8M(X/i8#WiE%tWMlboVl-GiVP^5eV59u`Una][US=KWTqS0QTV.pLT:_^HSt2FCS=H+>S"#n9
R[TY4R@'A/R$X/+QBmi%Q'IW!Pa%AqPEM)lOcbcgOH>QbO,o<]NfK*YNJrgTMi3LNMMd:JM2@%ELkgb@
~>
<~naQ&;nF5r9n*f`6n*f]4mdBN2mHs<.mHs<-m-O**m-F!'lg*m&lK[["lK[Wul07Hsl0.?pkih6okND$k
kND!ik2tggk2k^djlPUbjQ,C_jQ,@]j5]1[io8tWio8tViSibSiSi_Qi8EPOhr!>Khr!>JhVR,GhVI#D
h;-oCgt^]?gt^Z=gY:K;gY1B8g=k96g"G'3g"G$1f\"j/f[na,f@SX*f%/F'f%/C%e^`4#eC<!teC<!s
e'ldpe'c[mdaHRldF$@hdF$@gd*U.dd*L%acd0q`cHa_\cHa\Zc-=MXc-4DUbfn;SbKJ)PbKJ&Nb0%lL
~>
<~hVI#Dh;-lAgt^]>gY:K;g=k97g=b04g"G$1f\"j.f@SX+f%/F'f%&=$e^`1!eC<!se'ldpdaHRlda?Ii
dF$=fd*U.ccd0q`cHa_\cHXVYc-=JVbfn;SbKJ)Pb0%lLb/qcIaiVWFaN2HCa2c6@`l?$<`l5p9`Pod6
`5KU3_o'C0_SX1,_SO()_83q&^qdb#^V@Ou^:q=q^:h4n]tM(k]Y(nh]=Y\e]"5Ja]",A^\[f5[\@B&X
\$riU[^NWQ[^ENN[C*BK['[3HZa7!EZEgdAZE^[>Z*CO;Yct@8YHP.5Y-+q1Y-"h.Xf\\+XK8M(X/i;%
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
224.215 166.97 mo
224.215 167.273 li
223.43 166.815 li
223.422 166.815 li
216.372 162.742 li
216.372 162.438 li
224.215 166.97 li
.892438 .698537 .780758 rgb
f
223.422 166.815 mo
220.771 168.354 li
212.936 163.822 li
218.478 160.619 li
218.999 160.922 li
216.372 162.438 li
216.372 162.742 li
223.422 166.815 li
.929691 .800114 .851661 rgb
f
216.496 170.64 mo
210.953 173.842 li
203.918 169.784 li
203.918 168.844 li
208.66 166.115 li
216.496 170.64 li
f
208.73 177.503 mo
208.73 178.328 li
203.918 175.552 li
203.918 174.728 li
208.73 177.503 li
.526557 .544921 .542487 rgb
f
198.166 115.517 mo
187.291 121.79 li
187.291 121.798 li
186.731 122.117 li
179.61 126.229 li
163.457 135.549 li
163.457 135.557 li
155.854 139.941 li
155.225 140.307 li
154.618 140.657 li
143.525 147.062 li
143.525 243.991 li
143.525 246.673 li
143.525 247.202 li
141.481 248.375 li
141.481 145.562 li
203.918 109.508 li
203.918 167.942 li
203.918 168.844 li
203.918 169.784 li
203.918 174.728 li
203.918 175.552 li
203.918 199.876 li
203.918 212.329 li
201.99 213.449 li
201.99 212.92 li
201.99 113.309 li
198.166 115.517 li
.797688 .831717 .835047 rgb
f
203.918 109.508 mo
141.481 145.562 li
134.531 141.551 li
196.969 105.497 li
201.594 108.163 li
201.594 108.171 li
203.918 109.508 li
.698039 .709804 .741176 rgb
f
201.244 213.876 mo
164.444 235.122 li
143.525 247.202 li
143.525 246.673 li
201.99 212.92 li
201.99 213.449 li
201.244 213.876 li
.576484 .589685 .611207 rgb
f
201.99 113.309 mo
201.99 212.92 li
198.166 210.712 li
198.166 115.517 li
201.99 113.309 li
f
201.99 212.92 mo
143.525 246.673 li
143.525 243.991 li
154.618 237.585 li
155.225 237.936 li
155.854 237.578 li
155.854 232.501 li
182.339 217.211 li
186.731 219.745 li
187.291 219.426 li
187.291 216.985 li
190.913 214.895 194.536 212.803 198.166 210.712 cv
201.99 212.92 li
.683505 .701766 .729913 rgb
f
177.799 116.084 mo
156.429 128.421 li
155.722 128.009 li
155.722 115.672 li
177.092 103.336 li
177.799 103.748 li
177.799 116.084 li
103.997 158.699 mo
82.6269 171.036 li
81.9121 170.624 li
81.9121 158.287 li
103.289 145.943 li
103.997 146.355 li
103.997 158.699 li
53.7714 170.344 mo
53.7714 290.928 li
60.6665 286.94 li
60.4336 183.987 li
122.871 147.94 li
130.116 152.123 li
130.116 179.805 li
132.253 178.576 li
133.684 179.393 li
134.617 179.393 li
134.531 141.551 li
196.969 105.497 li
201.594 108.163 li
201.594 84.9903 li
53.7714 170.344 li
.972549 .94902 .898039 rgb
f
201.594 84.9903 mo
53.7714 170.344 li
49.9937 168.16 li
189.374 87.6953 li
197.824 82.8134 li
201.594 84.9903 li
.92549 .913725 .870588 rgb
f
200.988 341.192 mo
164.195 362.438 li
123.889 339.163 li
160.682 317.918 li
200.988 341.192 li
cp
.917647 .894118 .87451 rgb
f
157.176 273.414 mo
197.474 296.681 li
160.682 317.918 li
120.383 294.651 li
157.176 273.414 li
.878431 .854902 .835294 rgb
f
164.444 235.122 mo
193.968 252.169 li
157.176 273.414 li
127.652 256.366 li
128.18 256.056 li
130.116 254.937 li
130.116 246.844 li
134.469 244.333 li
134.765 244.504 li
141.481 248.375 li
143.525 247.202 li
164.444 235.122 li
f
193.113 80.0928 mo
184.655 84.9746 li
45.2827 165.439 li
41.5283 163.27 li
88.9082 135.915 li
100.747 129.082 li
110.286 123.57 li
163.62 92.7793 li
189.351 77.9238 li
193.113 80.0928 li
.92549 .913725 .870588 rgb
f
187.291 216.985 mo
187.291 219.426 li
186.731 219.745 li
186.731 122.117 li
187.291 121.798 li
187.291 216.985 li
.797688 .831717 .835047 rgb
f
186.731 122.117 mo
186.731 219.745 li
182.339 217.211 li
179.61 215.633 li
179.61 213.915 li
179.61 208.474 li
179.61 204.773 li
179.61 126.229 li
186.731 122.117 li
.576484 .589685 .611207 rgb
f
182.339 217.211 mo
155.854 232.501 li
155.854 227.627 li
179.61 213.915 li
179.61 215.633 li
182.339 217.211 li
.878431 .854902 .835294 rgb
f
179.61 208.474 mo
179.61 213.915 li
155.854 227.627 li
155.854 222.186 li
179.61 208.474 li
f
179.61 204.773 mo
179.61 208.474 li
155.854 222.186 li
155.854 192.118 li
158.474 192.973 161.055 194.069 163.457 195.453 cv
168.844 198.562 174.223 201.671 179.61 204.773 cv
f
177.799 103.748 mo
177.799 116.084 li
156.43 128.421 li
156.43 116.084 li
177.799 103.748 li
.713726 .643137 .564706 rgb
f
177.799 103.748 mo
156.43 116.084 li
155.722 115.672 li
177.092 103.336 li
177.799 103.748 li
.524993 .458545 .425199 rgb
f
110.286 123.57 mo
110.286 123.57 li
110.286 123.57 li
106.128 120.694 102.691 117.432 101.233 112.498 cv
101.233 112.518 101.233 112.538 101.233 112.558 cv
100.914 111.409 100.755 110.249 100.755 109.088 cv
100.755 103.499 104.455 97.9174 111.817 93.6655 cv
119.138 89.4349 128.827 87.2759 138.555 87.2759 cv
147.471 87.2759 156.419 89.0879 163.62 92.7793 cv
163.62 92.7793 li
110.286 123.57 li
level3{
gsave
clp
[62.865 0 0 62.865 100.755 105.423 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[62.865 0 0 62.865 100.755 105.423 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
160.682 317.918 mo
123.889 339.163 li
83.5908 315.896 li
120.383 294.651 li
160.682 317.918 li
cp
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 84.8554 428.48 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 84.8554 428.48 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
120.383 294.651 mo
117.531 293.004 li
119.177 293.057 120.115 293.088 120.125 293.088 cv
121.071 293.118 122.028 293.093 122.965 293.161 cv
120.383 294.651 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 74.1042 424.887 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 74.1042 424.887 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
156.43 116.084 mo
156.43 128.421 li
155.722 128.009 li
155.722 115.672 li
156.43 116.084 li
.304175 .249863 .224769 rgb
f
155.854 232.501 mo
155.854 237.578 li
155.225 237.936 li
155.225 205.395 155.225 172.847 155.225 140.307 cv
155.854 139.941 li
155.854 192.118 li
155.854 222.186 li
155.854 227.627 li
155.854 232.501 li
.797688 .831717 .835047 rgb
f
155.225 140.307 mo
155.225 172.847 155.225 205.395 155.225 237.936 cv
154.618 237.585 li
154.618 140.657 li
155.225 140.307 li
.576484 .589685 .611207 rgb
f
141.481 145.562 mo
141.481 248.375 li
134.765 244.504 li
134.617 179.393 li
134.531 141.551 li
141.481 145.562 li
f
134.765 244.504 mo
134.469 244.333 li
130.116 246.844 li
130.116 206.126 li
133.684 204.074 li
133.684 179.393 li
134.617 179.393 li
134.765 244.504 li
.972549 .94902 .898039 rgb
f
132.253 181.041 mo
132.253 203.25 li
130.917 204.019 li
131.227 203.654 131.468 203.187 131.616 202.783 cv
131.702 202.542 li
131.764 202.309 li
131.795 202.169 li
131.818 202.045 li
131.834 201.959 131.834 201.92 131.834 201.617 cv
131.834 201.555 li
131.826 201.532 li
131.826 201.524 li
131.818 201.353 131.771 201.197 131.71 201.058 cv
131.663 200.972 li
131.585 200.863 li
131.546 200.809 li
131.507 200.77 li
131.398 200.677 li
131.29 200.606 li
131.119 200.498 130.784 200.311 130.116 199.922 cv
130.116 198.578 li
130.123 198.57 li
130.123 198.585 li
130.271 198.484 li
130.419 198.368 li
130.52 198.282 li
130.621 198.189 130.714 198.104 130.792 198.018 cv
130.862 197.94 li
130.963 197.824 131.049 197.715 131.126 197.614 cv
131.196 197.521 131.251 197.427 131.305 197.334 cv
131.329 197.295 li
131.383 197.202 131.43 197.101 131.484 196.992 cv
131.531 196.883 131.585 196.767 131.64 196.642 cv
131.694 196.495 131.733 196.354 131.764 196.222 cv
131.771 196.176 li
131.779 196.145 li
131.779 196.121 li
131.803 196.012 li
131.811 195.942 li
131.818 195.88 li
131.826 195.779 li
131.826 195.748 li
131.834 195.538 li
131.826 195.437 li
131.826 195.414 li
131.826 195.406 li
131.795 195.204 li
131.741 195.048 li
131.741 195.033 li
131.741 195.025 li
131.71 194.963 li
131.71 194.955 li
131.694 194.924 li
131.678 194.901 li
131.632 194.792 li
131.499 194.621 li
131.329 194.489 li
131.259 194.45 li
130.877 194.232 130.497 194.007 130.116 193.789 cv
130.116 192.444 li
130.714 192.087 131.305 191.356 131.616 190.563 cv
131.67 190.423 131.717 190.275 131.749 190.136 cv
131.795 189.902 li
131.803 189.887 li
131.826 189.716 li
131.826 189.7 li
131.834 189.607 131.834 189.521 131.834 189.436 cv
131.811 189.18 li
131.756 188.954 li
131.741 188.884 li
131.663 188.635 131.515 188.456 131.329 188.355 cv
131.259 188.316 li
130.877 188.099 130.497 187.874 130.116 187.656 cv
130.116 182.276 li
132.253 181.041 li
.929691 .800114 .851661 rgb
f
130.271 198.484 mo
130.123 198.585 li
130.123 198.57 li
130.271 198.484 li
f
131.834 195.468 mo
131.834 195.561 li
131.826 195.414 li
131.834 195.468 li
f
131.834 201.555 mo
131.834 201.617 li
131.826 201.524 li
131.834 201.555 li
f
131.803 189.887 mo
131.818 189.747 131.834 189.607 131.834 189.467 cv
131.826 189.265 li
131.834 189.319 li
131.85 189.498 131.834 189.692 131.803 189.887 cv
f
130.116 152.123 mo
130.116 254.937 li
128.18 256.056 li
128.18 155.916 li
124.333 158.14 li
119.979 160.65 li
117.725 161.957 li
94.7539 175.218 li
91.9087 176.858 li
91.2944 177.216 li
70.2202 189.382 li
69.7232 189.669 li
69.7232 289.809 li
67.6782 290.99 li
67.6782 188.169 li
130.116 152.123 li
.797688 .831717 .835047 rgb
f
130.116 152.123 mo
67.6782 188.169 li
60.4336 183.987 li
122.871 147.94 li
130.116 152.123 li
.698039 .709804 .741176 rgb
f
128.18 255.527 mo
128.18 256.056 li
127.652 256.366 li
90.8594 277.604 li
69.7227 289.809 li
69.7227 289.288 li
128.18 255.527 li
.576484 .589685 .611207 rgb
f
128.18 155.916 mo
128.18 255.527 li
124.333 253.304 li
124.333 158.14 li
128.18 155.916 li
f
128.18 255.527 mo
69.7232 289.288 li
69.7232 285.098 li
70.2202 284.811 li
70.2202 281.941 li
91.2944 269.776 li
91.9087 270.126 li
94.7539 268.478 li
94.7539 267.778 li
117.725 254.517 li
117.725 254.781 li
119.513 255.807 li
119.979 256.079 li
120.352 255.869 li
124.333 253.568 li
124.333 253.304 li
128.18 255.527 li
.683505 .701766 .729913 rgb
f
124.333 253.304 mo
124.333 253.568 li
120.352 255.869 li
119.979 256.079 li
119.979 160.65 li
124.333 158.14 li
124.333 253.304 li
.688617 .716 .717717 rgb
f
120.383 294.651 mo
83.5909 315.896 li
83.583 315.896 li
43.2773 292.622 li
49.9937 288.743 li
53.7714 290.928 li
60.6665 286.94 li
67.6782 290.99 li
69.7227 289.809 li
90.8594 277.604 li
120.383 294.651 li
.878431 .854902 .835294 rgb
f
119.979 160.65 mo
119.979 256.079 li
119.513 255.807 li
117.725 254.78 li
117.725 254.517 li
117.725 161.957 li
119.979 160.65 li
.576484 .589685 .611207 rgb
f
100.747 129.082 mo
100.747 129.082 li
100.747 122.412 100.747 115.75 100.747 109.088 cv
100.755 109.088 li
100.755 110.249 100.914 111.409 101.233 112.558 cv
101.233 117.93 101.233 123.209 101.233 128.682 cv
104.359 126.917 107.281 125.267 110.286 123.57 cv
100.747 129.082 li
level3{
gsave
clp
[9.53819 0 0 9.53819 100.747 119.085 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.53819 0 0 9.53819 100.747 119.085 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
103.997 146.355 mo
103.997 158.699 li
82.6269 171.036 li
82.6269 158.699 li
103.997 146.355 li
.713726 .643137 .564706 rgb
f
103.997 146.355 mo
82.6269 158.699 li
81.9121 158.287 li
103.289 145.943 li
103.997 146.355 li
.524993 .458545 .425199 rgb
f
70.2202 189.382 mo
70.2202 284.811 li
69.7232 285.098 li
69.7232 189.669 li
70.2202 189.382 li
.683505 .701766 .729913 rgb
f
39.2811 168.905 mo
37.5611 167.914 li
37.5611 167.867 li
37.5611 167.867 36.8218 167.419 36.3828 167.15 cv
33.2129 165.208 30.3482 162.92 28.3588 159.714 cv
28.2151 159.527 28.0776 159.322 27.9465 159.104 cv
27.8183 158.881 27.6967 158.657 27.5813 158.432 cv
26.9956 157.249 26.5678 155.866 26.3114 154.911 cv
26.1574 154.191 26.0654 153.469 26.0352 152.745 cv
25.8022 146.992 29.4946 141.193 37.0972 136.801 cv
44.4252 132.573 54.1168 130.414 63.8495 130.414 cv
72.7627 130.414 81.7102 132.225 88.9082 135.915 cv
88.9082 135.915 li
41.5283 163.27 li
41.5283 167.608 li
40.5106 168.195 39.7688 168.624 39.2811 168.905 cv
level3{
gsave
clp
[62.8831 0 0 62.8831 26.025 149.66 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[62.8831 0 0 62.8831 26.025 149.66 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
82.6269 158.699 mo
82.6269 171.036 li
81.9121 170.624 li
81.9121 158.287 li
82.6269 158.699 li
.304175 .249863 .224769 rgb
f
67.6782 188.169 mo
67.6782 290.99 li
60.6665 286.94 li
60.4336 183.987 li
67.6782 188.169 li
.576484 .589685 .611207 rgb
f
53.7714 170.344 mo
53.7714 290.928 li
49.9937 288.743 li
49.7217 168.323 li
49.9937 168.16 li
53.7714 170.344 li
.92549 .913725 .870588 rgb
f
43.2773 292.622 mo
43.2773 292.622 44.6528 291.805 45.0273 291.525 cv
45.6059 291.095 46.206 290.784 46.8321 290.569 cv
43.2773 292.622 li
level3{
gsave
clp
[57.9676 168.981 -168.981 57.9676 16.4002 142.731 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.9676 168.981 -168.981 57.9676 16.4002 142.731 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
43.2773 172.039 mo
38.5664 169.318 li
39.2818 168.906 li
39.2811 168.905 li
39.2811 168.905 li
39.7688 168.624 40.5106 168.195 41.5283 167.608 cv
44.825 165.704 51.0081 162.134 60.7621 156.502 cv
79.6768 145.581 112.017 126.91 162.781 97.6035 cv
180.407 87.4276 200.258 75.9678 222.536 63.1075 cv
227.247 65.8282 li
227.247 65.8282 li
227.247 65.8282 li
227.247 65.8282 li
227.247 65.8282 227.246 65.8283 227.246 65.8286 cv
227.237 65.8337 227.227 65.8392 227.218 65.8449 cv
227.216 65.846 227.214 65.8467 227.212 65.8478 cv
227.21 65.8494 227.206 65.8515 227.203 65.8531 cv
224.681 67.3094 213.509 73.7591 197.825 82.8142 cv
197.825 82.8142 li
196.571 83.5384 195.294 84.2753 193.984 85.0316 cv
177.063 94.8011 155.664 107.156 134.353 119.459 cv
99.2182 139.743 64.3063 159.899 49.9954 168.161 cv
49.9954 168.161 li
49.9645 168.178 49.9361 168.195 49.9054 168.213 cv
45.9799 170.479 43.6277 171.837 43.2773 172.039 cv
43.2773 172.039 li
level3{
gsave
clp
[188.68 0 0 188.68 38.5664 117.573 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[188.68 0 0 188.68 38.5664 117.573 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
45.2827 165.439 mo
41.5283 167.608 li
41.5283 163.27 li
45.2827 165.439 li
cp
.92549 .913725 .870588 rgb
f
38.5664 271.308 mo
38.5664 271.308 li
37.5362 270.719 li
37.5611 169.283 li
37.5611 167.914 li
39.2811 168.905 li
39.2818 168.906 li
38.5664 169.318 li
38.5664 271.308 li
37.0972 270.468 mo
37.0972 270.468 li
31.2125 267.063 26.0273 261.707 26.0352 255.045 cv
26.0352 226.993 26.0352 198.946 26.0352 170.896 cv
26.0521 197.597 26.0996 225.398 26.0996 251.733 cv
28.1333 246.224 32.23 242.609 37.1768 239.867 cv
37.1768 250.111 37.0972 270.468 37.0972 270.468 cv
27.9465 159.104 mo
27.8187 158.891 27.6969 158.665 27.5813 158.432 cv
27.6967 158.657 27.8183 158.881 27.9465 159.104 cv
26.3114 154.911 mo
26.1517 154.316 26.0586 153.887 26.0352 153.777 cv
26.0352 153.433 26.0352 153.088 26.0352 152.745 cv
26.0654 153.469 26.1574 154.191 26.3114 154.911 cv
level3{
gsave
clp
[-85.7717 118.174 -118.174 -85.7717 70.2722 159.71 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-85.7717 118.174 -118.174 -85.7717 70.2722 159.71 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
133.684 179.393 mo
130.116 181.453 li
130.116 179.805 li
132.253 178.576 li
133.684 179.393 li
.929412 .862745 .890196 rgb
f
133.264 180.473 mo
133.264 203.763 li
132.253 203.25 li
132.253 181.056 li
133.264 180.473 li
.729412 .560784 .627451 rgb
f
133.684 179.393 mo
133.684 204.074 li
130.116 206.126 li
130.116 205.582 li
133.264 203.763 li
133.264 180.473 li
132.253 181.056 li
132.253 181.041 li
130.116 182.276 li
130.116 181.453 li
133.684 179.393 li
.937255 .909804 .921569 rgb
f
133.264 203.763 mo
130.116 205.582 li
130.116 204.68 li
130.373 204.517 130.613 204.314 130.823 204.074 cv
130.831 204.074 li
130.917 204.019 li
132.253 203.25 li
133.264 203.763 li
.929412 .862745 .890196 rgb
f
131.546 200.809 mo
131.235 200.482 130.707 200.459 130.116 200.793 cv
130.116 199.922 li
131.456 200.688 131.439 200.681 131.546 200.809 cv
.439216 .380392 .403922 rgb
f
131.834 201.617 mo
131.834 202.107 131.83 201.912 131.764 202.309 cv
131.625 202.935 131.252 203.597 130.831 204.074 cv
130.823 204.074 li
130.613 204.314 130.373 204.517 130.116 204.68 cv
130.116 200.793 li
131.139 200.214 131.834 200.769 131.834 201.617 cv
.721569 .423529 .541176 rgb
f
131.741 195.033 mo
131.499 194.427 130.862 194.287 130.116 194.707 cv
130.116 193.789 li
130.497 194.007 130.877 194.232 131.259 194.45 cv
131.329 194.489 li
131.523 194.59 131.663 194.776 131.741 195.033 cv
.439216 .380392 .403922 rgb
f
131.64 196.642 mo
131.414 197.149 131.272 197.478 130.862 197.94 cv
130.699 198.124 130.364 198.45 130.123 198.57 cv
130.116 194.707 li
131.381 193.995 132.248 194.916 131.64 196.642 cv
.721569 .423529 .541176 rgb
f
130.271 198.484 mo
130.123 198.585 li
130.123 198.57 li
130.271 198.484 li
.827451 .807843 .745098 rgb
f
131.834 195.663 mo
131.826 195.841 131.811 196.036 131.764 196.222 cv
131.811 196.028 131.834 195.841 131.834 195.663 cv
f
131.834 195.468 mo
131.834 195.561 li
131.826 195.414 li
131.834 195.468 li
f
131.741 188.884 mo
131.499 188.278 130.854 188.138 130.116 188.558 cv
130.116 187.656 li
130.497 187.874 130.877 188.099 131.259 188.316 cv
131.329 188.355 li
131.515 188.456 131.663 188.635 131.741 188.884 cv
.439216 .380392 .403922 rgb
f
131.834 189.467 mo
131.834 190.615 130.989 191.92 130.116 192.444 cv
130.116 188.558 li
131.056 188.023 131.834 188.392 131.834 189.467 cv
.721569 .423529 .541176 rgb
f
131.803 189.887 mo
131.818 189.747 131.834 189.607 131.834 189.467 cv
131.826 189.265 li
131.834 189.319 li
131.85 189.498 131.834 189.692 131.803 189.887 cv
.827451 .807843 .745098 rgb
f
94.7539 175.218 mo
94.7539 268.478 li
91.9087 270.126 li
91.9087 176.858 li
94.7539 175.218 li
.797688 .831717 .835047 rgb
f
91.9087 176.858 mo
91.9087 270.126 li
91.2944 269.776 li
91.2944 177.216 li
91.9087 176.858 li
.576484 .589685 .611207 rgb
f
69.7232 289.288 mo
69.7232 189.669 li
70.2202 189.382 li
91.2944 177.216 li
91.9087 176.858 li
94.7539 175.218 li
105.253 169.157 li
104.478 169.605 li
94.7539 175.218 li
91.9087 176.858 li
91.2944 177.216 li
91.2944 201.571 li
91.2944 177.216 li
70.2202 189.382 li
70.2202 281.941 li
70.2202 189.382 li
69.7232 189.669 li
69.7232 285.098 li
69.7232 289.288 li
69.7227 289.288 li
79.6375 276.505 mo
79.8694 276.37 li
86.5516 272.513 li
91.2944 269.776 li
79.6375 276.505 li
119.513 255.807 mo
117.725 254.781 li
117.725 254.517 li
117.725 254.78 li
119.513 255.807 li
193.968 252.169 mo
164.444 235.122 li
143.525 247.202 li
141.481 248.375 li
143.525 247.202 li
143.525 246.673 li
143.525 243.991 li
143.525 147.062 li
154.618 140.657 li
155.225 140.307 li
155.854 139.941 li
163.457 135.557 li
163.457 135.549 li
179.61 126.229 li
186.731 122.117 li
187.291 121.798 li
187.291 121.79 li
198.166 115.517 li
201.99 113.309 li
198.166 115.517 li
187.291 121.791 li
187.291 121.798 li
186.731 122.117 li
179.61 126.229 li
163.457 135.549 li
163.457 135.557 li
155.854 139.941 li
155.225 140.307 li
155.225 140.307 li
154.618 140.657 li
143.525 147.062 li
143.525 243.991 li
143.525 246.673 li
143.525 247.202 li
164.444 235.122 li
193.968 252.169 li
266.883 244.223 mo
266.882 244.223 266.881 244.223 266.879 244.223 cv
266.881 244.223 266.882 244.223 266.883 244.223 cv
266.883 244.223 li
266.887 244.223 mo
267.354 244.223 267.824 244.123 268.151 243.936 cv
267.824 244.124 267.354 244.223 266.887 244.223 cv
143.525 243.991 mo
143.564 243.968 li
154.618 237.585 li
143.525 243.991 li
265.653 243.929 mo
265.649 243.926 265.645 243.924 265.641 243.921 cv
265.645 243.924 265.649 243.926 265.653 243.929 cv
265.158 243.221 mo
265.158 243.221 li
265.158 242.973 li
264.948 242.941 264.724 242.856 264.482 242.716 cv
238.534 227.736 li
238.534 227.736 li
236.606 226.617 li
236.597 226.654 236.594 226.69 236.594 226.727 cv
236.594 226.69 236.597 226.654 236.606 226.617 cv
235.915 226.221 li
234.779 225.567 233.854 223.974 233.854 222.644 cv
233.854 222.644 li
233.854 223.974 234.779 225.567 235.915 226.221 cv
236.606 226.617 li
238.534 227.736 li
264.482 242.716 li
264.724 242.856 264.948 242.941 265.158 242.973 cv
265.158 242.973 li
265.158 242.973 li
265.158 243.221 li
265.409 242.996 mo
265.408 242.996 265.407 242.996 265.406 242.996 cv
265.407 242.996 265.408 242.996 265.409 242.996 cv
265.409 242.996 li
265.418 242.996 mo
265.6 242.995 265.766 242.953 265.912 242.87 cv
265.766 242.953 265.6 242.995 265.418 242.996 cv
265.195 242.979 mo
265.189 242.978 265.183 242.977 265.177 242.976 cv
265.183 242.977 265.189 242.978 265.195 242.979 cv
265.943 242.864 mo
265.936 242.856 li
265.931 242.858 265.927 242.861 265.923 242.863 cv
265.927 242.861 265.931 242.858 265.936 242.856 cv
265.936 242.856 li
265.943 242.864 li
266.854 242.343 267.755 241.814 268.664 241.293 cv
276.998 236.482 285.323 231.67 293.656 226.858 cv
294.822 226.189 295.988 225.513 297.154 224.845 cv
297.154 224.845 li
295.988 225.513 294.822 226.189 293.656 226.858 cv
293.656 226.858 li
285.323 231.67 276.998 236.482 268.664 241.293 cv
268.664 241.293 li
267.755 241.814 266.854 242.343 265.943 242.864 cv
263.608 240.066 mo
263.604 240.066 263.601 240.066 263.598 240.066 cv
263.601 240.066 263.604 240.066 263.608 240.066 cv
263.608 240.066 li
263.61 240.066 mo
263.941 240.066 264.28 239.999 264.576 239.808 cv
264.28 239.999 263.941 240.066 263.61 240.066 cv
264.579 239.807 mo
264.582 239.805 264.585 239.803 264.587 239.801 cv
264.585 239.803 264.582 239.805 264.579 239.807 cv
295.38 227.773 mo
295.378 227.773 295.377 227.773 295.375 227.773 cv
295.377 227.773 295.378 227.773 295.38 227.773 cv
295.38 227.773 li
295.386 227.773 mo
295.82 227.773 296.256 227.686 296.577 227.523 cv
296.256 227.686 295.82 227.773 295.386 227.773 cv
238.369 227.741 mo
238.367 227.741 238.365 227.741 238.364 227.741 cv
238.365 227.741 238.367 227.741 238.369 227.741 cv
238.369 227.741 li
238.37 227.741 mo
238.426 227.741 238.481 227.74 238.534 227.736 cv
238.481 227.74 238.426 227.741 238.37 227.741 cv
296.584 227.519 mo
296.592 227.515 296.6 227.51 296.609 227.506 cv
296.6 227.51 296.592 227.515 296.584 227.519 cv
236.983 227.355 mo
236.977 227.35 236.97 227.345 236.964 227.34 cv
236.97 227.345 236.977 227.35 236.983 227.355 cv
130.831 204.074 mo
131.131 203.734 131.407 203.299 131.591 202.85 cv
131.442 203.238 131.21 203.674 130.917 204.019 cv
132.253 203.25 li
132.253 181.041 li
132.253 181.056 li
132.253 203.25 li
133.264 203.763 li
133.264 180.473 li
133.264 203.763 li
132.253 203.25 li
130.917 204.019 li
130.831 204.074 li
131.764 202.309 mo
131.83 201.912 131.834 202.107 131.834 201.617 cv
131.834 201.92 131.834 201.959 131.818 202.045 cv
131.795 202.169 li
131.764 202.309 li
131.57 200.843 mo
131.41 200.663 131.183 200.555 130.903 200.555 cv
130.802 200.555 130.693 200.569 130.578 200.6 cv
130.695 200.568 130.808 200.553 130.914 200.553 cv
131.13 200.553 131.32 200.616 131.47 200.738 cv
131.503 200.766 li
131.506 200.769 131.508 200.771 131.511 200.774 cv
131.546 200.809 li
131.546 200.809 li
131.546 200.809 li
131.57 200.843 li
130.116 198.578 mo
130.116 193.789 li
130.497 194.007 130.877 194.232 131.259 194.45 cv
131.329 194.489 li
131.329 194.489 li
131.259 194.45 li
130.877 194.232 130.497 194.007 130.116 193.789 cv
130.116 194.707 li
130.116 194.707 li
130.116 194.707 li
130.123 198.57 li
130.116 198.578 li
130.224 198.512 mo
130.267 198.484 130.312 198.451 130.357 198.416 cv
130.271 198.484 li
130.224 198.512 li
130.397 198.385 mo
130.558 198.255 130.719 198.096 130.828 197.979 cv
130.792 198.018 li
130.714 198.104 130.621 198.189 130.52 198.282 cv
130.419 198.368 li
130.397 198.385 li
131.106 197.64 mo
131.166 197.558 131.22 197.478 131.268 197.397 cv
131.225 197.47 131.18 197.542 131.126 197.614 cv
131.12 197.623 131.113 197.631 131.106 197.64 cv
131.313 197.321 mo
131.389 197.187 131.455 197.051 131.523 196.902 cv
131.51 196.932 131.497 196.962 131.484 196.992 cv
131.43 197.101 131.383 197.202 131.329 197.295 cv
131.313 197.321 li
131.596 196.739 mo
131.611 196.708 131.625 196.675 131.64 196.642 cv
131.625 196.675 131.611 196.707 131.596 196.739 cv
131.64 196.642 mo
131.692 196.492 131.734 196.349 131.765 196.212 cv
131.764 196.222 li
131.733 196.354 131.694 196.495 131.64 196.642 cv
131.797 195.219 mo
131.795 195.21 131.793 195.201 131.791 195.193 cv
131.795 195.204 li
131.797 195.219 li
131.741 195.035 mo
131.646 194.796 131.488 194.625 131.281 194.536 cv
131.464 194.614 131.612 194.758 131.71 194.962 cv
131.71 194.963 li
131.717 194.979 li
131.725 194.996 131.733 195.015 131.741 195.033 cv
131.741 195.033 li
131.741 195.035 li
131.741 195.033 mo
131.741 195.033 li
131.739 195.026 131.736 195.019 131.734 195.012 cv
131.741 195.025 li
131.741 195.033 li
130.129 194.699 mo
130.129 194.699 li
130.129 194.699 130.129 194.699 130.129 194.699 cv
131.277 194.534 mo
131.277 194.534 131.276 194.534 131.276 194.534 cv
131.276 194.534 131.277 194.534 131.277 194.534 cv
130.116 192.444 mo
130.116 187.656 li
130.497 187.874 130.877 188.099 131.259 188.316 cv
131.329 188.355 li
131.515 188.456 131.663 188.635 131.741 188.884 cv
131.746 188.911 li
131.682 188.732 131.583 188.592 131.458 188.493 cv
131.578 188.587 131.675 188.718 131.741 188.884 cv
131.741 188.884 li
131.741 188.884 li
131.663 188.635 131.515 188.456 131.329 188.355 cv
131.259 188.316 li
130.877 188.099 130.497 187.874 130.116 187.656 cv
130.116 188.558 li
130.12 188.555 130.125 188.553 130.129 188.55 cv
130.125 188.553 130.12 188.555 130.116 188.558 cv
130.116 192.444 li
130.116 192.444 li
130.116 192.444 mo
130.83 192.015 131.526 191.064 131.755 190.104 cv
131.749 190.136 li
131.717 190.275 131.67 190.423 131.616 190.563 cv
131.305 191.356 130.714 192.087 130.116 192.444 cv
131.797 189.899 mo
131.805 189.851 131.811 189.804 131.817 189.756 cv
131.812 189.8 131.808 189.843 131.803 189.887 cv
131.803 189.887 li
131.797 189.899 li
131.824 189.729 mo
131.825 189.723 131.826 189.718 131.826 189.712 cv
131.826 189.716 li
131.824 189.729 li
107.942 167.604 mo
111.7 165.435 li
111.7 165.439 li
107.942 167.604 li
253.708 146.893 mo
236.38 136.889 li
236.484 136.925 li
253.721 146.885 li
253.721 146.885 253.716 146.888 253.708 146.893 cv
227.246 65.8286 mo
227.246 65.8286 227.246 65.8286 227.246 65.8286 cv
227.247 65.8282 227.247 65.8282 227.247 65.8282 cv
227.247 65.8282 li
.811765 .764706 .745098 rgb
f
249.452 149.878 mo
227.247 137.058 li
227.247 133.727 li
236.38 136.889 li
253.708 146.893 li
253.517 147.009 251.296 148.359 250.187 148.946 cv
249.694 149.207 249.444 149.441 249.452 149.878 cv
.768627 .721569 .686274 rgb
f
352.16 254.895 mo
352.16 254.415 li
359.289 250.303 li
359.289 249.118 li
359.29 249.118 359.291 249.118 359.293 249.118 cv
359.466 249.118 359.648 249.233 359.839 249.564 cv
360.13 250.07 359.864 250.422 359.566 250.637 cv
359.259 250.814 li
359.141 250.869 359.056 250.896 359.056 250.896 cv
352.16 254.895 li
297.668 227.068 mo
297.154 226.772 li
297.154 226.127 297.154 225.49 297.154 224.845 cv
297.154 224.845 li
297.154 224.845 li
297.154 224.845 li
297.411 224.689 297.676 224.542 297.932 224.394 cv
298.344 224.153 li
298.344 206.663 li
298.365 206.661 298.387 206.66 298.407 206.66 cv
298.727 206.66 298.918 206.925 299.1 207.535 cv
300.515 212.298 301.948 217.057 303.467 221.788 cv
303.793 222.804 303.675 223.431 303.027 223.973 cv
297.668 227.068 li
247.481 198.088 mo
227.247 186.412 li
227.247 167.631 li
238.153 161.334 li
238.153 160.518 li
227.464 154.346 li
227.247 154.47 li
227.247 137.058 li
249.452 149.878 li
249.455 150.03 249.489 150.208 249.555 150.42 cv
251.52 156.713 253.437 163.021 255.311 169.342 cv
255.661 170.528 256.325 171.263 257.389 171.833 cv
259.467 172.948 261.517 174.123 263.52 175.367 cv
264.009 175.671 264.428 176.289 264.61 176.85 cv
265.619 179.936 267.456 186.165 267.456 186.165 cv
267.456 186.165 266.836 187.716 266.488 188.091 cv
266.488 188.091 li
265.648 187.602 li
247.481 198.088 li
.752941 .698039 .647059 rgb
f
331.5 274.513 mo
331.579 272.346 332.194 270.186 333.207 268.219 cv
332.524 269.669 332.094 271.275 331.845 272.979 cv
331.795 273.319 331.814 273.676 331.726 274.004 cv
331.678 274.181 331.592 274.348 331.5 274.513 cv
334.742 265.774 mo
334.762 265.748 334.782 265.721 334.802 265.695 cv
335.494 264.785 336.318 264.063 337.267 263.511 cv
337.372 263.45 li
336.329 264.116 335.461 264.897 334.742 265.774 cv
341.014 261.348 mo
345.04 259.025 li
345.108 258.986 li
341.877 260.86 li
341.877 260.86 341.524 261.059 341.014 261.348 cv
359.259 250.814 mo
359.566 250.637 li
359.46 250.713 359.349 250.772 359.259 250.814 cv
.635294 .541176 .447059 rgb
f
330.791 266.752 mo
330.791 265.523 li
330.791 265.523 li
330.816 265.509 335.872 262.634 338.08 261.359 cv
344.851 257.452 351.624 253.55 358.414 249.677 cv
358.551 249.598 358.7 249.443 358.86 249.315 cv
359.169 249.137 li
359.208 249.125 359.248 249.119 359.289 249.118 cv
359.289 250.303 li
352.16 254.415 li
348.601 256.476 li
345.04 258.527 li
334.352 264.7 li
330.791 266.752 li
level3{
gsave
clp
[28.498 0 0 28.498 330.791 257.91 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~U90oYXI>f`R@^IISZA0LX-fEWQ^b"AR]2XAW0WgLQ'\D5QD]t4Vj*IDPEVl,P,4;'Ulgb7OcZB#O/.hr
UQ1;-Nf9]mMkQ,fTo=f$Mhn$aLS0Q[T8J>oM1hIVK:[mNSqqrgLObnLJ"24BRtZ9ZKm]>BH^]S6RY#jR
Jp<Z7GF3r*Q[j7GIs%*-FI%DsQ@<k>I;tL"E0P`gP^IA5HYnsmCm'*[P'Lf)H"rIdBp!UPOEY;uG%H_X
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[28.498 0 0 28.498 330.791 257.91 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~TqS0RTqJ'OTV%jJSt2FCSXc4?S=H+>S=?";S!oe7R[KS3R@'A/R$X/+Q^3r'QBd`#Q'@MtPa%DrPEM)l
P*1riOcb`eOH>NaO,o?_O,o<]NK&mUN/W[QMi3LOMi3IMMMd7ILkphALPLY?LPLV=L5(D9KnY25KS4u1
K7ef.JqAT*JUrB&J:N0"It)rsIXZ`pIXQWlI!g<gH[C*cH?sm`H?sm_H$FRXGB\7SG'8%PG'8%OF`hhK
FEDVHF)uABEH,u<EH,u<E,]c8Df9Q4DJj?0D/F-,Ci!p(CMR^$C2.KuBk_9qBk_9qBP;$kAnGXeAS#Fa
~>
<~XK8M)XK/D&X/i;%X/`2"WiE)!WiE)!Wi;tsWMukrWMlboW2HPkVl-GjVl$>gVP^5fVP^5fVPU,cV5:#b
V59u`Unjc\USFTZUSFTZUSFTZUSFQXU8"?TTqS0RTqS-PTV.sNTV.sNTV.pLT:_aJT:_^HSt;LDSXl=B
SXl=BSXl=BSXl=AS=H+=S"#n:S"#n9R[T\5R@0J2R@0J2R@0J2R@0J1R$a8-Q^=&*Q^=&)QBmi&QBmi&
QBmi&Q'IW"Q'IW"Pa%DsPEV2oPEV2oPEV2oPEV2oP*1ukOcbcgOcbcgOH>QcOH>QcOH>QcO,o?_O,o?_
~>
<~R[T\6R[KS3R@'A/R$a8.R$a8.R$X/+Q^3r'QBmi&QBmi&QBd`#Q'@MtP`q;pPEV2oPEV2oPEM)lP*(lh
Ocb`eOH>QcOH>QcOH>NaO,o<]NfK*YNK&pWNK&pWNK&mUN/W[QMi3IMMMd:KMMd:KMMd7IM2@%ELkphA
LPLY?LPLY?LPLY>L5(G:KnY56KS5#3KS5#3KS5#2K7ef.JqAT*JUrB'JUrB'JUrB&J:N0"It)rsIXZ`p
IXZ`pIXZ`pI=6NlI!g<hI!g<hH[C*dH[C*dH?sm`H$O[\H$O[\G^+IXG^+IXGB\7TG'8%PG'8%PF`hhL
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
330.791 265.523 mo
330.791 265.523 330.791 265.523 330.791 265.523 cv
330.791 265.523 li
358.86 249.315 mo
358.959 249.236 359.062 249.168 359.169 249.137 cv
358.86 249.315 li
280.924 236.73 mo
280.924 236.73 li
293.317 229.579 mo
297.668 227.068 li
303.027 223.973 li
302.865 224.109 302.67 224.24 302.439 224.37 cv
299.969 225.768 296.59 227.701 293.317 229.579 cv
level3{
gsave
clp
[101.655 6.98881 -6.98881 101.655 274.102 239.74 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~J=VFGSVD]eLOu+QJt@dNSqr&kLkM@UKV+'RT8A8oM2%X[L7jEZTSeMtMhn'bLnT`_To4c$Mi"-dMP5ue
U5b)*NJsTkN2)DlUQ1>/NfBipNhh_rUlUS4O-$0!OJIu"Ulge9OccK&P,4;(VNI(>P*Di,Pc'_1Vj!CD
PEi&1QD]t5Vj*OHPaA>5R&H:<WKimNQC4_<RAuRAWgB3TQ^b"AS?&!HX-fHYR%::FSZA0MX-oQ\R@gRK
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~T<+HPX-oNZR%::FS#_mEWgB-QQC4_<R&H::W0EUGPa//2Pc'_/VNR+>OccK&OJJ##Ul^Y5O,g#sN2)Dl
U5k/+NJaEgM4olaTo4`"Mhds_KqF6UT8A5mLkD:TJt@dLSVM`cL4>_II[c%>RtZ6YKR9/?H^]S5R=]^P
Jp<Z6GF*i'Q[j4FIrq$,F-_8qQ%!b=I;tL!Dj5WeP^IA4HYnsmCm''ZP'Lf)H"rIdBT[LOOEY;uG%H_X
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.470465 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[101.655 6.98881 -6.98881 101.655 274.102 239.74 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~It3'"JUrB'JqAW-K7ef/K7ei1KnY58L5(G<LPLY?LPUbBLl$tGMMd:LMi3LON/W^SNK&pWNfK0]O,o?_
OH>QdOcbchP*;)nPE_;rPa%DtQ'IW#QBml(R$a8.R$a8.R@0M4R[T_8S"-"=S=H+?SXl=CSt;OESXc4?
S"#k8R@0G0R$a5,QBmf$Q'@MsPEM)kOcYZcO,o?_NfK*XMi3LOMMd7IM26tCLPLY>KnP,3K7ef/JqAQ)
J:N-!IXZ]nI=-EhH[:!aH?jd\G^"@UG'8"NFEDSFEcQ/>EH,u;Df0H0D/F-+Chmg%C2.HsBkV-lAnGUc
~>
<~S=H.@SXl=BSXl=BSXl@DSt;OFSt;RHT:_aKTV.sNTV.sNTV.sOTqS0RU8"BVU8"EXUSFTZUSFTZUSFTZ
Unjf^UnsoaV5:#cVP^5fVP^5fVP^5gVl-GjW2QYnW2Q\pWMukrWMuntWiE)!WiE)!WiN2$X/i;$WiE)!
WiE)!WMuhpW2QVlVl-DhVP^5fVPU,cV50o^USFTZUSFTZU8"?TTqS-PTV.sNTV%jKT:VXGSt2FCSXl=B
S=H(<S"#k8R[T\5R@0J2R@'A/R$X/+QBmi&QBmi&Q'ISuPa%DrPEV2oPEM)lP*(lhOcb`eOH>QcO,o?_
~>
<~KnY89L5(J=LPLY?LPLY?LkpkCM2@(GM2I1JMMd:KMMd:LMi3LPN/W^SNK&pWNK&pWNfK-[NfK0]O,oBa
OH>QcOH>QdOcbchP*1ukP*;)nPEV2oPEV5qPa%GuQ'IW"QBmi&QBmi&Q^=&*Q^F/-R$a8.R$a8.R$X/+
Q^=#(QBmf$Q'ISuPEV2oPEV2nP*(lgOH>QcOH>NaNfK-[NK&pWN/W[QMi3LNMMd:JM2@(FLkgb@LPLY?
L5(D9KS5#3KS5#2K7\],Jq8K(JUi9$It)rtIXZ`pI=6NlI=-EhH[C*dH[:!`H$FRYG^+IXGB\4RG'8"N
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
348.601 256.96 mo
348.601 256.476 li
352.16 254.415 li
352.16 254.895 li
348.601 256.96 li
.517647 .501961 .490196 rgb
f
345.04 259.025 mo
345.04 258.527 li
348.601 256.476 li
348.601 256.96 li
345.108 258.986 li
345.04 259.025 li
.717647 .694118 .682353 rgb
f
334.352 266.278 mo
334.352 264.7 li
345.04 258.527 li
345.04 259.025 li
341.014 261.348 li
340.04 261.9 338.491 262.781 337.739 263.225 cv
337.615 263.298 337.492 263.373 337.372 263.45 cv
337.267 263.511 li
336.318 264.063 335.494 264.785 334.802 265.695 cv
334.782 265.721 334.762 265.748 334.742 265.774 cv
334.606 265.939 334.476 266.107 334.352 266.278 cv
.752941 .698039 .647059 rgb
f
331.328 274.83 mo
331.297 274.794 331.265 274.76 331.231 274.725 cv
331.452 274.598 li
331.41 274.675 331.367 274.752 331.328 274.83 cv
327.23 271.964 mo
326.886 271.908 326.525 271.678 326.206 271.494 cv
325.439 271.052 324.688 270.62 323.954 270.198 cv
327.23 268.307 li
327.23 271.964 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 256.051 485.683 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~[\ob+VOk2mT!bDc[&';"Un"ceS?o#\Z_O"rURJN`RBiQTZD!\kTpW*YR'<6MYb7>dT9laQQEQmFYF_#_
Ss6CKPcgO@XdkTWS!'kBP,t+7XI>9PRZXY=OK+_0WgJjIR#\25NiAA*WL&UDQAhc.N2W#"Vj31<P`)E'
MPcVpVNZk6PDH*!Lo$5iV3-P/ObTZoL80iaUQ:,'O+j<gKVFKZU5af"NImj`Jt\-TTT"GpMh%FXJ=h^K
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 256.051 485.683 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~[C*EM[C*EM[C!<J['[3I['R*FZa7!EZa-mBZEgdAZEgdAZEgdAZEgdAZE^[>Z*CR=Z*:I:Yct@9Yck76
YHP.5YHP+3Y-+q1Y-+q1Y-+q1Y-+q1Y-+n/Xf\_-Xf\\+XK8M)XK8J'X/i;%X/i;%X/i8#WiE)!WiE%t
WMukrWMukrWMukrWMukqW2QYnW2QYnW2QYmVl-GjVl-GiVP^5fVP^5eV5:#bV5:#bV5:#bV5:#bV5:#a
Unjf^Unjf^USFTZUSFTZU8"BVU8"BVTqS0RTqS0RTqS0RTqS0RTqS0RTV.sNTV.sNT:_aJT:_aJSt;OF
~>
<~VP^5fVPU,cV5:#bV50o_Unjf^Una][USFTZUSFTZUS=KWU8"BVU7n9STqS0RTqJ'OTV.sNTV.sNTV%jK
T:_aJT:_^HSt;LDSXl=BSXl=BSXl=BSXl:@S=H(<S"#n:S"#k8R[T\6R[TY4R@0J2R@0J2R@0G0R$a8.
R$a8-Q^=&*Q^=&)QBmi&QBmi&QBmi%Q'IW"Q'IW!Pa%DsPa%DrPEV2oPEV2oPEV2nP*1ukP*1ujOcbcf
OH>QcOH>QcOH>QcOH>QcO,o?_NfK-[NfK-[NK&pWNK&pWN/W^SN/W^SN/W^SMi3LOMi3LOMMd:KMMd:K
~>
<~St;OFSt2FCSXl=BSXc4?S=?";S"#n:S"#n:S!oe7R[T\6R[KS3R@'A/R$a8.R$a8.R$X/+Q^=&*Q^3r'
QBmi&QBmi&QBmf$Q'ISuPa%DsPa%AqPEV2oPEV2oPEV/mP*1riOcbcgOcb`eOH>QcOH>QcOH>NaO,o<]
NfK-[NfK-ZNK&pWNK&pWNK&pVN/W^RMi3LOMi3LNMMd:KMMd:KMMd:JM2@(FLkpkCLkpkBLPLY?LPLY?
LPLY?L5(G;KnY57KnY57KS5#3KS5#3KS5#3K7ef/JqAT+JqAT+JUrB'JUrB'JUrB'J:N0#It)rtIt)rt
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
331.231 274.725 mo
331.073 274.565 330.893 274.414 330.791 274.235 cv
330.791 266.752 li
334.352 264.7 li
334.352 266.278 li
333.908 266.887 333.53 267.535 333.207 268.219 cv
332.194 270.186 331.579 272.346 331.5 274.513 cv
331.484 274.541 331.468 274.57 331.452 274.598 cv
331.231 274.725 li
.517647 .501961 .490196 rgb
f
330.791 274.235 mo
330.771 274.2 330.754 274.163 330.741 274.126 cv
330.275 272.782 329.035 271.974 327.548 271.974 cv
327.501 271.974 327.454 271.975 327.407 271.977 cv
327.398 271.977 327.39 271.977 327.381 271.977 cv
327.331 271.977 327.281 271.972 327.23 271.964 cv
327.23 268.307 li
327.23 264.7 li
330.791 266.752 li
330.791 274.235 li
.717647 .694118 .682353 rgb
f
330.791 266.752 mo
327.23 264.7 li
295.173 246.191 li
291.612 244.139 li
291.612 244.131 li
330.791 266.752 li
291.612 244.131 mo
288.052 242.079 li
280.924 237.966 li
291.612 244.131 li
280.924 237.966 mo
280.924 237.966 li
280.924 236.73 li
280.924 237.966 li
level3{
gsave
clp
[49.8675 0 0 49.8675 280.923 251.741 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[49.8675 0 0 49.8675 280.923 251.741 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
323.954 270.198 mo
295.872 254.042 292.417 252.205 292.298 252.205 cv
292.263 252.205 292.518 252.364 292.518 252.364 cv
291.612 252.363 li
291.612 252.363 li
295.173 250.303 li
295.173 246.191 li
327.23 264.7 li
327.23 268.307 li
323.954 270.198 li
.713725 .654902 .623529 rgb
f
265.943 242.864 mo
265.936 242.856 li
266.193 242.719 266.383 242.465 266.479 242.108 cv
266.509 242.124 li
266.509 242.124 266.508 242.074 266.507 241.989 cv
266.535 241.849 266.55 241.694 266.55 241.527 cv
266.55 232.478 li
266.587 231.647 266.652 230.819 266.763 229.996 cv
266.823 229.544 266.908 229.106 267.014 228.681 cv
267.272 227.758 267.63 226.858 268.073 226.002 cv
269.262 223.864 271.15 222.153 273.549 220.819 cv
281.626 216.328 289.591 211.636 297.576 206.981 cv
297.896 206.795 298.144 206.683 298.344 206.663 cv
298.344 224.153 li
297.932 224.394 li
297.676 224.542 297.411 224.689 297.154 224.845 cv
297.154 224.845 li
295.988 225.513 294.822 226.189 293.656 226.858 cv
285.323 231.67 276.998 236.482 268.664 241.293 cv
267.755 241.814 266.854 242.343 265.943 242.864 cv
.529412 .427451 .313725 rgb
f
265.409 242.996 mo
265.408 242.996 265.407 242.996 265.406 242.996 cv
265.338 242.996 265.267 242.99 265.195 242.979 cv
265.189 242.978 265.183 242.977 265.177 242.976 cv
265.171 242.975 265.164 242.974 265.158 242.973 cv
265.158 242.973 li
264.948 242.941 264.724 242.856 264.482 242.716 cv
238.534 227.736 li
236.606 226.617 li
235.915 226.221 li
234.779 225.567 233.854 223.974 233.854 222.644 cv
233.854 213.114 li
233.854 210.207 234.974 207.284 236.762 204.944 cv
237.376 204.151 238.099 203.506 238.931 203.024 cv
247.481 198.088 li
265.648 187.602 li
266.488 188.091 li
266.348 188.2 266.216 188.324 266.092 188.449 cv
265.835 188.713 265.586 188.97 265.337 189.234 cv
265.322 189.242 li
240.19 203.755 li
239.358 204.237 238.635 204.874 238.021 205.675 cv
236.233 208.015 235.114 210.93 235.114 213.837 cv
235.114 220.989 li
235.114 220.989 li
235.114 221.401 235.207 221.836 235.347 222.233 cv
235.347 222.419 235.347 222.614 235.347 222.808 cv
235.347 222.808 li
235.347 222.808 li
235.347 223.593 235.65 224.425 236.318 224.813 cv
244.9 229.765 253.482 234.717 262.057 239.677 cv
262.057 239.677 262.803 240.063 263.598 240.066 cv
263.601 240.066 263.604 240.066 263.608 240.066 cv
263.608 240.066 li
263.608 240.066 li
263.608 240.066 263.609 240.066 263.61 240.066 cv
263.941 240.066 264.28 239.999 264.576 239.808 cv
264.577 239.808 264.578 239.807 264.579 239.807 cv
264.582 239.805 264.585 239.803 264.587 239.801 cv
264.591 239.798 264.595 239.796 264.599 239.793 cv
264.98 239.544 265.291 239.148 265.291 238.417 cv
265.291 232.382 li
265.33 232.365 265.352 232.356 265.352 232.356 cv
265.352 241.496 li
266.479 242.108 li
266.383 242.465 266.193 242.719 265.936 242.856 cv
265.936 242.856 li
265.931 242.858 265.927 242.861 265.923 242.863 cv
265.919 242.866 265.916 242.868 265.912 242.87 cv
265.766 242.953 265.6 242.995 265.418 242.996 cv
265.415 242.996 265.412 242.996 265.409 242.996 cv
266.507 241.989 mo
266.504 241.677 266.497 240.899 266.512 240.463 cv
266.599 237.81 266.432 235.126 266.55 232.478 cv
266.55 241.527 li
266.55 241.694 266.535 241.849 266.507 241.989 cv
267.014 228.681 mo
267.256 227.721 267.612 226.83 268.073 226.002 cv
267.63 226.858 267.272 227.758 267.014 228.681 cv
.635294 .541176 .447059 rgb
f
273.992 246.11 mo
273.587 246.11 273.182 246.106 272.773 246.098 cv
268.076 246.006 264.312 244.019 260.497 241.762 cv
255.647 238.893 250.734 236.131 245.868 233.291 cv
245.51 233.081 245.201 232.982 244.893 232.982 cv
244.538 232.982 244.185 233.114 243.759 233.363 cv
242.304 234.212 240.849 235.06 239.393 235.907 cv
230.76 230.924 li
236.956 227.348 li
236.964 227.34 li
236.964 227.34 li
236.97 227.345 236.977 227.35 236.983 227.355 cv
237.343 227.627 237.905 227.741 238.364 227.741 cv
238.365 227.741 238.367 227.741 238.369 227.741 cv
238.369 227.741 li
238.369 227.741 li
238.369 227.741 238.37 227.741 238.37 227.741 cv
238.426 227.741 238.481 227.74 238.534 227.736 cv
238.534 227.736 li
238.534 227.736 li
264.482 242.716 li
264.724 242.856 264.948 242.941 265.158 242.973 cv
265.158 243.221 li
265.158 243.221 li
265.158 243.502 265.392 243.75 265.641 243.921 cv
265.641 243.921 li
265.645 243.924 265.649 243.926 265.653 243.929 cv
265.969 244.128 266.423 244.223 266.879 244.223 cv
266.881 244.223 266.882 244.223 266.883 244.223 cv
266.883 244.223 li
266.883 244.223 li
266.884 244.223 266.886 244.223 266.887 244.223 cv
267.354 244.223 267.824 244.124 268.151 243.936 cv
268.151 243.936 li
268.447 243.766 268.664 243.509 268.664 243.221 cv
268.664 242.576 268.664 241.939 268.664 241.293 cv
268.664 241.293 li
268.664 241.293 li
276.998 236.482 285.323 231.67 293.656 226.858 cv
293.656 226.858 li
293.656 226.858 li
293.703 227.107 293.913 227.324 294.131 227.464 cv
294.448 227.674 294.91 227.773 295.375 227.773 cv
295.377 227.773 295.378 227.773 295.38 227.773 cv
295.38 227.773 li
295.38 227.773 li
295.382 227.773 295.384 227.773 295.386 227.773 cv
295.82 227.773 296.256 227.686 296.577 227.523 cv
296.579 227.521 296.582 227.52 296.584 227.519 cv
296.592 227.515 296.6 227.51 296.609 227.506 cv
296.62 227.5 296.631 227.494 296.642 227.488 cv
297.022 227.27 297.154 226.99 297.154 226.772 cv
297.154 226.772 li
297.668 227.068 li
293.317 229.579 li
287.75 232.773 282.484 235.811 282.484 235.811 cv
280.924 236.73 li
280.924 237.966 li
288.052 242.079 li
288.052 242.548 li
287.974 242.577 287.452 242.778 287.209 242.931 cv
283.125 245.512 278.687 246.11 273.992 246.11 cv
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 186.239 462.356 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 186.239 462.356 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
295.38 227.773 mo
295.38 227.773 li
295.378 227.773 295.377 227.773 295.375 227.773 cv
294.91 227.773 294.448 227.674 294.131 227.464 cv
293.913 227.324 293.703 227.107 293.656 226.858 cv
293.656 226.858 li
294.822 226.189 295.988 225.513 297.154 224.845 cv
297.154 224.845 li
297.154 225.49 297.154 226.127 297.154 226.772 cv
297.154 226.772 li
297.154 226.772 li
297.154 226.99 297.022 227.27 296.642 227.488 cv
296.631 227.494 296.62 227.5 296.609 227.506 cv
296.6 227.51 296.592 227.515 296.584 227.519 cv
296.582 227.52 296.579 227.521 296.577 227.523 cv
296.256 227.686 295.82 227.773 295.386 227.773 cv
295.384 227.773 295.382 227.773 295.38 227.773 cv
.529412 .427451 .313725 rgb
f
291.612 252.363 mo
291.622 252.224 291.622 252.092 291.612 251.965 cv
291.612 244.139 li
295.173 246.191 li
295.173 250.303 li
291.612 252.363 li
.517647 .501961 .490196 rgb
f
261.862 206.608 mo
260.044 205.559 li
259.795 205.247 259.616 204.882 259.507 204.486 cv
259.383 204.073 259.327 203.627 259.327 203.18 cv
259.326 202.785 259.368 202.389 259.445 202.014 cv
259.927 199.736 260.401 197.458 260.883 195.181 cv
261.124 194.022 261.684 192.996 262.384 192.273 cv
263.363 191.263 264.343 190.252 265.322 189.242 cv
265.322 189.242 li
265.322 189.242 li
265.337 189.234 li
265.586 188.97 265.835 188.713 266.092 188.449 cv
266.216 188.324 266.348 188.2 266.488 188.091 cv
266.488 188.091 li
266.488 188.091 li
264.947 189.75 263.722 190.922 262.207 192.602 cv
261.717 193.146 261.342 194.019 261.341 194.741 cv
261.34 198.174 261.469 201.607 261.602 205.039 cv
261.619 205.494 261.69 206.084 261.888 206.594 cv
261.879 206.598 261.871 206.604 261.862 206.608 cv
level3{
gsave
clp
[14.1188 -21.4606 21.4606 14.1188 269.915 212.053 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZCQlYSVj_DMR/k2Z_!&\Sr0kGMR/n3Z_!&\Sr0kGMR/n3Z_!&]Sr0nHMR8t4[%</_Sr0qIMRB%5[@`>a
T8L(LMRK.7[\&GcT8L(LMRT48\"JVfTSg4OMRT79\"JVfTSg4OMRT79\"S\hTo-@RMR]@;\=neiTo-CS
MRfF<\Y4nkTo-CSMRoL=\tP"mTo-FTMS#R>]:t1pU5HRWMS#U?]V::rU5HUXMS,[@]VC@sUPc^ZMS,^A
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~]VC@sU5?LULq9:9\Y+_fT8'hHKt!Y-\"/2\S:e5=K!^ttZ^QENR=DN0J$G>hYa9dAQ[H!&I'/`]Xd".5
P^0<nH)d$PWf_M*O`m^cG,UIEViGkrNH:tVF/=h9Ul05fMK#;IDk`)+TnmTZLM`Z=Cn?AsSqUsNKPI'2
Bq0fhRt>=BJS1C$Asn0\R"/b7Iq4joA!MIOQ$m,+Hsi.b?]o_BP'UGsH!QMV>`a/7O*=fgG$9lJ=c@H*
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.370267 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.1188 -21.4606 21.4606 14.1188 269.915 212.053 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Z*CR=ZEgdAZEgdAZEgdAZEgdBZa7!EZa@*H['[3I[C*EM[C*EM[^NWQ[^NWQ[^NWQ[^NWR\$riU\$rlW
\@B&Y\@B)[\[f8]]"5Ja]"5Jb]=Y\e]=Y\e]=Y\e]=Y\e]"5J`\[f5[\$riT[^NWQ[^NTO[C!<IZa6sC
ZEgd@Z*CO;YHP.4Y-+q1Xf\\+XK/D&WiE%tWMukrWMuhpVl-GiVPU,cV5:#aUna][U8"?TTqS0QTV.pL
T:VXFSXl=BS=H+>S=?";R[TY4R@'A/R$a5,Q^3r&Q'ISuPa%DrPEM)lOcbcgOcYZdO,o?_O,f6[NK&mU
~>
<~S=H+>S=Q4ASXl=BSXl=BSXl=BSXl=BSXl=BSXuFESt;OFSt;OFStDXIT:_aJT:_aJT:hjMTV.sNTV.sN
TV.sNTV.sNTV.sNTV8'QTqS0RTqS0RTq\9UU8"BVU8"?TTV.sNTV.pLSt;OESXl=BS=H(<S!oe6R@0J2
R@'A.Q^=#(QBmi&QBd`#Pa%AqPEV2oP*1riOcYZdOH>NaNfK-ZNJrgTN/W^RMi*CLM2@(GM26tCLPLV=
L5(G:KnY25K7ef/K7\],JUr?%J:E&uIt)rtIsuipI=6KjI!g<gH[:!aH$O[\H$FRYGB\4RG'8%OF`heJ
~>
<~M2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@(G
M2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@(GM2@%ELPLY?LPLV=KnY56KS5#3K7ec-Jq8K'J:N-!
IsuiqIXZ]nI!g<gH[C*dH?sj^H$FRYG^+FVGBS.PF`hhLFEDVGF)l;AEcQ2?EH#l9Df9N2DJa6-D/F**
Chmg$C2.KuBk_9pBP1sjB4kggAn>ObA7T4]A7K+Y@U`bS@:<PN?X@&F?=$rD?!LW>>?b<9>?Y35=]nj/
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
291.612 251.965 mo
291.509 250.566 290.309 249.93 289.393 249.448 cv
288.544 249 288.067 248.533 288.062 247.702 cv
288.048 246.079 288.062 242.544 288.062 242.544 cv
288.062 242.544 288.058 242.545 288.052 242.548 cv
288.052 242.079 li
291.612 244.131 li
291.612 244.139 li
291.612 251.965 li
.717647 .694118 .682353 rgb
f
263.608 240.066 mo
263.608 240.066 li
263.604 240.066 263.601 240.066 263.598 240.066 cv
262.803 240.063 262.057 239.677 262.057 239.677 cv
253.482 234.717 244.9 229.765 236.318 224.813 cv
235.65 224.425 235.347 223.593 235.347 222.808 cv
235.347 222.808 li
235.347 222.614 235.347 222.419 235.347 222.233 cv
235.347 222.233 li
235.347 221.626 235.347 221.02 235.347 220.421 cv
235.347 219.271 235.953 218.082 236.878 217.553 cv
244.419 213.192 251.959 208.839 259.499 204.486 cv
259.507 204.486 li
259.507 204.486 li
259.616 204.882 259.795 205.247 260.044 205.559 cv
261.862 206.608 li
234.78 222.255 246.639 215.394 240.585 218.907 cv
239.261 219.676 238.846 220.625 239.24 222.119 cv
239.909 224.658 241.069 226.614 243.643 227.951 cv
248.611 230.534 260.264 237.416 261.556 238.035 cv
261.862 234.031 264.829 232.584 265.291 232.382 cv
265.291 238.417 li
265.291 239.148 264.98 239.544 264.599 239.793 cv
264.595 239.796 264.591 239.798 264.587 239.801 cv
264.585 239.803 264.582 239.805 264.579 239.807 cv
264.578 239.807 264.577 239.808 264.576 239.808 cv
264.28 239.999 263.941 240.066 263.61 240.066 cv
263.609 240.066 263.608 240.066 263.608 240.066 cv
level3{
gsave
clp
[22.8725 -31.9085 31.9085 22.8725 247.666 232.851 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZCQlXS;FM?Lp3>(YF:6MRYJ#6Ks$esXd=^BQ\2B+Jub2gWg/+7P^f]tJ#SW\W0;Y.P'j0iI&<$QVN?,$
O*RR^H)-IFUQ'JmNHV%TG+sn;U5F&dMK>GJF.\;0T87KYLN&f>Dk2Z$SVD$PKl*<4Cn$)nRY,CDK5-g+
BpjNcR"/k:J7k0tAsRmWQ%!;0I:SRjA!D@MPC$c%H=2n^?]fYAOEk/oG[6DT>`X)6Nd"]eG$9lJ=c@H*
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.8725 -31.9085 31.9085 22.8725 247.666 232.851 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Z*CR=Z*:I:Yct@9Yck76YHG%2Y-+q1Y-+q1Y-"h.XfSV*XK/D&X/i;%X/`2"Wi;tsWMukrWMukrWMlbo
W2QVlVl-GjVl-DhVP^2dV5:#bV5:#bV59u`Unjc\USFQXU8"BVU8"?TTqS0RTqS0RTqS-PTV.pLT:_^H
St;OFSt;OESXl=AS=H+>S=H+>S=H+=S"#n9R[T\6R[T\5R@0J1R$a8.R$a8.R$a8-Q^=&)QBmi%Q'IW"
Q'IW"Pa%DsPa%DsPEV2oPEV2oP*1ukOcbcgOcbcgOH>QcO,o?_O,o?_O,o?_NfK-[NK&pWN/W^SN/W^S
~>
<~S=H+>S=?";S!oe7R[KS3R@0J2R@0J2R@'A/R$X/+Q^3r'QBmi&QBmi&QBd`#Q'@MtP`q;pPEV2oPEM)l
P*1ukP*1riOcb`eOH>QcOH>NaO,o<]NfK*YNK&pWNK&mUN/W^SN/W[QMi3IMMMd7IM2@(GM2@(GM2@%E
LkpkBLPLY>L5(G;L5(G;L5(G:KnY56KS5#2K7ef/K7ef.JqAT+JqAT*JUrB&J:N0"It)rtIt)rsIXZ`o
I=6NlI=6NlI!g<hI!g<hH[C*dH?sm`H$O[\H$O[\H$O[\G^+IXGB\7TG'8%PG'8%PG'8%PF`hhLFEDVH
~>
<~M2@(GM26tDLkgb@LPLY?LPCP<L4t>8KnP,4KS5#3KS+o0K7\],Jq8K(JUi9$J:E&uIsuiqIXZ`pIXQWm
I=6KjI!g9fH[C*dH[C'bH?sj^H$OXZG^+IXG^+FVGB\4RG'8"NF`hhLF`heJFEDSFF)uABEcQ2@EcQ/>
EH,u;E,]c7Df9Q3DJj?/D/F-,D/F-+Ci!p'CMR^#C2.KuC2.KtBk_9pBP;'lB4kjiB4kjhAnGXdAS#F`
A7T4]A7T4]@q0"Y@U`eU@:<SQ@:<PO?XI/I?=$rE?=$rE?!U`A>[1N=>?b<9>?b<9>$>*5=]nm1=BJ[-
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
202.193 256.916 mo
193.968 252.169 li
230.76 230.924 li
239.393 235.907 li
232.308 240.03 225.209 244.132 218.079 248.176 cv
213.392 250.835 208.552 253.228 203.886 255.92 cv
203.319 256.247 202.754 256.58 202.193 256.916 cv
.713725 .654902 .623529 rgb
f
266.883 244.223 mo
266.883 244.223 li
266.882 244.223 266.881 244.223 266.879 244.223 cv
266.423 244.223 265.969 244.128 265.653 243.929 cv
265.649 243.926 265.645 243.924 265.641 243.921 cv
265.641 243.921 li
265.392 243.75 265.158 243.502 265.158 243.221 cv
265.158 243.221 li
265.158 242.973 li
265.158 242.973 li
265.164 242.974 265.171 242.975 265.177 242.976 cv
265.183 242.977 265.189 242.978 265.195 242.979 cv
265.267 242.99 265.338 242.996 265.406 242.996 cv
265.407 242.996 265.408 242.996 265.409 242.996 cv
265.409 242.996 li
265.412 242.996 265.415 242.996 265.418 242.996 cv
265.6 242.995 265.766 242.953 265.912 242.87 cv
265.916 242.868 265.919 242.866 265.923 242.863 cv
265.927 242.861 265.931 242.858 265.936 242.856 cv
265.943 242.864 li
266.854 242.343 267.755 241.814 268.664 241.293 cv
268.664 241.293 li
268.664 241.939 268.664 242.576 268.664 243.221 cv
268.664 243.509 268.447 243.766 268.151 243.936 cv
268.151 243.936 li
267.824 244.123 267.354 244.223 266.887 244.223 cv
266.886 244.223 266.884 244.223 266.883 244.223 cv
.529412 .427451 .313725 rgb
f
235.347 222.233 mo
235.347 222.233 li
235.347 222.233 li
235.207 221.836 235.114 221.401 235.114 220.989 cv
235.114 220.989 li
235.114 213.837 li
235.114 210.93 236.233 208.015 238.021 205.675 cv
238.635 204.874 239.358 204.237 240.19 203.755 cv
265.322 189.242 li
264.343 190.252 263.363 191.263 262.384 192.273 cv
261.684 192.996 261.124 194.022 260.883 195.181 cv
260.401 197.458 259.927 199.736 259.445 202.014 cv
259.368 202.389 259.326 202.785 259.327 203.18 cv
259.327 203.627 259.383 204.073 259.507 204.486 cv
259.507 204.486 li
259.499 204.486 li
251.959 208.839 244.419 213.192 236.878 217.553 cv
235.953 218.082 235.347 219.271 235.347 220.421 cv
235.347 221.02 235.347 221.626 235.347 222.233 cv
f
230.76 230.924 mo
230.76 230.924 li
201.244 213.876 li
201.99 213.449 li
203.918 212.329 li
203.918 199.876 li
227.247 186.412 li
247.481 198.088 li
238.931 203.024 li
238.099 203.506 237.376 204.151 236.762 204.944 cv
234.974 207.284 233.854 210.207 233.854 213.114 cv
233.854 222.644 li
233.854 223.974 234.779 225.567 235.915 226.221 cv
236.606 226.617 li
236.597 226.654 236.594 226.69 236.594 226.727 cv
236.594 226.924 236.711 227.117 236.855 227.254 cv
236.964 227.34 li
236.956 227.348 li
230.76 230.924 li
.713725 .654902 .623529 rgb
f
238.369 227.741 mo
238.369 227.741 li
238.367 227.741 238.365 227.741 238.364 227.741 cv
237.905 227.741 237.343 227.627 236.983 227.355 cv
236.977 227.35 236.97 227.345 236.964 227.34 cv
236.964 227.34 li
236.855 227.254 li
236.711 227.117 236.594 226.924 236.594 226.727 cv
236.594 226.69 236.597 226.654 236.606 226.617 cv
238.534 227.736 li
238.534 227.736 li
238.481 227.74 238.426 227.741 238.37 227.741 cv
238.37 227.741 238.369 227.741 238.369 227.741 cv
.529412 .427451 .313725 rgb
f
208.73 178.328 mo
208.73 177.503 li
230.317 165.042 li
238.153 160.518 li
238.153 161.334 li
227.247 167.631 li
208.73 178.328 li
238.153 160.518 mo
238.153 160.518 li
.560784 .54902 .533333 rgb
f
230.317 165.042 mo
230.317 165.042 li
229.758 164.071 li
229.758 163.768 li
221.922 159.236 li
219.007 160.922 li
218.999 160.922 li
218.478 160.619 li
218.012 159.803 li
227.247 154.47 li
227.464 154.346 li
238.153 160.518 li
230.317 165.042 li
.788235 .72549 .670588 rgb
f
165.788 278.386 mo
157.176 273.414 li
193.968 252.169 li
202.193 256.916 li
198.358 259.213 194.631 261.691 190.775 263.951 cv
189.779 264.535 177.789 271.464 165.788 278.386 cv
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 138.284 446.332 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 138.284 446.332 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
193.968 252.169 mo
193.968 252.169 li
164.444 235.122 li
201.244 213.876 li
230.76 230.924 li
193.968 252.169 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 127.528 442.738 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 127.528 442.738 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
208.73 177.503 mo
208.73 177.503 li
203.918 174.728 li
203.918 169.784 li
210.953 173.842 li
216.496 170.64 li
208.66 166.115 li
203.918 168.844 li
203.918 167.942 li
218.012 159.803 li
218.478 160.619 li
212.936 163.822 li
220.771 168.354 li
223.422 166.815 li
223.43 166.815 li
224.215 167.273 li
229.758 164.071 li
230.317 165.042 li
208.73 177.503 li
.788235 .72549 .670588 rgb
f
224.215 167.273 mo
224.215 166.97 li
229.758 163.768 li
229.758 164.071 li
224.215 167.273 li
229.758 163.768 mo
229.758 163.768 li
.752941 .611765 .635294 rgb
f
224.215 166.97 mo
224.215 166.97 li
216.372 162.438 li
218.999 160.922 li
219.007 160.922 li
221.922 159.236 li
229.758 163.768 li
224.215 166.97 li
.792157 .705882 .694118 rgb
f
203.918 199.876 mo
203.918 175.552 li
208.73 178.328 li
227.247 167.631 li
227.247 186.412 li
203.918 199.876 li
level3{
gsave
clp
[57.9676 168.981 -168.981 57.9676 182.02 85.9162 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.9676 168.981 -168.981 57.9676 182.02 85.9162 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
203.918 167.942 mo
203.918 109.508 li
201.594 108.171 li
201.594 108.163 li
201.594 85.104 li
201.671 85.0592 201.719 85.0317 201.736 85.0214 cv
200.439 84.2168 199.302 83.5118 198.012 82.7114 cv
207.763 77.0966 227.102 65.9118 227.246 65.8286 cv
227.247 65.8282 li
227.247 65.8282 li
227.22 133.718 li
227.247 133.727 li
227.247 137.058 li
227.247 154.47 li
218.012 159.803 li
203.918 167.942 li
level3{
gsave
clp
[57.9676 168.981 -168.981 57.9676 202.544 78.8758 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Xgk4/\>?79UoLo"WOJY$[\B\-U8G>lV6lql[%O2$T;&ZaTsL>`ZCRVmSXm$US["]TYa_,dR[L@JRBN$G
Y*kWZR$OnAQ*$C;Xd>6QQBJ;6OK4V-X-A[FP`Dc-N2_u!WKE+;Oc$'!Lo6>jViQV1NeXEkKVa]^V2^,'
N.Rj`JY\3RUPjVsMLM:VIA)IDTnn&hLjG_LH(]n9T7qK]Km'&@Fe48-SqD'SJo[B5EL_SuRt5IHJ8Ug*
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.9676 168.981 -168.981 57.9676 202.544 78.8758 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~XK8M)XK/D&X/`2"Wi;tsWMlboW2HPkVl$>gVPU,cV50o_Una][US=KWU7n9STqJ'OTV%jKT:VXFSXc4?
S=H+>S=H(<S"#k8R@0G0R$a8.R$a5,Q^=#(QBmf$Q'ISuPa%AqPEV/mP*1riOH>NaO,o?_O,o<]NfK*Y
N/W^RMi3LOMi3LNMMd:JM26tCLPLY?LPLY>L5(G:KnP,3K7ef/K7ef.JqAT*JUrB&J:E&tIXZ`pIXZ`o
I=6NlI!g9fH?sm`H?sm`H$O[\G^+FVG'8%PG'8%PF`hhLFEDSFEcQ2@EH,u<EH,u<E,]`6DJj?0D/F-,
~>
<~\$riU\$riU\$riU\$i`R[^NWQ[^ENN[C!<J['[3I['R*FZa7!EZa7!EZa-mBZEgdAZE^[>Z*:I:Yct@9
Yct@9Yct=7YHP.5YHP+3Y-+q1Y-+n/Xf\_-Xf\_-Xf\\+XK8M)XK8J'X/i8#WiE)!WiE)!WiE%tWMukr
WMukqW2QYnW2QYmVl-GiVP^5fVP^5fVP^5eV5:#bV5:#aUnjf^Unjf]USFTZUSFTZUSFTYU8"BVU8"BU
TqS0RTV.sNTV.sNTV.sNT:_aJT:_aJSt;OFSt;OFSXl=BSXl=BSXl=BS=H+>S"#n:S"#n:R[T\6R[T\6
~>
<~Unjf^Unjf^Una][USFTZUS=KWU7n9STqS0RTqJ'OTV.sNTV%jKT:VXGSt;OFSt2FCSXc4?S=H+>S=?";
S"#n:S"#k8R[TY4R@0J2R@0G0R$a8.R$a5,Q^=#(QBmi&QBmi&QBmf$Q'ISuPa%AqPEV2oPEV2oPEV/m
P*1ujOcbcfOH>QcOH>QcOH>QbO,o?^NfK-ZNK&pWNK&pWNK&pVN/W^RMi3LNMMd:KMMd:KMMd:JM2@(F
LkpkCLPLY?LPLY?LPLY?L5(G;KnY57KS5#3KS5#3K7ef/K7ef/JqAT+JUrB'JUrB'J:N0#J:N0#It)rt
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
224.215 167.273 mo
223.43 166.815 li
223.422 166.815 li
216.372 162.742 li
216.372 162.438 li
224.215 166.97 li
224.215 167.273 li
.72549 .533333 .580392 rgb
f
220.771 168.354 mo
212.936 163.822 li
218.478 160.619 li
218.999 160.922 li
216.372 162.438 li
216.372 162.742 li
223.422 166.815 li
220.771 168.354 li
.752941 .611765 .635294 rgb
f
210.953 173.842 mo
203.918 169.784 li
203.918 168.844 li
208.66 166.115 li
216.496 170.64 li
210.953 173.842 li
f
208.73 178.328 mo
203.918 175.552 li
203.918 174.728 li
208.73 177.503 li
208.73 178.328 li
.427451 .415686 .403922 rgb
f
141.481 248.375 mo
141.481 145.562 li
203.918 109.508 li
203.918 167.942 li
203.918 168.844 li
203.918 169.784 li
203.918 174.728 li
203.918 175.552 li
203.918 199.876 li
203.918 212.329 li
201.99 213.449 li
201.99 212.92 li
201.99 113.309 li
198.166 115.517 li
187.291 121.79 li
187.291 121.798 li
186.731 122.117 li
179.61 126.229 li
163.457 135.549 li
163.457 135.557 li
155.854 139.941 li
155.225 140.307 li
154.618 140.657 li
143.525 147.062 li
143.525 243.991 li
143.525 246.673 li
143.525 247.202 li
141.481 248.375 li
203.918 109.508 mo
203.918 109.508 li
.647059 .635294 .623529 rgb
f
141.481 145.562 mo
141.481 145.562 li
134.531 141.551 li
196.969 105.497 li
201.594 108.163 li
201.594 108.171 li
203.918 109.508 li
141.481 145.562 li
.564706 .541176 .552941 rgb
f
143.525 247.202 mo
143.525 246.673 li
201.99 212.92 li
201.99 213.449 li
201.244 213.876 li
164.444 235.122 li
143.525 247.202 li
201.99 212.92 mo
201.99 212.92 li
.466667 .45098 .454902 rgb
f
201.99 212.92 mo
201.99 212.92 li
198.166 210.712 li
198.166 167.802 li
198.166 164.475 li
198.166 145.111 li
198.166 132.806 li
198.166 122.816 li
198.166 119.489 li
198.166 115.517 li
201.99 113.309 li
201.99 212.92 li
f
143.525 246.673 mo
143.525 246.673 li
143.525 243.991 li
154.618 237.585 li
155.225 237.936 li
155.225 237.936 li
155.854 237.578 li
155.854 232.501 li
182.339 217.211 li
186.731 219.745 li
187.291 219.426 li
187.291 216.986 li
190.913 214.895 194.536 212.803 198.166 210.712 cv
198.166 210.712 li
201.99 212.92 li
143.525 246.673 li
.552941 .537255 .545098 rgb
f
53.7714 290.928 mo
53.7714 178.333 li
53.8779 178.597 li
53.8779 176.281 53.7714 170.344 53.7714 170.344 cv
53.7714 170.344 li
53.7731 170.343 53.7732 170.343 53.7733 170.343 cv
53.7714 170.344 li
54.4416 169.958 196.325 88.1504 201.594 85.104 cv
201.594 108.163 li
196.969 105.497 li
134.531 141.551 li
134.617 179.393 li
133.684 179.393 li
132.253 178.576 li
130.116 179.805 li
130.116 152.123 li
122.871 147.94 li
60.4336 183.987 li
60.6665 286.94 li
53.7714 290.928 li
81.9121 170.624 mo
81.9121 170.624 li
82.6269 171.036 li
103.997 158.699 li
103.997 146.355 li
103.289 145.943 li
81.9121 158.287 li
81.9121 170.624 li
155.722 128.009 mo
155.722 128.009 li
156.43 128.421 li
177.799 116.084 li
177.799 103.748 li
177.092 103.336 li
155.722 115.672 li
155.722 128.009 li
.788235 .72549 .670588 rgb
f
53.7714 170.344 mo
53.7714 170.344 53.7719 170.344 53.773 170.343 cv
53.7714 170.344 li
53.7733 170.343 mo
53.7734 170.343 53.7736 170.343 53.7738 170.343 cv
53.7714 170.344 li
.752941 .698039 .647059 rgb
f
187.291 216.986 mo
187.291 216.985 li
187.291 121.798 li
187.291 121.791 li
198.166 115.517 li
198.166 119.489 li
187.291 145.85 li
187.291 149.185 li
198.166 122.816 li
198.166 132.806 li
187.291 159.173 li
187.291 171.479 li
198.166 145.111 li
198.166 164.475 li
187.291 190.835 li
187.291 194.162 li
198.166 167.802 li
198.166 210.712 li
194.536 212.803 190.913 214.895 187.291 216.986 cv
level3{
gsave
clp
[56.8739 92.9669 -92.9669 56.8739 165.972 122.516 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[56.8739 92.9669 -92.9669 56.8739 165.972 122.516 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
128.101 295.112 mo
127.729 295.112 127.356 294.966 126.99 294.646 cv
125.773 293.585 124.393 293.265 122.965 293.161 cv
157.176 273.414 li
165.788 278.386 li
154.754 284.75 143.711 291.108 141.194 292.523 cv
139.871 293.267 138.164 293.409 136.606 293.628 cv
136.364 293.662 136.119 293.676 135.871 293.676 cv
135.361 293.676 134.841 293.617 134.311 293.559 cv
133.782 293.5 133.244 293.442 132.698 293.442 cv
131.616 293.442 130.505 293.671 129.371 294.585 cv
128.954 294.921 128.528 295.112 128.101 295.112 cv
.713725 .654902 .623529 rgb
f
157.176 273.414 mo
157.176 273.414 li
127.652 256.366 li
128.18 256.056 li
130.116 254.937 li
130.116 246.844 li
134.469 244.333 li
134.765 244.504 li
141.481 248.375 li
143.525 247.202 li
164.444 235.122 li
193.968 252.169 li
157.176 273.414 li
f
186.731 219.745 mo
186.731 122.117 li
187.291 121.798 li
187.291 216.985 li
187.291 216.986 li
187.291 219.426 li
186.731 219.745 li
.647059 .635294 .623529 rgb
f
186.731 219.745 mo
182.339 217.211 li
179.61 215.633 li
179.61 213.915 li
179.61 208.474 li
179.61 204.773 li
179.61 204.773 li
179.61 126.229 li
186.731 122.117 li
186.731 219.745 li
.466667 .45098 .454902 rgb
f
155.854 232.501 mo
155.854 227.627 li
179.61 213.915 li
179.61 215.633 li
182.339 217.211 li
155.854 232.501 li
.713725 .654902 .623529 rgb
f
155.854 227.627 mo
155.854 222.186 li
179.61 208.474 li
179.61 213.915 li
155.854 227.627 li
f
155.854 222.186 mo
155.854 192.118 li
158.474 192.973 161.055 194.069 163.457 195.453 cv
163.457 195.453 li
168.844 198.562 174.223 201.671 179.61 204.773 cv
179.61 208.474 li
155.854 222.186 li
f
179.61 204.773 mo
179.61 204.773 li
174.223 201.671 168.844 198.562 163.457 195.453 cv
163.457 135.557 li
163.457 135.549 li
179.61 126.229 li
179.61 204.773 li
level3{
gsave
clp
[22.0253 39.5326 -39.5326 22.0253 157.705 136.02 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Mj/pQP_=mXKSYhELm*FGP(JFNJqT8;KTUe;OFMkDIt<Z1J<,//NdZD:I=@0'I>rW%N-fo1H[:TrH&Hrm
MKsE'H$>-jG):EcM0<usG&rF^EeedXLNINjFDutUDM<.LKlV$`EbpDKCP6\BK5bRWE+soBBRt&6JSo(M
DIn?8AUnT,IqrMCCLM[-@=;luI;*&:BjQ1#?$p<kHY6T1B3T[o>'aa^H=^3(AQO+e<d8+SG@FNq@T7P\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.0253 39.5326 -39.5326 22.0253 157.705 136.02 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~MMd:KMM[1HM26tDLkgb@LPLY?LPCP<L4t>7KS+o0K7ef/K7\],Jq8K(JUi9$J:E&uIsuiqIXZ`pIXQWm
I=6KjI!g9fH[C'bH?sj^H$OXZG^+FVGB\4RG'8%PG'8"NF`heJFEDSFF)uABEcQ/>EH,u<EH,r:E,]`6
DJj?/D/F-,D/F-+Ci!p'CMR^#C2.KtBk_9qBk_9pBP;'lB4kjhAnGXdAS#F`A7T4]A7K+Y@U`eT@:<SP
?smAM?smAM?XI/I?=$rE?!U`A>[1N=>[1N=>?b<9>$>*5=]nj/='&I)='&I)<`W7%<E3%!<)cgr;c?Un
~>
<~PEV2oPEV2oPEV2oPEM)lP*1ukP*(lhOcYZdOH>QcOH>QcOH5H`O,o?_O,f6\NfK-[NfB$XNJrgTN/W^S
N/W^SN/W[QMi3LOMi3IMMMd:KMMd7IM2@(GM2@(GM2@%ELkpkCLkphALPLV=L5(G;L5(G;L5(D9KnY57
KnY56KS5#3KS5#2K7ef/K7ef/K7ef.JqAT*JUrB'JUrB&J:N0#J:N0"It)rtIt)rtIt)rsIXZ`pIXZ`o
I=6NlI!g<hI!g<hI!g<hH[C*dH[C*dH?sm`H?sm`H$O[\H$O[\H$O[\G^+IXGB\7TGB\7TG'8%PG'8%P
~>
<~KS5#3KS+o0K7ef/K7\],Jq8K(JUrB'JUrB'JUi9$J:E&uIsuiqIXZ`pIXZ`pIXQWmI=-EiI!g<hI!^3e
H[C*dH[C'bH?sm`H?sj^H$OXZG^+IXG^+IXG^+FVGB\4RG'8"NF`hhLF`hhLF`heJFEDSFF)uDDF)uAB
EcQ2@EcQ2?EH,u<EH,u;E,]c8E,]c7Df9Q4Df9Q3DJj?/D/F-,D/F-,D/F-+Ci!p'CMR^#C2.KuC2.Ku
C2.KuBk_9qBP;'mBP;'mB4kjiB4kjiAnGXeAnGXeAS#FaA7T4]A7T4]A7T4]@q0"Y@U`eU@:<SQ@:<SQ
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
156.43 128.421 mo
156.43 116.084 li
177.799 103.748 li
177.799 116.084 li
156.43 128.421 li
177.799 103.748 mo
177.799 103.748 li
.580392 .490196 .419608 rgb
f
156.43 116.084 mo
156.43 116.084 li
155.722 115.672 li
177.092 103.336 li
177.799 103.748 li
156.43 116.084 li
.427451 .34902 .313725 rgb
f
163.457 195.453 mo
161.055 194.069 158.474 192.973 155.854 192.118 cv
155.854 139.941 li
163.457 135.557 li
163.457 195.453 li
level3{
gsave
clp
[22.0253 39.5326 -39.5326 22.0253 147.366 141.78 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.0253 39.5326 -39.5326 22.0253 147.366 141.78 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
122.965 293.161 mo
122.028 293.093 121.071 293.118 120.125 293.088 cv
120.115 293.088 119.177 293.057 117.531 293.004 cv
90.8594 277.604 li
127.652 256.366 li
157.176 273.414 li
122.965 293.161 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 74.1042 424.887 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 74.1042 424.887 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
156.43 128.421 mo
155.722 128.009 li
155.722 115.672 li
156.43 116.084 li
156.43 128.421 li
.247059 .192157 .164706 rgb
f
155.225 237.936 mo
155.225 205.395 155.225 172.847 155.225 140.307 cv
155.225 140.307 li
155.225 140.307 li
155.854 139.941 li
155.854 192.118 li
155.854 222.186 li
155.854 227.627 li
155.854 232.501 li
155.854 237.578 li
155.225 237.936 li
.647059 .635294 .623529 rgb
f
155.225 237.936 mo
154.618 237.585 li
154.618 217.18 li
154.618 213.853 li
154.618 194.497 li
154.618 182.199 li
154.618 172.202 li
154.618 168.867 li
154.618 140.657 li
155.225 140.307 li
155.225 172.847 155.225 205.395 155.225 237.936 cv
155.225 237.936 li
.466667 .45098 .454902 rgb
f
143.525 243.991 mo
143.525 243.991 li
143.525 147.062 li
154.618 140.657 li
154.618 168.867 li
143.525 195.756 li
143.525 199.091 li
154.618 172.202 li
154.618 182.199 li
143.525 209.087 li
143.525 221.385 li
154.618 194.497 li
154.618 213.853 li
143.525 240.742 li
143.525 243.991 li
143.564 243.968 mo
154.618 217.18 li
154.618 237.585 li
143.564 243.968 li
level3{
gsave
clp
[52.499 120.31 -120.31 52.499 125.65 138.649 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[52.499 120.31 -120.31 52.499 125.65 138.649 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
141.481 248.375 mo
134.765 244.504 li
134.617 179.393 li
134.531 141.551 li
141.481 145.562 li
141.481 248.375 li
.466667 .45098 .454902 rgb
f
130.116 246.844 mo
130.116 206.126 li
133.684 204.074 li
133.684 179.393 li
134.617 179.393 li
134.765 244.504 li
134.469 244.333 li
130.116 246.844 li
.788235 .72549 .670588 rgb
f
130.917 204.019 mo
131.21 203.674 131.442 203.238 131.591 202.85 cv
131.665 202.67 131.724 202.488 131.764 202.309 cv
131.764 202.309 li
131.795 202.169 li
131.818 202.045 li
131.834 201.959 131.834 201.92 131.834 201.617 cv
131.834 201.617 li
131.834 201.617 li
131.834 201.617 li
131.834 201.555 li
131.832 201.549 li
131.82 201.266 131.728 201.019 131.57 200.843 cv
131.546 200.809 li
131.546 200.809 li
131.439 200.681 131.456 200.688 130.116 199.922 cv
130.116 199.922 li
130.116 198.578 li
130.123 198.57 li
130.123 198.585 li
130.271 198.484 li
130.357 198.416 li
130.37 198.406 130.384 198.396 130.397 198.385 cv
130.419 198.368 li
130.52 198.282 li
130.621 198.189 130.714 198.104 130.792 198.018 cv
130.828 197.979 li
130.84 197.965 130.852 197.953 130.862 197.94 cv
130.956 197.835 131.036 197.736 131.106 197.64 cv
131.113 197.631 131.12 197.623 131.126 197.614 cv
131.18 197.542 131.225 197.47 131.268 197.397 cv
131.283 197.372 131.298 197.347 131.313 197.321 cv
131.329 197.295 li
131.383 197.202 131.43 197.101 131.484 196.992 cv
131.497 196.962 131.51 196.932 131.523 196.902 cv
131.547 196.849 131.571 196.795 131.596 196.739 cv
131.611 196.707 131.625 196.675 131.64 196.642 cv
131.64 196.642 li
131.64 196.642 li
131.694 196.495 131.733 196.354 131.764 196.222 cv
131.765 196.212 li
131.78 196.15 131.792 196.089 131.802 196.03 cv
131.797 196.062 131.791 196.095 131.785 196.127 cv
131.778 196.158 131.771 196.19 131.764 196.222 cv
131.772 196.191 131.779 196.159 131.785 196.127 cv
131.802 196.043 131.814 195.962 131.823 195.881 cv
131.839 195.735 131.843 195.598 131.834 195.471 cv
131.834 195.468 li
131.833 195.465 li
131.827 195.378 131.815 195.296 131.797 195.219 cv
131.795 195.204 li
131.791 195.193 li
131.777 195.137 131.76 195.085 131.741 195.035 cv
131.741 195.033 li
131.741 195.033 li
131.741 195.033 li
131.741 195.025 li
131.734 195.012 li
131.655 194.766 131.518 194.587 131.329 194.489 cv
131.329 194.489 li
131.259 194.45 li
130.877 194.232 130.497 194.007 130.116 193.789 cv
130.116 192.444 li
130.116 192.444 li
130.116 192.444 li
130.714 192.087 131.305 191.356 131.616 190.563 cv
131.67 190.423 131.717 190.275 131.749 190.136 cv
131.755 190.104 li
131.771 190.035 131.785 189.967 131.797 189.899 cv
131.803 189.887 li
131.803 189.887 li
131.803 189.887 li
131.803 189.887 li
131.811 189.834 131.819 189.781 131.824 189.729 cv
131.826 189.716 li
131.826 189.712 li
131.835 189.629 131.84 189.546 131.84 189.465 cv
131.84 189.415 131.838 189.367 131.834 189.319 cv
131.826 189.265 li
131.828 189.305 li
131.816 189.158 131.788 189.027 131.746 188.911 cv
131.741 188.884 li
131.663 188.635 131.515 188.456 131.329 188.355 cv
131.259 188.316 li
130.877 188.099 130.497 187.874 130.116 187.656 cv
130.116 182.276 li
132.253 181.041 li
132.253 203.25 li
130.917 204.019 li
131.546 200.809 mo
131.511 200.774 li
131.523 200.785 131.535 200.797 131.546 200.809 cv
131.546 200.809 li
131.503 200.766 mo
131.47 200.738 li
131.481 200.747 131.492 200.757 131.503 200.766 cv
131.717 194.979 mo
131.71 194.963 li
131.71 194.962 li
131.712 194.967 131.715 194.973 131.717 194.979 cv
.752941 .611765 .635294 rgb
f
131.834 201.617 mo
131.834 201.617 li
131.834 201.594 131.833 201.571 131.832 201.549 cv
131.834 201.555 li
131.834 201.617 li
f
67.6782 290.99 mo
67.6782 188.169 li
130.116 152.123 li
130.116 179.805 li
130.116 182.276 li
130.116 187.656 li
130.116 192.444 li
130.116 193.789 li
130.116 198.578 li
130.116 199.922 li
130.116 206.126 li
130.116 246.844 li
130.116 254.937 li
128.18 256.056 li
128.18 255.527 li
128.18 155.916 li
124.333 158.14 li
119.979 160.65 li
117.725 161.957 li
111.7 165.431 li
111.7 165.435 li
107.942 167.604 li
106.29 168.556 li
105.253 169.157 li
94.7539 175.218 li
91.9087 176.858 li
91.2944 177.216 li
70.2202 189.382 li
69.7232 189.669 li
69.7232 289.288 li
69.7227 289.288 li
69.7227 289.809 li
69.7232 289.809 li
69.7227 289.809 li
67.6782 290.99 li
130.116 152.123 mo
130.116 152.123 li
.647059 .635294 .623529 rgb
f
67.6782 188.169 mo
67.6782 188.169 li
60.4336 183.987 li
122.871 147.94 li
130.116 152.123 li
67.6782 188.169 li
.564706 .541176 .552941 rgb
f
69.7227 289.809 mo
69.7227 289.288 li
69.7232 289.288 li
128.18 255.527 li
128.18 256.056 li
127.652 256.366 li
90.8594 277.604 li
69.7227 289.809 li
128.18 255.527 mo
128.18 255.527 li
.466667 .45098 .454902 rgb
f
128.18 255.527 mo
128.18 255.527 li
124.333 253.304 li
124.333 158.14 li
128.18 155.916 li
128.18 255.527 li
f
69.7232 289.288 mo
69.7232 289.288 li
69.7232 285.098 li
70.2202 284.811 li
70.2202 281.941 li
78.7246 277.036 li
79.6375 276.505 li
91.2944 269.776 li
91.9087 270.126 li
94.7539 268.478 li
94.7539 267.778 li
117.725 254.517 li
117.725 254.781 li
119.513 255.807 li
119.979 256.079 li
120.352 255.869 li
124.333 253.568 li
124.333 253.304 li
128.18 255.527 li
69.7232 289.288 li
.552941 .537255 .545098 rgb
f
119.979 256.079 mo
119.979 160.65 li
124.333 158.14 li
124.333 253.304 li
124.333 253.568 li
120.352 255.869 li
119.979 256.079 li
.560784 .54902 .533333 rgb
f
117.531 293.004 mo
105.335 292.611 54.2593 290.966 53.7714 290.928 cv
52.9834 290.867 53.437 290.371 50.0146 290.191 cv
49.8096 290.181 49.6069 290.175 49.4071 290.175 cv
48.4988 290.175 47.6438 290.291 46.8321 290.569 cv
49.9937 288.743 li
53.7714 290.928 li
60.6665 286.94 li
67.6782 290.99 li
69.7227 289.809 li
90.8594 277.604 li
117.531 293.004 li
43.2773 292.622 mo
43.2773 292.622 li
43.2773 292.622 li
.713725 .654902 .623529 rgb
f
119.979 256.079 mo
119.513 255.807 li
117.725 254.78 li
117.725 254.517 li
117.872 254.43 li
117.823 254.401 117.774 254.373 117.725 254.344 cv
117.725 185.829 li
117.725 182.478 li
117.725 163.122 li
117.725 161.957 li
119.979 160.65 li
119.979 256.079 li
.466667 .45098 .454902 rgb
f
94.7539 267.778 mo
94.7539 267.777 li
117.725 254.515 li
117.725 254.517 li
94.7539 267.778 li
117.725 254.344 mo
99.273 243.69 99.0175 243.544 99.0186 243.544 cv
99.0186 243.544 99.0187 243.544 99.0187 243.544 cv
99.0189 243.544 99.019 243.544 99.019 243.544 cv
99.019 243.544 99.0189 243.544 99.0188 243.544 cv
99.0187 243.544 99.0187 243.544 99.0187 243.544 cv
99.0186 243.543 99.0186 243.543 99.0185 243.543 cv
97.7282 242.803 96.3044 242.112 94.7645 241.485 cv
117.725 185.829 li
117.725 254.344 li
94.7539 241.481 mo
94.7539 241.481 li
94.7539 175.218 li
104.478 169.605 li
105.253 169.157 li
106.29 168.556 li
107.942 167.604 li
111.7 165.439 li
111.7 165.435 li
111.7 165.431 li
117.725 161.957 li
111.7 165.431 li
111.7 165.439 li
94.7539 206.522 li
94.7539 218.805 li
117.725 163.122 li
117.725 182.478 li
94.7539 238.168 li
94.7539 241.481 li
106.29 168.556 mo
104.478 169.605 li
94.7539 193.183 li
94.7539 196.525 li
106.29 168.556 li
level3{
gsave
clp
[79.63 30.073 -30.073 79.63 57.8184 196.581 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.63 30.073 -30.073 79.63 57.8184 196.581 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
82.6269 171.036 mo
82.6269 158.699 li
103.997 146.355 li
103.997 158.699 li
82.6269 171.036 li
103.997 146.355 mo
103.997 146.355 li
.580392 .490196 .419608 rgb
f
82.6269 158.699 mo
82.6269 158.699 li
81.9121 158.287 li
103.289 145.943 li
103.997 146.355 li
82.6269 158.699 li
.427451 .34902 .313725 rgb
f
69.7232 285.098 mo
69.7232 285.098 li
69.7232 189.669 li
70.2202 189.382 li
70.2202 281.941 li
70.2202 284.811 li
69.7232 285.098 li
.552941 .537255 .545098 rgb
f
70.2202 281.941 mo
70.2202 281.941 li
70.2202 189.382 li
91.2944 177.216 li
91.2944 201.571 li
76.2958 237.93 li
75.9824 237.925 75.6685 237.922 75.3527 237.922 cv
73.6734 237.922 71.9584 237.995 70.2202 238.147 cv
70.2202 281.941 li
70.2202 281.941 mo
78.7272 277.03 li
78.7246 277.036 li
70.2202 281.941 li
86.5516 272.513 mo
91.2944 269.774 li
91.2944 269.776 li
86.5516 272.513 li
level3{
gsave
clp
[79.63 30.073 -30.073 79.63 49.7752 217.878 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.63 30.073 -30.073 79.63 49.7752 217.878 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
82.6269 171.036 mo
81.9121 170.624 li
81.9121 158.287 li
82.6269 158.699 li
82.6269 171.036 li
.247059 .192157 .164706 rgb
f
67.6782 290.99 mo
60.6665 286.94 li
60.4336 183.987 li
67.6782 188.169 li
67.6782 290.99 li
.466667 .45098 .454902 rgb
f
53.7714 290.928 mo
49.9937 288.743 li
49.7217 168.323 li
53.7714 178.333 li
53.7714 290.928 li
.752941 .698039 .647059 rgb
f
43.2773 292.622 mo
43.2773 172.039 li
49.7217 168.323 li
49.9937 288.743 li
46.8321 290.569 li
46.206 290.784 45.6059 291.095 45.0273 291.525 cv
44.6528 291.805 43.2773 292.622 43.2773 292.622 cv
43.2773 292.622 li
level3{
gsave
clp
[57.9676 168.981 -168.981 57.9676 16.4002 142.731 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.9676 168.981 -168.981 57.9676 16.4002 142.731 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
227.246 65.8286 mo
227.246 65.8283 227.247 65.8282 227.247 65.8282 cv
227.247 65.8282 li
level3{
gsave
clp
[188.68 0 0 188.68 38.5664 117.573 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[188.68 0 0 188.68 38.5664 117.573 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
43.2773 292.622 mo
38.5664 289.901 li
38.5664 169.318 li
43.2773 172.039 li
43.2773 292.622 li
level3{
gsave
clp
[-119.445 28.2376 -28.2376 -119.445 63.8567 225.548 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-119.445 28.2376 -28.2376 -119.445 63.8567 225.548 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
130.116 181.453 mo
130.116 179.805 li
132.253 178.576 li
133.684 179.393 li
130.116 181.453 li
.752941 .658823 .662745 rgb
f
133.264 203.763 mo
132.253 203.25 li
132.253 181.056 li
133.264 180.473 li
133.264 203.763 li
.592157 .427451 .466667 rgb
f
130.116 206.126 mo
130.116 206.126 li
130.116 205.582 li
133.264 203.763 li
133.264 180.473 li
132.253 181.056 li
132.253 181.041 li
130.116 182.276 li
130.116 181.453 li
133.684 179.393 li
133.684 204.074 li
130.116 206.126 li
.760784 .694118 .686274 rgb
f
130.116 205.582 mo
130.116 205.582 li
130.116 204.68 li
130.116 204.68 li
130.373 204.517 130.613 204.314 130.823 204.074 cv
130.831 204.074 li
130.831 204.074 li
130.917 204.019 li
132.253 203.25 li
133.264 203.763 li
130.116 205.582 li
.752941 .658823 .662745 rgb
f
131.546 200.809 mo
131.546 200.809 li
131.546 200.809 li
131.546 200.809 li
131.546 200.809 li
131.546 200.809 mo
131.535 200.797 131.523 200.785 131.511 200.774 cv
131.508 200.771 131.506 200.769 131.503 200.766 cv
131.492 200.757 131.481 200.747 131.47 200.738 cv
131.32 200.616 131.13 200.553 130.914 200.553 cv
130.808 200.553 130.695 200.568 130.578 200.6 cv
130.433 200.638 130.279 200.701 130.116 200.793 cv
130.116 200.793 li
130.116 199.922 li
130.116 199.922 li
131.456 200.688 131.439 200.681 131.546 200.809 cv
.356863 .290196 .301961 rgb
f
130.116 204.68 mo
130.116 204.68 li
130.116 200.793 li
130.116 200.793 li
130.279 200.701 130.433 200.638 130.578 200.6 cv
130.693 200.569 130.802 200.555 130.903 200.555 cv
131.183 200.555 131.41 200.663 131.57 200.843 cv
131.728 201.019 131.82 201.266 131.832 201.549 cv
131.833 201.571 131.834 201.594 131.834 201.617 cv
131.834 201.617 li
131.834 201.617 li
131.834 201.617 li
131.834 202.107 131.83 201.912 131.764 202.309 cv
131.764 202.309 li
131.724 202.488 131.665 202.67 131.591 202.85 cv
131.407 203.299 131.131 203.734 130.831 204.074 cv
130.831 204.074 li
130.823 204.074 li
130.613 204.314 130.373 204.517 130.116 204.68 cv
.584314 .32549 .403922 rgb
f
131.741 195.033 mo
131.741 195.033 li
131.741 195.033 li
131.741 195.033 li
131.741 195.033 li
131.741 195.033 mo
131.733 195.015 131.725 194.996 131.717 194.979 cv
131.715 194.973 131.712 194.967 131.71 194.962 cv
131.612 194.758 131.464 194.614 131.281 194.536 cv
131.279 194.535 131.278 194.535 131.277 194.534 cv
131.277 194.534 131.276 194.534 131.276 194.534 cv
131.169 194.488 131.048 194.465 130.917 194.465 cv
130.684 194.465 130.417 194.54 130.129 194.699 cv
130.129 194.699 li
130.125 194.702 130.12 194.704 130.116 194.707 cv
130.116 194.707 li
130.116 193.789 li
130.497 194.007 130.877 194.232 131.259 194.45 cv
131.329 194.489 li
131.329 194.489 li
131.518 194.587 131.655 194.766 131.734 195.012 cv
131.736 195.019 131.739 195.026 131.741 195.033 cv
.356863 .290196 .301961 rgb
f
130.123 198.57 mo
130.123 198.57 li
130.116 194.707 li
130.116 194.707 li
130.12 194.704 130.125 194.702 130.129 194.699 cv
130.129 194.699 130.129 194.699 130.129 194.699 cv
130.417 194.54 130.684 194.465 130.917 194.465 cv
131.048 194.465 131.169 194.488 131.276 194.534 cv
131.276 194.534 131.277 194.534 131.277 194.534 cv
131.278 194.535 131.279 194.535 131.281 194.536 cv
131.488 194.625 131.646 194.796 131.741 195.035 cv
131.76 195.085 131.777 195.137 131.791 195.193 cv
131.793 195.201 131.795 195.21 131.797 195.219 cv
131.815 195.296 131.827 195.378 131.833 195.465 cv
131.833 195.465 li
131.826 195.414 li
131.834 195.561 li
131.834 195.471 li
131.843 195.598 131.839 195.735 131.823 195.881 cv
131.83 195.807 131.834 195.734 131.834 195.663 cv
131.829 195.78 131.82 195.905 131.802 196.03 cv
131.792 196.089 131.78 196.15 131.765 196.212 cv
131.734 196.349 131.692 196.492 131.64 196.642 cv
131.64 196.642 li
131.64 196.642 li
131.625 196.675 131.611 196.708 131.596 196.739 cv
131.571 196.795 131.547 196.849 131.523 196.902 cv
131.455 197.051 131.389 197.187 131.313 197.321 cv
131.298 197.347 131.283 197.372 131.268 197.397 cv
131.22 197.478 131.166 197.558 131.106 197.64 cv
131.036 197.736 130.956 197.835 130.862 197.94 cv
130.852 197.953 130.84 197.965 130.828 197.979 cv
130.719 198.096 130.558 198.255 130.397 198.385 cv
130.384 198.396 130.37 198.406 130.357 198.416 cv
130.312 198.451 130.267 198.484 130.224 198.512 cv
130.224 198.512 li
130.123 198.57 li
130.123 198.57 li
.584314 .32549 .403922 rgb
f
130.123 198.585 mo
130.123 198.585 li
130.123 198.57 li
130.224 198.512 li
130.271 198.484 li
130.123 198.585 li
.670588 .619608 .556863 rgb
f
131.764 196.222 mo
131.771 196.19 131.778 196.158 131.785 196.127 cv
131.779 196.159 131.772 196.191 131.764 196.222 cv
131.785 196.127 mo
131.791 196.095 131.797 196.062 131.802 196.03 cv
131.82 195.905 131.829 195.78 131.834 195.663 cv
131.834 195.734 131.83 195.807 131.823 195.881 cv
131.814 195.962 131.802 196.043 131.785 196.127 cv
f
131.834 195.561 mo
131.826 195.414 li
131.833 195.465 li
131.834 195.468 li
131.834 195.471 li
131.834 195.561 li
f
91.2944 240.247 mo
89.7509 239.768 88.1222 239.351 86.4211 239.008 cv
91.2944 227.192 li
91.2944 240.247 li
level3{
gsave
clp
[79.63 30.073 -30.073 79.63 49.7752 217.878 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.63 30.073 -30.073 79.63 49.7752 217.878 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
81.6591 238.268 mo
80.355 238.124 79.0196 238.022 77.6589 237.968 cv
91.2944 204.913 li
91.2944 214.91 li
81.6591 238.268 li
level3{
gsave
clp
[79.63 30.073 -30.073 79.63 49.7752 217.878 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.63 30.073 -30.073 79.63 49.7752 217.878 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
130.133 188.548 mo
130.136 188.546 130.139 188.544 130.143 188.543 cv
130.139 188.544 130.136 188.546 130.133 188.548 cv
.811765 .764706 .745098 rgb
f
131.741 188.884 mo
131.675 188.718 131.578 188.587 131.458 188.493 cv
131.31 188.376 131.125 188.315 130.916 188.315 cv
130.683 188.315 130.42 188.389 130.143 188.543 cv
130.139 188.544 130.136 188.546 130.133 188.548 cv
130.131 188.549 130.13 188.549 130.129 188.55 cv
130.125 188.553 130.12 188.555 130.116 188.558 cv
130.116 187.656 li
130.497 187.874 130.877 188.099 131.259 188.316 cv
131.329 188.355 li
131.515 188.456 131.663 188.635 131.741 188.884 cv
.356863 .290196 .301961 rgb
f
130.116 192.444 mo
130.116 192.444 li
130.116 188.558 li
130.12 188.555 130.125 188.553 130.129 188.55 cv
130.13 188.549 130.131 188.549 130.133 188.548 cv
130.136 188.546 130.139 188.544 130.143 188.543 cv
130.42 188.389 130.683 188.315 130.916 188.315 cv
131.125 188.315 131.31 188.376 131.458 188.493 cv
131.583 188.592 131.682 188.732 131.746 188.911 cv
131.788 189.027 131.816 189.158 131.828 189.305 cv
131.834 189.467 li
131.834 189.467 li
131.834 189.563 131.827 189.66 131.817 189.756 cv
131.817 189.756 li
131.811 189.804 131.805 189.851 131.797 189.899 cv
131.785 189.967 131.771 190.035 131.755 190.104 cv
131.526 191.064 130.83 192.015 130.116 192.444 cv
130.116 192.444 li
.584314 .32549 .403922 rgb
f
131.803 189.887 mo
131.803 189.887 li
131.808 189.843 131.812 189.8 131.817 189.756 cv
131.827 189.66 131.834 189.563 131.834 189.467 cv
131.834 189.467 li
131.828 189.305 li
131.826 189.265 li
131.834 189.319 li
131.838 189.367 131.84 189.415 131.84 189.465 cv
131.84 189.546 131.835 189.629 131.826 189.712 cv
131.826 189.718 131.825 189.723 131.824 189.729 cv
131.819 189.781 131.811 189.834 131.803 189.887 cv
.670588 .619608 .556863 rgb
f
70.2202 281.941 mo
70.2202 281.941 li
70.2202 238.147 li
71.9584 237.995 73.6734 237.922 75.3527 237.922 cv
75.6685 237.922 75.9824 237.925 76.2958 237.93 cv
70.2202 252.658 li
70.2202 256.001 li
77.6589 237.968 li
79.0196 238.022 80.355 238.124 81.6591 238.268 cv
70.2202 265.998 li
70.2202 278.288 li
86.4211 239.008 li
88.1222 239.351 89.7509 239.768 91.2944 240.247 cv
91.2944 240.247 li
91.2944 246.556 li
78.7272 277.03 li
70.2202 281.941 li
79.8694 276.37 mo
80.5283 275.987 li
91.2944 249.891 li
91.2944 269.776 li
91.2944 269.774 li
86.5516 272.513 li
79.8694 276.37 li
94.7539 267.777 mo
94.7539 241.481 li
94.7539 241.481 li
94.7539 241.511 li
94.7645 241.485 li
96.3044 242.112 97.7282 242.803 99.0185 243.543 cv
99.0186 243.543 99.0186 243.543 99.0187 243.544 cv
99.0187 243.544 99.0186 243.544 99.0186 243.544 cv
99.0175 243.544 99.273 243.69 117.725 254.344 cv
117.774 254.373 117.823 254.401 117.872 254.43 cv
117.725 254.515 li
94.7539 267.777 li
99.019 243.544 mo
99.019 243.544 99.0189 243.544 99.0187 243.544 cv
99.0187 243.544 99.0187 243.544 99.0188 243.544 cv
99.0189 243.544 99.019 243.544 99.019 243.544 cv
level3{
gsave
clp
[47.6515 0 0 47.6515 70.2204 259.932 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~NgY``R#$]gLl@[VMjK3VQ\L?_Knu%KLR!RJP_=aTK7oJAKTq(@PCeCLJUru8J<>A3OahkCIt!K/I?8o*
O*uA8I!^m$H&[2rNI,l/H?Y<nG)U]hMg9E%G]SadEf,']MKWurG&W7[DhrORLNIEhF)?\RCPHnFL2q$_
EG:)GBS:>;KQ(OVDe4Q=AV+f1Jo5(LD.8$3@=W-%J88PCCL;R+?%-KnIVE&8BNomu>(($dHtQQ/AlsCk
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.6515 0 0 47.6515 70.2204 259.932 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~NK&pWNJrgTN/NUPMi3LOMi*CLMM[1HM26tDLkgb@LPCP<L4t>8KnP,4KS+o0K7ef/K7\],Jq8K(JUi9$
J:N-!It)orIXZ`pIXZ]nI=6KjI!g9fH[C'bH?sm`H$OXZG^+FVGB\4RG'8%PG'8"NF`heJFEDSFF)uAB
EcQ2?EH,u<EH,u;E,]c7Df9Q3DJj?/D/F-,D/F-+Chmg$C2.KtBk_9qBk_9pBP;'lB4kjhAnGXdAS#F`
A7T4]A7T4]@q0"Y@U`eU@:<SQ?smAM?smAM?XI/I?=$oC>[1N=>[1N=>?b<9>$>*5=]nm1=BJ[-='&I)
~>
<~R$a8.R$X/+Q^=&*Q^3r'QBmi&QBmi&QBd`#Q'IW"Q'@MtP`q;pPEV2oPEV2oPEV2oPEM)lP*(lhOcbcg
Ocb`eOH>QcOH>QcOH>NaO,o?_O,o<]NfK*YNK&pWNK&mUN/W^SN/W^SN/W[QMi3LOMi3IMMMd7IM2@(G
M2@(GM2@(GM2@(FLkpkBLPLY?LPLY>L5(G;L5(G;L5(G:KnY57KnY56KS5#2K7ef/K7ef/K7ef/K7ef.
JqAT+JUrB'JUrB'J:N0#It)rtIt)rtIt)rtIt)rtIXZ`pI=6NlI=6NlI!g<hI!g<hI!g<hH[C*dH[C*d
~>
<~LkpkCLkgb@LPLY?LPLY?LPCP<L4t>8KnP,4KS5#3KS5#3KS+o0K7\],JqAT+Jq8K(JUrB'JUi9$J:N0#
J:N-!It)orIXZ`pIXZ`pIXZ]nI=6KjI!g9fH[C*dH[C*dH[C'bH?sj^H$OXZG^+IXG^+IXG^+FVGB\4R
G'8%PG'8%OF`hhLF`hhKFEDVHFEDVGF)uDCEcQ2@EcQ2@EcQ2?EH,u;E,]c8E,]c7Df9Q4Df9Q3DJj?/
D/F-,D/F-,D/F-,Ci!p(CMR^$C2.KuC2.KuC2.KuBk_9qBP;'mBP;'mB4kjiB4kjiAnGXeAnGXeAS#Fa
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
91.9087 270.126 mo
91.9087 176.858 li
94.7539 175.218 li
94.7539 241.481 li
94.7539 267.777 li
94.7539 267.778 li
94.7539 268.478 li
91.9087 270.126 li
.647059 .635294 .623529 rgb
f
91.9087 270.126 mo
91.2944 269.776 li
91.2944 249.891 li
91.2944 246.556 li
91.2944 240.247 li
91.2944 227.192 li
91.2944 214.91 li
91.2944 204.913 li
91.2944 201.571 li
91.2944 177.216 li
91.9087 176.858 li
91.9087 270.126 li
.466667 .45098 .454902 rgb
f
77.6589 237.968 mo
77.2076 237.95 76.7526 237.938 76.2958 237.93 cv
91.2944 201.571 li
91.2944 204.913 li
77.6589 237.968 li
level3{
gsave
clp
[79.63 30.073 -30.073 79.63 49.7752 217.878 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\$W$AZ_b.;V73e-\$Mp?Z_b+9V7*\+[^)a;ZD=n6UpRD&['?C5Z(nY1UU.5#Za$72Z(eS0U9_%uZE^./
YbJD,U9UqsYcsh*YbA8(Ts(YnYHOY'YFr)%TWbMkY-+G#Y+Mi!T<58gXfe:tY+MeuT<#,eX0%toXe)Pp
SuSoaWi_hlXIZAmSZ/]]WN;VgXIQ5jS>`KYVlQ>cX.6)gS>N?VVQ62`X.,ueS#36TV5p&]Wg]``R\ZsO
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.63 30.073 -30.073 79.63 49.7752 217.878 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^ENN[C*EM[C*EM[C!<J['[3I['R*FZa7!EZa7!EZa-mBZEgdA
ZEgdAZEgdAZEgdAZEga?Z*CR=Z*CO;Yct@9Yct@9Yct=7YHP.5YHP+3Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1
Y-+q0Xf\_-Xf\_,XK8M)XK8M)XK8M(X/i;%X/i;$WiE)!WiE)!WiE(uWMukrWMukrWMukrWMukrWMukq
W2QYnW2QYnVl-GjVl-GjVl-GjVP^5fVP^5fVP^5fV5:#bV5:#bV5:#bV5:#bV5:#bUnjf^Unjf^USFTZ
~>
<~Za7!EZa-mBZEgdAZEgdAZEgdAZEgdAZE^[>Z*CR=Z*CR=Z*CR=Z*CR=Z*:I:Yct@9Yct@9Yct@9Yct@9
Yct@9Yct@9Yct@9Yct@9Yct@9Yct=7YHP.5YHP.5YHP.5YHP.5YHP+3Y-+q1Y-+q1Y-+q1Y-+n/Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_,XK8M)XK8M)XK8M)XK8M)XK8M(X/i;%X/i;%
X/i;%X/i;%X/i;%X/i;%WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WMukrWMukr
~>
<~V5:#bV50o_Unjf^Unjf^Unjf^Unjf^Unjf^Unjf^Unjf^Una][USFTZUSFTZUS=KWU8"BVU8"BVU8"BV
U8"?TTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS-PTV.sNTV.sNTV.sNTV.sNTV.pLT:_aJT:_aJ
T:_aJT:_aISt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OESXl=BSXl=BSXl=BSXl=AS=H+>S=H+>S=H+>
S=H+>S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:R[T\6R[T\6R[T\6R[T\6R@0J2R@0J2R@0J2R@0J2
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
70.2202 256.001 mo
70.2202 252.658 li
76.2958 237.93 li
76.7526 237.938 77.2076 237.95 77.6589 237.968 cv
70.2202 256.001 li
level3{
gsave
clp
[47.6515 0 0 47.6515 70.2204 259.932 ]ct
/15 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ZE9e)Xe;r$T<YJiYcOJ$XIl_uT<G>gYH4A"X.QSrT!,2dY,e.sX.HJpSZSr`XfJ"pX.?>mS?/`\XK%ek
Wgp,iS?&Z[Wi;MgWLTufS#WHWWi;JeW10cbR]36SW2Q/`W1'Z_RAZsNVl,r\VjXE[RAQmMVPfiZVjXE[
R&-[IV5BWVVO40VQ_^LFUnsEQV3dsRQ_UCDU8=3NUmIgOQD11@U84*KUm@^MQ(b"=TqmsHUm7UKPb=e9
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.6515 0 0 47.6515 70.2204 259.932 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Z*CR=Z*:I:Yct@9Yct@9Yck76YHP.5YHP.5YHG%2Y-+q1Y-+q1Y-+q1Y-+q1Y-"h.Xf\_-Xf\_-XfSV*
XK8M)XK8M)XK8J'X/i;%X/i;%X/i8#WiE)!WiE)!WiE%tWMukrWMukrWMukrWMukrWMuhpW2QYnW2QYn
W2QYmVl-GjVl-GjVl-GiVP^5fVP^5fVP^5eV5:#bV5:#bV5:#bV5:#bV5:#aUnjf^Unjf^Unjf]USFTZ
USFTZUSFTZU8"BVU8"BVU8"BVTqS0RTqS0RTqS0RTqS0RTqS0RTV.sNTV.sNTV.sNTV.sNT:_aJT:_aJ
~>
<~XK8M)XK8M)XK8M)XK/D&X/i;%X/i;%X/i;%X/i;%X/i;%X/`2"WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE%tWMukrWMukrWMukrWMukrWMuhpW2QYnW2QYnW2QYnW2QYnW2QVlVl-GjVl-Gj
Vl-GjVl-GjVl-GiVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5eV5:#bV5:#bV5:#bV5:#b
V5:#bUnjf^Unjf^Unjf^Unjf^Unjf^USFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZUSFTZ
~>
<~T:_aJT:_aJT:VXGSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt2FCSXl=BSXl=BSXl=BSXc4?S=H+>
S=H+>S=H+>S=H(<S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#k8R[T\6R[T\6R[T\6R[TY4R@0J2
R@0J2R@0J2R@0J1R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8.R$a8-Q^=&*Q^=&*Q^=&*Q^=&)QBmi&
QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&Q'IW"Q'IW"Q'IW"Q'IW"Pa%DsPa%DsPa%DsPa%DsPEV2o
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
94.7539 196.525 mo
94.7539 193.183 li
104.478 169.605 li
106.29 168.556 li
94.7539 196.525 li
level3{
gsave
clp
[79.63 30.073 -30.073 79.63 57.8184 196.581 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.63 30.073 -30.073 79.63 57.8184 196.581 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
78.7246 277.036 mo
78.7272 277.03 li
79.8694 276.37 li
78.7246 277.036 li
level3{
gsave
clp
[79.63 30.073 -30.073 79.63 49.7752 217.878 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.63 30.073 -30.073 79.63 49.7752 217.878 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
78.7272 277.03 mo
91.2944 246.556 li
91.2944 249.891 li
80.5283 275.987 li
79.8694 276.37 li
78.7272 277.03 li
level3{
gsave
clp
[47.6515 0 0 47.6515 70.2204 259.932 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.6515 0 0 47.6515 70.2204 259.932 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
94.7645 241.485 mo
94.7611 241.484 94.7573 241.482 94.7539 241.481 cv
94.7539 238.168 li
117.725 182.478 li
117.725 185.829 li
94.7645 241.485 li
level3{
gsave
clp
[79.63 30.073 -30.073 79.63 57.8184 196.581 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.63 30.073 -30.073 79.63 57.8184 196.581 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
94.7539 241.511 mo
94.7539 241.481 li
94.7573 241.482 94.7611 241.484 94.7645 241.485 cv
94.7539 241.511 li
level3{
gsave
clp
[47.6515 0 0 47.6515 70.2204 259.932 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.6515 0 0 47.6515 70.2204 259.932 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
86.4211 239.008 mo
84.8884 238.699 83.299 238.449 81.6591 238.268 cv
91.2944 214.91 li
91.2944 227.192 li
86.4211 239.008 li
level3{
gsave
clp
[79.63 30.073 -30.073 79.63 49.7752 217.878 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.63 30.073 -30.073 79.63 49.7752 217.878 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
70.2202 278.288 mo
70.2202 265.998 li
81.6591 238.268 li
83.299 238.449 84.8884 238.699 86.4211 239.008 cv
70.2202 278.288 li
level3{
gsave
clp
[47.6515 0 0 47.6515 70.2204 259.932 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.6515 0 0 47.6515 70.2204 259.932 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
94.7539 218.805 mo
94.7539 206.522 li
111.7 165.439 li
111.7 165.431 li
117.725 161.957 li
117.725 163.122 li
94.7539 218.805 li
level3{
gsave
clp
[79.63 30.073 -30.073 79.63 57.8184 196.581 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[79.63 30.073 -30.073 79.63 57.8184 196.581 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
187.291 149.185 mo
187.291 145.85 li
198.166 119.489 li
198.166 122.816 li
187.291 149.185 li
level3{
gsave
clp
[56.8739 92.9669 -92.9669 56.8739 165.972 122.516 ]ct
/16 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~]!\HH[&:IAVRX"1\?r-C[&1=>V73h.\$W!@[&(7=V7*_,[^2g=Z_b(9Up[P)['HL7ZD=k5UU.8$Za-@4
Z(eS0U9h,!ZE^.0Z(eM.U9UttZ*C%-Z(eJ,Ts1bpYHX_(YbA8)TWbPlYHOV%YFr&%T<5;hXfe:uY+Meu
T<,2fX0/(qY+D\sSuSrbWihqnY+;SqSZ8f_WND_jXdlAmS>`Q[W2uMeXIQ2iS>WHYVQ?8aX.,ueS#36U
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[56.8739 92.9669 -92.9669 56.8739 165.972 122.516 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\[f8]\[]/Z\@B&Y\@8rV\$riU\$riU\$i`R[^NWQ[^NWQ[^NWQ[^NWQ[^ENN[C*EM[C*EM[C!<J['[3I
['[0GZa7!EZa7!EZa6sCZEgdAZEgdAZEgdAZEgdAZEga?Z*CR=Z*CO;Yct@9Yct@9Yct=7YHP.5YHP.5
YHP.4Y-+q1Y-+q1Y-+q1Y-+q1Y-+q0Xf\_-Xf\_,XK8M)XK8M)XK8M(X/i;%X/i;$WiE)!WiE)!WiE(u
WMukrWMukrWMukrWMukrWMukrW2QYnW2QYnW2QYnVl-GjVl-GjVP^5fVP^5fVP^5fV5:#bV5:#bV5:#b
~>
<~['[3I['R*FZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa-mBZEgdAZEgdAZEgdAZEgdA
ZEga?Z*CR=Z*CR=Z*CR=Z*CR=Z*CO;Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct=7YHP.5
YHP.5YHP.5YHP.5YHP.4Y-+q1Y-+q1Y-+q1Y-+q1Y-+q0Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-XK8M)XK8M)XK8M)XK8M)XK8M)X/i;%X/i;%X/i;%X/i;%X/i;%WiE)!WiE)!
~>
<~VP^5fVP^5fVPU,cV5:#bV5:#bV5:#bV50o_Unjf^Unjf^Unjf^Unjf^Unjf^Unjf^Unjf^Una][USFTZ
USFTZUSFTZUSFQXU8"BVU8"BVU8"?TTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS-PTV.sN
TV.sNTV.sNTV.sMT:_aJT:_aJT:_aJT:_aISt;OFSt;OFSt;OFSt;OFSt;OFSt;OFSt;OESXl=BSXl=B
SXl=BSXl=BS=H+>S=H+>S=H+>S=H+>S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:S"#n:R[T\6R[T\6R[T\6
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
187.291 194.162 mo
187.291 190.835 li
198.166 164.475 li
198.166 167.802 li
187.291 194.162 li
level3{
gsave
clp
[56.8739 92.9669 -92.9669 56.8739 165.972 122.516 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[56.8739 92.9669 -92.9669 56.8739 165.972 122.516 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
187.291 171.479 mo
187.291 159.173 li
198.166 132.806 li
198.166 145.111 li
187.291 171.479 li
level3{
gsave
clp
[56.8739 92.9669 -92.9669 56.8739 165.972 122.516 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[56.8739 92.9669 -92.9669 56.8739 165.972 122.516 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
143.525 199.091 mo
143.525 195.756 li
154.618 168.867 li
154.618 172.202 li
143.525 199.091 li
level3{
gsave
clp
[52.499 120.31 -120.31 52.499 125.65 138.649 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[52.499 120.31 -120.31 52.499 125.65 138.649 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
143.525 243.991 mo
143.525 240.742 li
154.618 213.853 li
154.618 217.18 li
143.564 243.968 li
143.525 243.991 li
level3{
gsave
clp
[52.499 120.31 -120.31 52.499 125.65 138.649 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[52.499 120.31 -120.31 52.499 125.65 138.649 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
143.525 221.385 mo
143.525 209.087 li
154.618 182.199 li
154.618 194.497 li
143.525 221.385 li
level3{
gsave
clp
[52.499 120.31 -120.31 52.499 125.65 138.649 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[52.499 120.31 -120.31 52.499 125.65 138.649 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
285.961 436.403 mo
473.123 328.348 li
472.956 328.486 472.761 328.618 472.533 328.748 cv
463.176 334.089 453.859 339.503 444.531 344.896 cv
434.607 350.632 424.685 356.372 414.758 362.103 cv
405.555 367.417 396.342 372.716 387.139 378.029 cv
377.212 383.761 367.292 389.507 357.365 395.239 cv
348.204 400.529 339.036 405.805 329.875 411.094 cv
319.905 416.851 309.94 422.614 299.974 428.376 cv
295.458 430.985 290.947 433.602 286.427 436.201 cv
286.286 436.282 286.134 436.343 285.961 436.403 cv
473.794 327.441 mo
473.794 323.313 li
473.794 274.06 li
473.844 274.033 473.894 274.005 473.944 273.977 cv
473.944 274.747 473.944 275.277 473.944 275.809 cv
473.944 292.612 473.93 309.416 473.975 326.22 cv
473.976 326.704 473.924 327.1 473.794 327.441 cv
393.892 324.708 mo
393.891 324.708 393.89 324.708 393.889 324.708 cv
393.89 324.708 393.891 324.708 393.892 324.708 cv
393.892 324.708 li
393.899 324.708 mo
394.405 324.707 394.912 324.602 395.275 324.406 cv
394.912 324.602 394.405 324.707 393.899 324.708 cv
393.081 324.611 mo
393.052 324.604 393.024 324.596 392.995 324.588 cv
393.024 324.596 393.052 324.604 393.081 324.611 cv
392.995 324.588 mo
392.793 324.541 392.614 324.463 392.459 324.362 cv
392.35 324.292 392.249 324.207 392.163 324.113 cv
392.995 324.588 li
393.038 323.433 mo
393.035 323.433 393.033 323.433 393.03 323.433 cv
393.033 323.433 393.035 323.433 393.038 323.433 cv
393.038 323.433 li
393.041 323.433 mo
393.286 323.433 393.515 323.394 393.71 323.305 cv
393.851 323.228 li
393.889 323.204 li
393.889 323.204 li
394.558 322.815 395.234 322.427 395.902 322.046 cv
395.902 322.046 li
395.234 322.427 394.558 322.815 393.889 323.204 cv
393.851 323.228 li
393.71 323.305 li
393.515 323.394 393.287 323.433 393.041 323.433 cv
392.087 323.285 mo
392.073 323.281 392.059 323.277 392.045 323.273 cv
392.059 323.277 392.073 323.281 392.087 323.285 cv
392.03 323.269 mo
392.018 323.265 392.005 323.262 391.992 323.258 cv
391.992 323.258 li
391.409 323.087 390.842 322.823 390.43 322.582 cv
386.621 320.382 li
390.43 322.582 li
390.842 322.823 391.409 323.087 391.992 323.258 cv
392.005 323.262 392.018 323.265 392.03 323.269 cv
388.978 319.41 mo
388.974 319.41 388.97 319.41 388.966 319.41 cv
388.97 319.41 388.974 319.41 388.978 319.41 cv
388.978 319.41 li
388.981 319.41 mo
389.312 319.41 389.637 319.352 389.94 319.239 cv
389.637 319.352 389.313 319.41 388.981 319.41 cv
390.588 319.317 mo
390.587 319.317 390.587 319.317 390.586 319.317 cv
390.587 319.317 390.587 319.317 390.588 319.317 cv
390.588 319.317 li
390.591 319.317 mo
391.532 319.316 391.957 318.789 391.977 318.112 cv
391.957 318.789 391.533 319.316 390.591 319.317 cv
389.976 319.254 mo
389.973 319.253 389.969 319.253 389.966 319.252 cv
389.969 319.253 389.973 319.253 389.976 319.254 cv
387.513 319.029 mo
387.504 319.024 387.496 319.019 387.487 319.015 cv
387.496 319.019 387.504 319.024 387.513 319.029 cv
387.451 318.995 mo
387.444 318.991 387.437 318.986 387.43 318.982 cv
387.437 318.986 387.444 318.991 387.451 318.995 cv
337.058 291.89 mo
337.055 291.89 337.053 291.89 337.051 291.89 cv
337.053 291.89 337.055 291.89 337.058 291.89 cv
337.058 291.89 li
337.06 291.89 mo
337.114 291.89 337.168 291.889 337.22 291.886 cv
337.168 291.889 337.114 291.89 337.06 291.89 cv
336.155 291.766 mo
336.147 291.764 336.14 291.762 336.132 291.76 cv
336.14 291.762 336.147 291.764 336.155 291.766 cv
336.132 291.76 mo
335.82 291.674 335.533 291.534 335.339 291.34 cv
335.269 291.262 li
336.132 291.76 li
.811765 .764706 .745098 rgb
f
445.086 314.497 mo
445.086 314.497 450.764 311.207 455.558 308.439 cv
455.567 308.439 li
445.086 314.497 li
423.709 302.153 mo
423.709 302.153 li
423.709 302.153 li
433.035 296.769 mo
435.426 295.389 li
435.012 295.659 434.473 295.96 433.788 296.344 cv
433.562 296.47 433.309 296.613 433.035 296.769 cv
.717647 .694118 .682353 rgb
f
445.086 330.946 mo
445.086 329.08 445.103 326.871 445.103 325.165 cv
445.103 322.011 445.132 315.704 445.132 315.704 cv
445.086 314.497 li
445.086 314.497 li
455.567 308.439 li
455.613 308.44 li
459.327 306.266 li
459.327 320.405 li
459.327 322.722 li
445.086 330.946 li
459.327 306.266 mo
459.327 306.266 li
459.327 306.266 li
.517647 .501961 .490196 rgb
f
445.086 330.946 mo
423.709 318.609 li
423.709 318.609 438.831 327.332 445.086 330.946 cv
423.709 318.609 mo
423.709 318.609 li
423.709 305.985 li
423.709 305.985 li
423.709 302.153 li
423.709 302.153 li
423.709 318.609 li
.717647 .694118 .682353 rgb
f
285.15 436.675 mo
285.15 435.235 285.065 433.962 285.201 432.713 cv
285.245 432.311 285.816 431.871 286.247 431.62 cv
290.877 428.922 295.528 426.262 300.17 423.584 cv
309.453 418.229 318.731 412.868 328.015 407.514 cv
338.021 401.742 348.035 395.983 358.037 390.203 cv
367.231 384.892 376.407 379.549 385.601 374.238 cv
394.839 368.903 404.094 363.599 413.334 358.268 cv
422.446 353.012 431.55 347.74 440.656 342.473 cv
445.472 339.687 450.285 336.898 455.098 334.108 cv
469.083 326.033 li
469.083 277.601 li
469.218 276.832 469.613 276.31 470.431 275.913 cv
471.521 275.385 472.562 274.751 473.794 274.06 cv
473.794 323.313 li
473.794 327.441 li
473.661 327.791 473.445 328.081 473.123 328.348 cv
285.961 436.403 li
285.735 436.481 285.473 436.558 285.15 436.675 cv
.607843 .584314 .552941 rgb
f
469.083 326.033 mo
469.083 326.033 li
459.327 320.405 li
459.327 306.266 li
459.327 306.266 li
459.327 307.78 459.353 309.02 459.512 310.22 cv
459.659 311.335 459.915 311.937 460.837 312.422 cv
462.141 313.106 463.357 313.967 464.685 314.594 cv
465.783 315.112 466.301 315.928 466.618 317.024 cv
467.338 319.511 468.109 321.982 469.056 324.418 cv
469.056 321.133 469.056 317.848 469.056 314.563 cv
469.056 302.489 469.074 290.416 469.027 278.344 cv
469.026 278.073 469.043 277.826 469.083 277.601 cv
469.083 326.033 li
431.233 297.797 mo
431.233 292.422 431.233 287.033 431.233 281.659 cv
431.388 281.516 431.546 281.372 431.714 281.23 cv
433.595 284.004 434.912 287.264 435.915 290.668 cv
435.957 290.81 436.006 290.949 436.045 291.092 cv
436.789 293.825 436.943 294.4 435.426 295.389 cv
433.035 296.769 li
432.501 297.071 431.886 297.422 431.233 297.797 cv
.752941 .698039 .647059 rgb
f
455.098 334.108 mo
455.601 333.817 456.104 333.526 456.606 333.234 cv
456.846 333.096 457.067 332.927 457.569 332.589 cv
454.687 332.47 452.051 332.256 449.448 332.256 cv
449.131 332.256 448.815 332.259 448.499 332.266 cv
448.449 332.267 448.4 332.267 448.351 332.267 cv
446.731 332.267 445.413 331.696 444.097 330.933 cv
438.038 327.42 431.985 323.897 425.935 320.372 cv
425.535 320.14 425.175 320.005 424.796 320.005 cv
424.454 320.005 424.097 320.114 423.68 320.359 cv
420.549 322.202 417.399 324.044 414.12 325.597 cv
410.749 327.193 407.143 327.326 403.483 327.326 cv
402.89 327.326 402.296 327.323 401.701 327.321 cv
399.838 327.317 398.092 327.037 396.423 326.567 cv
392.995 324.588 li
392.995 324.588 li
393.024 324.596 393.052 324.604 393.081 324.611 cv
393.335 324.676 393.612 324.707 393.889 324.708 cv
393.89 324.708 393.891 324.708 393.892 324.708 cv
393.892 324.708 li
393.892 324.708 li
393.894 324.708 393.897 324.708 393.899 324.708 cv
394.405 324.707 394.912 324.602 395.275 324.406 cv
395.288 324.399 395.3 324.393 395.312 324.386 cv
395.653 324.191 395.902 323.896 395.902 323.569 cv
395.902 323.056 395.902 322.559 395.902 322.046 cv
395.902 322.046 li
395.902 322.046 li
395.902 322.046 li
395.902 322.038 li
405.169 316.682 414.442 311.334 423.709 305.985 cv
423.709 318.609 li
423.709 318.609 li
445.086 330.946 li
445.086 330.946 li
445.086 330.946 li
445.086 330.946 li
459.327 322.722 li
459.327 320.405 li
469.083 326.033 li
455.098 334.108 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 365.259 522.174 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 365.259 522.174 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
396.423 326.567 mo
394.604 326.055 392.877 325.318 391.188 324.465 cv
391.984 324.005 li
392.155 324.105 li
392.155 324.105 li
392.155 324.105 li
392.155 324.105 li
392.163 324.113 li
392.249 324.207 392.35 324.292 392.459 324.362 cv
392.614 324.463 392.793 324.541 392.995 324.588 cv
392.995 324.588 li
392.995 324.588 li
396.423 326.567 li
.745098 .682353 .65098 rgb
f
393.889 323.204 mo
394.208 322.994 394.402 322.652 394.402 322.162 cv
394.402 311.31 li
394.402 311.067 394.409 310.824 394.423 310.581 cv
394.791 307.389 395.92 304.443 398.026 301.881 cv
398.816 300.919 399.872 300.098 400.954 299.467 cv
410.637 293.821 420.355 288.238 430.051 282.613 cv
430.163 282.548 430.271 282.476 430.377 282.398 cv
430.588 282.276 li
430.787 282.162 430.969 281.991 431.089 281.792 cv
431.137 281.748 431.185 281.703 431.233 281.659 cv
431.233 287.033 431.233 292.422 431.233 297.797 cv
427.96 299.676 423.709 302.153 423.709 302.153 cv
423.709 302.153 li
423.709 305.985 li
423.709 305.985 li
414.442 311.334 405.169 316.682 395.902 322.038 cv
395.902 322.046 li
395.902 322.046 li
395.234 322.427 394.558 322.815 393.889 323.204 cv
.529412 .427451 .313725 rgb
f
393.038 323.433 mo
393.035 323.433 393.033 323.433 393.03 323.433 cv
392.732 323.432 392.409 323.375 392.087 323.285 cv
392.073 323.281 392.059 323.277 392.045 323.273 cv
392.04 323.272 392.035 323.27 392.03 323.269 cv
392.018 323.265 392.005 323.262 391.992 323.258 cv
391.409 323.087 390.842 322.823 390.43 322.582 cv
386.621 320.382 li
387.43 318.982 li
387.43 318.982 li
387.43 318.982 li
387.43 318.982 li
387.437 318.986 387.444 318.991 387.451 318.995 cv
387.463 319.001 387.475 319.008 387.487 319.015 cv
387.496 319.019 387.504 319.024 387.513 319.029 cv
387.985 319.284 388.483 319.408 388.966 319.41 cv
388.97 319.41 388.974 319.41 388.978 319.41 cv
388.978 319.41 li
388.978 319.41 li
388.979 319.41 388.98 319.41 388.981 319.41 cv
389.313 319.41 389.637 319.352 389.94 319.239 cv
389.94 319.239 li
389.94 319.247 li
389.94 319.247 li
389.949 319.249 389.957 319.25 389.966 319.252 cv
389.969 319.253 389.973 319.253 389.976 319.254 cv
390.199 319.297 390.402 319.317 390.586 319.317 cv
390.587 319.317 390.587 319.317 390.588 319.317 cv
390.588 319.317 li
390.588 319.317 li
390.589 319.317 390.59 319.317 390.591 319.317 cv
391.533 319.316 391.957 318.789 391.977 318.112 cv
391.977 318.112 li
391.977 318.112 li
391.977 318.112 li
391.977 318.112 li
391.984 318.05 li
391.984 311.574 li
392.122 311.471 392.26 311.369 392.396 311.267 cv
392.396 314.505 392.381 318.044 392.411 321.583 cv
392.416 322.18 392.061 323.145 393.138 323.145 cv
393.149 323.145 393.16 323.145 393.172 323.145 cv
394.094 323.128 394.291 322.378 394.286 321.545 cv
394.267 318.589 394.244 315.631 394.289 312.675 cv
394.3 311.966 394.344 311.268 394.423 310.581 cv
394.409 310.824 394.402 311.067 394.402 311.31 cv
394.402 322.162 li
394.402 322.652 394.208 322.994 393.889 323.204 cv
393.889 323.204 li
393.851 323.228 li
393.71 323.305 li
393.515 323.394 393.286 323.433 393.041 323.433 cv
393.04 323.433 393.039 323.433 393.038 323.433 cv
430.377 282.398 mo
430.621 282.219 430.852 282.01 431.089 281.792 cv
430.969 281.991 430.787 282.162 430.588 282.276 cv
430.377 282.398 li
.635294 .541176 .447059 rgb
f
388.978 319.41 mo
388.978 319.41 li
388.974 319.41 388.97 319.41 388.966 319.41 cv
388.483 319.408 387.985 319.284 387.513 319.029 cv
387.504 319.024 387.496 319.019 387.487 319.015 cv
387.475 319.008 387.463 319.001 387.451 318.995 cv
387.444 318.991 387.437 318.986 387.43 318.982 cv
387.43 318.982 li
387.43 318.982 li
370.25 309.063 353.07 299.144 335.883 289.218 cv
335.725 289.127 335.575 289.024 335.435 288.91 cv
335.208 288.554 334.979 288.194 334.75 287.834 cv
334.837 287.723 334.924 287.611 335.011 287.5 cv
336.216 288.16 337.433 288.8 338.623 289.484 cv
347.442 294.559 356.257 299.638 365.069 304.722 cv
371.752 308.577 378.428 312.445 385.109 316.303 cv
385.766 316.682 386.134 316.896 386.375 316.896 cv
386.704 316.896 386.796 316.499 387.06 315.582 cv
387.191 315.123 387.762 314.756 388.19 314.425 cv
389.452 313.45 390.735 312.504 391.984 311.574 cv
391.984 318.05 li
391.977 318.112 li
391.977 318.112 li
391.44 318.423 390.912 318.734 390.375 319.045 cv
390.235 319.123 390.088 319.192 389.94 319.239 cv
389.94 319.239 li
389.94 319.239 li
389.637 319.352 389.312 319.41 388.981 319.41 cv
388.98 319.41 388.979 319.41 388.978 319.41 cv
level3{
gsave
clp
[24.5667 -42.074 42.074 24.5667 363.23 300.488 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[24.5667 -42.074 42.074 24.5667 363.23 300.488 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
393.892 324.708 mo
393.892 324.708 li
393.891 324.708 393.89 324.708 393.889 324.708 cv
393.612 324.707 393.335 324.676 393.081 324.611 cv
393.052 324.604 393.024 324.596 392.995 324.588 cv
392.995 324.588 li
392.995 324.588 li
392.995 324.588 li
392.163 324.113 li
392.155 324.105 li
392.155 324.105 li
392.011 323.945 391.911 323.761 391.91 323.565 cv
391.91 323.465 391.935 323.362 391.992 323.258 cv
391.992 323.258 li
391.992 323.258 li
392.005 323.262 392.018 323.265 392.03 323.269 cv
392.035 323.27 392.04 323.272 392.045 323.273 cv
392.059 323.277 392.073 323.281 392.087 323.285 cv
392.409 323.375 392.732 323.432 393.03 323.433 cv
393.033 323.433 393.035 323.433 393.038 323.433 cv
393.038 323.433 li
393.039 323.433 393.04 323.433 393.041 323.433 cv
393.287 323.433 393.515 323.394 393.71 323.305 cv
393.851 323.228 li
393.889 323.204 li
394.558 322.815 395.234 322.427 395.902 322.046 cv
395.902 322.046 li
395.902 322.559 395.902 323.056 395.902 323.569 cv
395.902 323.896 395.653 324.191 395.312 324.386 cv
395.3 324.393 395.288 324.399 395.275 324.406 cv
394.912 324.602 394.405 324.707 393.899 324.708 cv
393.897 324.708 393.894 324.708 393.892 324.708 cv
.529412 .427451 .313725 rgb
f
392.155 324.105 mo
391.984 324.005 li
351.679 300.738 li
352.13 300.474 li
386.621 320.382 li
390.43 322.582 li
390.842 322.823 391.409 323.087 391.992 323.258 cv
391.992 323.258 li
391.935 323.362 391.91 323.465 391.91 323.565 cv
391.911 323.761 392.011 323.945 392.155 324.105 cv
392.155 324.105 li
.654902 .611765 .564706 rgb
f
391.188 324.465 mo
389.796 323.762 388.431 322.981 387.063 322.185 cv
381.604 319.004 376.126 315.853 370.654 312.693 cv
364.04 308.873 357.42 305.063 350.807 301.241 cv
351.679 300.738 li
391.984 324.005 li
391.188 324.465 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 294.752 498.615 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 294.752 498.615 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
390.588 319.317 mo
390.588 319.317 li
390.587 319.317 390.587 319.317 390.586 319.317 cv
390.402 319.317 390.199 319.297 389.976 319.254 cv
389.973 319.253 389.969 319.253 389.966 319.252 cv
389.957 319.25 389.949 319.249 389.94 319.247 cv
389.94 319.247 li
389.94 319.239 li
390.088 319.192 390.235 319.123 390.375 319.045 cv
390.912 318.734 391.44 318.423 391.977 318.112 cv
391.977 318.112 li
391.977 318.112 li
391.957 318.789 391.532 319.316 390.591 319.317 cv
390.59 319.317 390.589 319.317 390.588 319.317 cv
.529412 .427451 .313725 rgb
f
386.621 320.382 mo
352.13 300.474 li
337.259 291.884 li
337.251 291.884 li
335.463 290.851 li
335.452 290.844 335.442 290.838 335.431 290.832 cv
335.721 290.762 336.052 290.682 336.494 290.575 cv
336.155 290.042 335.798 289.482 335.435 288.91 cv
335.575 289.024 335.725 289.127 335.883 289.218 cv
353.07 299.144 370.25 309.063 387.43 318.982 cv
387.43 318.982 li
386.621 320.382 li
.635294 .541176 .447059 rgb
f
351.679 300.738 mo
351.679 300.738 li
336.132 291.76 li
336.132 291.76 li
336.14 291.762 336.147 291.764 336.155 291.766 cv
336.45 291.849 336.768 291.89 337.051 291.89 cv
337.053 291.89 337.055 291.89 337.058 291.89 cv
337.058 291.89 li
337.058 291.89 li
337.058 291.89 337.059 291.89 337.06 291.89 cv
337.114 291.89 337.168 291.889 337.22 291.886 cv
337.23 291.885 337.241 291.884 337.251 291.884 cv
337.251 291.884 li
337.251 291.884 li
337.259 291.884 li
352.13 300.474 li
351.679 300.738 li
.752941 .698039 .647059 rgb
f
350.807 301.241 mo
350.761 301.214 350.715 301.188 350.669 301.161 cv
347.276 299.2 343.867 297.267 340.518 295.235 cv
338.853 294.227 337.293 293.04 335.712 291.898 cv
335.451 291.71 335.265 291.418 335.065 291.144 cv
335.269 291.262 li
335.269 291.262 li
335.269 291.262 li
335.269 291.262 li
335.339 291.34 li
335.533 291.534 335.82 291.674 336.132 291.76 cv
336.132 291.76 li
336.132 291.76 li
351.679 300.738 li
350.807 301.241 li
.713725 .654902 .623529 rgb
f
337.058 291.89 mo
337.058 291.89 li
337.055 291.89 337.053 291.89 337.051 291.89 cv
336.768 291.89 336.45 291.849 336.155 291.766 cv
336.147 291.764 336.14 291.762 336.132 291.76 cv
336.132 291.76 li
336.132 291.76 li
336.132 291.76 li
335.269 291.262 li
335.269 291.262 li
335.183 291.159 335.111 291.042 335.076 290.918 cv
335.19 290.89 335.307 290.862 335.431 290.832 cv
335.442 290.838 335.452 290.844 335.463 290.851 cv
337.251 291.884 li
337.241 291.884 337.23 291.885 337.22 291.886 cv
337.168 291.889 337.114 291.89 337.06 291.89 cv
337.059 291.89 337.058 291.89 337.058 291.89 cv
.529412 .427451 .313725 rgb
f
335.269 291.262 mo
335.065 291.144 li
335.018 291.08 334.97 291.016 334.92 290.955 cv
334.972 290.943 335.024 290.93 335.076 290.918 cv
335.111 291.042 335.183 291.159 335.269 291.262 cv
335.269 291.262 li
level3{
gsave
clp
[175.355 -524.796 524.796 175.355 256.051 485.683 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[175.355 -524.796 524.796 175.355 256.051 485.683 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
37.5362 270.74 mo
37.0972 270.468 li
37.0972 270.468 li
37.5362 270.719 li
37.5362 270.74 li
26.0352 170.896 mo
26.0315 165.12 26.0293 159.396 26.0293 153.749 cv
26.0293 153.749 26.0313 153.758 26.0352 153.777 cv
26.0352 159.484 26.0352 165.189 26.0352 170.896 cv
.811765 .764706 .745098 rgb
f
37.5611 167.914 mo
37.0972 167.646 li
32.7901 165.161 29.7403 162.226 27.9465 159.104 cv
28.0776 159.322 28.2151 159.527 28.3588 159.714 cv
30.3482 162.92 33.2129 165.208 36.3828 167.15 cv
36.8218 167.419 37.5611 167.867 37.5611 167.867 cv
37.5611 167.914 li
27.5813 158.432 mo
26.989 157.277 26.5658 156.099 26.3114 154.911 cv
26.5678 155.866 26.9956 157.249 27.5813 158.432 cv
level3{
gsave
clp
[62.8831 0 0 62.8831 26.025 149.66 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[62.8831 0 0 62.8831 26.025 149.66 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
37.5362 270.719 mo
37.0972 270.468 li
37.0972 270.468 37.1768 250.111 37.1768 239.867 cv
32.23 242.609 28.1333 246.224 26.0996 251.733 cv
26.0996 225.398 26.0521 197.597 26.0352 170.896 cv
26.0352 165.189 26.0352 159.484 26.0352 153.777 cv
26.0586 153.887 26.1517 154.316 26.3114 154.911 cv
26.5658 156.099 26.989 157.277 27.5813 158.432 cv
27.6969 158.665 27.8187 158.891 27.9465 159.104 cv
29.7403 162.226 32.7901 165.161 37.0972 167.646 cv
37.5611 167.914 li
37.5611 169.283 li
37.5362 270.719 li
level3{
gsave
clp
[-85.7717 118.174 -118.174 -85.7717 70.2722 159.71 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-85.7717 118.174 -118.174 -85.7717 70.2722 159.71 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
334.095 284.37 mo
334.095 284.05 334.095 283.731 334.095 283.411 cv
334.095 282.829 334.246 282.265 334.532 281.788 cv
334.3 282.32 334.243 283.07 334.095 284.37 cv
336.115 280.477 mo
344.622 275.563 353.129 270.649 361.637 265.741 cv
361.637 265.741 li
361.637 265.741 li
361.637 265.741 li
361.787 266.35 362.069 266.897 362.53 267.282 cv
358.509 269.597 354.347 271.92 350.27 274.386 cv
346.883 276.436 343.348 278.07 339.502 279.028 cv
339.028 279.145 338.572 279.352 338.126 279.555 cv
337.274 279.943 336.62 280.23 336.115 280.477 cv
level3{
gsave
clp
[24.5667 -42.074 42.074 24.5667 363.23 300.488 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[24.5667 -42.074 42.074 24.5667 363.23 300.488 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
362.53 267.282 mo
362.069 266.897 361.787 266.35 361.637 265.741 cv
361.637 265.741 li
361.54 265.354 361.498 264.944 361.497 264.535 cv
361.496 264.056 361.552 263.577 361.645 263.138 cv
362.188 260.549 362.74 257.952 363.284 255.363 cv
363.5 254.329 363.924 253.374 364.459 252.593 cv
363.721 253.807 363.234 255.309 362.952 257.535 cv
362.626 260.692 362.538 264.185 362.896 267.07 cv
362.774 267.141 362.652 267.211 362.53 267.282 cv
367.289 249.536 mo
367.351 249.472 367.413 249.409 367.474 249.345 cv
367.464 249.364 367.463 249.377 367.472 249.383 cv
367.41 249.434 367.349 249.485 367.289 249.536 cv
367.849 248.96 mo
368.076 248.726 368.304 248.492 368.531 248.259 cv
368.531 248.259 li
368.591 248.3 368.178 248.658 367.849 248.96 cv
level3{
gsave
clp
[14.6836 -27.9552 27.9552 14.6836 372.073 274.954 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.6836 -27.9552 27.9552 14.6836 372.073 274.954 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
368.262 248.414 mo
368.376 248.347 368.468 248.293 368.531 248.259 cv
368.262 248.414 li
.635294 .541176 .447059 rgb
f
334.06 284.673 mo
334.021 284.33 333.938 283.986 333.949 283.646 cv
334.064 280.31 333.861 276.918 334.405 273.652 cv
335.14 269.241 337.666 265.985 341.745 263.742 cv
349.878 259.269 357.852 254.506 365.893 249.866 cv
366.25 249.659 367.606 248.805 368.262 248.414 cv
368.531 248.259 li
368.531 248.259 li
368.304 248.492 368.076 248.726 367.849 248.96 cv
367.668 249.126 367.512 249.275 367.474 249.345 cv
367.413 249.409 367.351 249.472 367.289 249.536 cv
366.091 250.545 365.161 251.439 364.459 252.593 cv
363.924 253.374 363.5 254.329 363.284 255.363 cv
362.74 257.952 362.188 260.549 361.645 263.138 cv
361.552 263.577 361.496 264.056 361.497 264.535 cv
361.498 264.944 361.54 265.354 361.637 265.741 cv
361.637 265.741 li
353.129 270.649 344.622 275.563 336.115 280.477 cv
335.202 280.923 334.773 281.239 334.532 281.788 cv
334.246 282.265 334.095 282.829 334.095 283.411 cv
334.095 283.731 334.095 284.05 334.095 284.37 cv
334.084 284.468 334.072 284.569 334.06 284.673 cv
.529412 .427451 .313725 rgb
f
110.286 123.57 mo
105.348 120.363 102.336 116.529 101.233 112.558 cv
101.233 112.538 101.233 112.518 101.233 112.498 cv
102.691 117.432 106.128 120.694 110.286 123.57 cv
level3{
gsave
clp
[62.865 0 0 62.865 100.755 105.423 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[62.865 0 0 62.865 100.755 105.423 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
101.233 128.682 mo
101.233 123.209 101.233 117.93 101.233 112.558 cv
102.336 116.529 105.348 120.363 110.286 123.57 cv
110.286 123.57 li
107.281 125.267 104.359 126.917 101.233 128.682 cv
level3{
gsave
clp
[9.53819 0 0 9.53819 100.747 119.085 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.53819 0 0 9.53819 100.747 119.085 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
415.918 287.955 mo
423.366 283.659 li
423.366 283.651 li
423.366 283.651 li
426.709 281.724 li
426.888 281.62 427.039 281.503 427.159 281.376 cv
427.009 281.572 426.802 281.754 426.54 281.909 cv
424.182 283.307 417.971 286.877 415.918 287.955 cv
427.262 280.015 mo
427.134 279.851 426.952 279.695 426.709 279.555 cv
426.57 279.474 li
426.889 279.616 427.118 279.803 427.262 280.015 cv
426.544 279.459 mo
424.338 278.18 li
424.322 278.18 li
424.304 277.492 424.17 276.812 423.866 276.265 cv
424.691 277.044 425.508 277.852 426.544 279.459 cv
.635294 .541176 .447059 rgb
f
423.366 283.651 mo
423.639 282.338 423.911 281.04 424.19 279.734 cv
424.276 279.321 424.328 278.874 424.328 278.428 cv
424.328 278.345 424.326 278.262 424.322 278.18 cv
424.338 278.18 li
426.544 279.459 li
426.545 279.46 426.546 279.462 426.547 279.464 cv
426.555 279.467 426.562 279.471 426.57 279.474 cv
426.709 279.555 li
426.952 279.695 427.134 279.851 427.262 280.015 cv
427.542 280.429 427.496 280.936 427.159 281.376 cv
427.039 281.503 426.888 281.62 426.709 281.724 cv
423.366 283.651 li
.529412 .427451 .313725 rgb
f
415.256 288.268 mo
415.253 288.268 415.25 288.267 415.249 288.266 cv
417.221 285.86 420.479 282.12 422.403 279.678 cv
423.182 278.689 422.862 276.933 423.509 275.929 cv
423.628 276.042 423.747 276.153 423.866 276.265 cv
424.17 276.812 424.304 277.492 424.322 278.18 cv
424.326 278.262 424.328 278.345 424.328 278.428 cv
424.328 278.874 424.276 279.321 424.19 279.734 cv
423.911 281.04 423.639 282.338 423.366 283.651 cv
423.366 283.651 li
423.366 283.659 li
415.918 287.955 li
415.539 288.154 415.302 288.268 415.256 288.268 cv
level3{
gsave
clp
[14.6836 -27.9552 27.9552 14.6836 400.29 289.775 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.6836 -27.9552 27.9552 14.6836 400.29 289.775 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
397.058 262.642 mo
397.059 262.571 397.058 262.499 397.053 262.43 cv
397.042 261.935 396.962 261.423 396.792 260.961 cv
396.792 260.961 li
396.962 261.423 397.042 261.935 397.053 262.43 cv
397.118 262.468 li
397.102 262.526 397.082 262.584 397.058 262.642 cv
.811765 .764706 .745098 rgb
f
397.118 262.468 mo
397.053 262.43 li
397.042 261.935 396.962 261.423 396.792 260.961 cv
396.795 260.956 396.799 260.95 396.803 260.944 cv
397.042 261.346 397.271 261.901 397.118 262.468 cv
.752941 .698039 .647059 rgb
f
388.774 280.123 mo
388.774 280.123 li
388.774 280.123 li
388.775 280.114 388.775 280.105 388.775 280.096 cv
388.775 280.105 388.775 280.114 388.774 280.123 cv
388.774 280.123 li
389.927 274.139 mo
390.138 273.131 390.35 272.123 390.561 271.113 cv
390.865 269.659 391.588 268.361 392.436 267.482 cv
393.086 266.811 393.735 266.142 394.385 265.472 cv
392.519 267.786 390.933 270.984 389.927 274.139 cv
396.224 263.576 mo
396.368 263.427 396.512 263.279 396.656 263.13 cv
396.751 263.029 396.85 262.938 396.953 262.849 cv
396.84 263.035 396.677 263.218 396.45 263.394 cv
396.375 263.453 396.299 263.514 396.224 263.576 cv
level3{
gsave
clp
[14.6836 -27.9552 27.9552 14.6836 400.29 289.775 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.6836 -27.9552 27.9552 14.6836 400.29 289.775 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
388.412 281.602 mo
388.283 281.602 388.114 281.577 387.894 281.523 cv
387.248 281.368 387.107 281.311 386.465 281.141 cv
386.465 281.141 li
386.48 281.117 li
387.476 280.962 388.176 280.62 388.774 280.123 cv
388.774 280.123 li
388.724 281.009 389.038 281.602 388.412 281.602 cv
385.86 280.791 mo
385.412 280.576 384.875 280.333 384.858 280.253 cv
384.874 280.249 384.89 280.244 384.905 280.24 cv
385.86 280.791 li
level3{
gsave
clp
[24.5667 -42.074 42.074 24.5667 363.23 300.488 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[24.5667 -42.074 42.074 24.5667 363.23 300.488 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
386.465 281.141 mo
386.465 281.141 li
386.453 281.084 386.179 280.944 385.86 280.791 cv
384.905 280.24 li
386.561 279.772 387.723 278.188 387.845 276.774 cv
388.302 271.464 391.262 267.538 394.819 263.896 cv
395.652 263.042 396.181 261.893 396.792 260.961 cv
396.962 261.423 397.042 261.935 397.053 262.43 cv
397.058 262.499 397.059 262.571 397.058 262.642 cv
397.03 262.711 396.995 262.78 396.953 262.849 cv
396.85 262.938 396.751 263.029 396.656 263.13 cv
396.512 263.279 396.368 263.427 396.224 263.576 cv
395.589 264.101 394.973 264.742 394.385 265.472 cv
393.735 266.142 393.086 266.811 392.436 267.482 cv
391.588 268.361 390.865 269.659 390.561 271.113 cv
390.35 272.123 390.138 273.131 389.927 274.139 cv
389.259 276.233 388.846 278.31 388.775 280.096 cv
388.775 280.105 388.775 280.114 388.774 280.123 cv
388.774 280.123 li
388.176 280.62 387.476 280.962 386.48 281.117 cv
386.465 281.141 li
level3{
gsave
clp
[14.6836 -27.9552 27.9552 14.6836 372.073 274.954 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.6836 -27.9552 27.9552 14.6836 372.073 274.954 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
295.932 205.084 mo
293.991 203.965 li
293.992 203.941 293.992 203.917 293.992 203.893 cv
293.991 203.217 293.863 202.547 293.575 201.99 cv
293.573 201.834 293.563 201.671 293.544 201.501 cv
294.487 202.899 295.263 203.973 295.932 205.084 cv
.752941 .698039 .647059 rgb
f
288.286 210.832 mo
293.26 207.96 li
293.26 207.96 li
295.515 206.66 li
293.153 208.083 290.752 209.441 288.357 210.809 cv
288.337 210.82 288.314 210.827 288.286 210.832 cv
295.841 206.463 mo
293.819 205.302 li
293.866 205.069 li
293.897 204.882 li
293.952 204.579 293.983 204.276 293.991 203.965 cv
293.991 203.965 li
295.932 205.084 li
295.976 205.158 296.019 205.231 296.063 205.305 cv
296.219 205.572 296.096 206.309 295.868 206.447 cv
295.859 206.452 295.85 206.458 295.841 206.463 cv
.635294 .541176 .447059 rgb
f
293.26 207.96 mo
293.446 207.074 293.633 206.188 293.819 205.302 cv
293.819 205.302 li
295.841 206.463 li
295.732 206.529 295.623 206.595 295.515 206.66 cv
293.26 207.96 li
.529412 .427451 .313725 rgb
f
288.207 210.836 mo
288.086 210.836 287.894 210.816 287.548 210.816 cv
289.079 208.892 290.358 207.128 291.809 205.518 cv
292.691 204.537 293.596 203.644 293.575 201.99 cv
293.863 202.547 293.991 203.217 293.992 203.893 cv
293.992 203.917 293.992 203.941 293.991 203.965 cv
293.991 203.965 li
293.991 203.965 li
293.983 204.276 293.952 204.579 293.897 204.882 cv
293.866 205.069 li
293.819 205.302 li
293.633 206.188 293.446 207.074 293.26 207.96 cv
293.26 207.96 li
288.286 210.832 li
288.264 210.835 288.238 210.836 288.207 210.836 cv
level3{
gsave
clp
[14.1188 -21.4606 21.4606 14.1188 269.915 212.053 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.1188 -21.4606 21.4606 14.1188 269.915 212.053 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
427.08 302.867 mo
426.919 302.774 li
430.596 300.645 434.28 298.522 437.958 296.4 cv
437.958 296.4 li
438.114 296.49 438.269 296.58 438.425 296.669 cv
437.723 297.072 431.729 300.509 428.955 302.161 cv
428.464 302.453 427.398 302.775 427.08 302.867 cv
.470588 .4 .372549 rgb
f
426.988 302.894 mo
425.847 302.153 li
425.847 302.153 li
426.919 302.774 li
426.919 302.774 li
427.08 302.867 li
427.021 302.884 426.988 302.894 426.988 302.894 cv
425.847 302.153 mo
425.847 302.153 425.847 302.153 425.847 302.153 cv
425.847 302.153 li
425.847 302.153 mo
425.847 302.153 425.847 302.153 425.847 302.153 cv
425.847 302.153 li
.717647 .694118 .682353 rgb
f
438.425 296.669 mo
438.269 296.58 438.114 296.49 437.958 296.4 cv
437.958 295.988 437.958 295.576 437.958 295.164 cv
437.958 295.164 li
438.492 296.631 li
438.492 296.631 438.469 296.644 438.425 296.669 cv
f
426.919 302.774 mo
425.847 302.153 li
425.847 302.153 li
425.847 302.153 425.847 302.153 425.847 302.153 cv
425.847 302.153 li
425.928 302.107 433.61 297.693 437.216 295.651 cv
437.511 295.484 437.958 295.164 437.958 295.164 cv
437.958 295.576 437.958 295.988 437.958 296.4 cv
437.958 296.4 li
434.28 298.522 430.596 300.645 426.919 302.774 cv
426.919 302.774 li
426.919 302.774 li
.517647 .501961 .490196 rgb
f
453.541 308.375 mo
453.354 308.369 li
441.601 307.099 li
444.559 305.324 li
452.932 305.087 li
452.929 305.045 li
453.991 305.659 455.054 306.273 456.116 306.887 cv
453.541 308.375 li
.470588 .4 .372549 rgb
f
455.558 308.439 mo
453.541 308.375 li
456.116 306.887 li
456.116 306.887 li
457.189 306.266 li
452.844 303.757 li
452.825 303.463 li
454.68 303.583 li
459.327 306.266 li
458.249 306.886 456.94 307.64 455.558 308.439 cv
.717647 .694118 .682353 rgb
f
456.116 306.887 mo
456.116 306.887 li
456.116 306.887 li
455.054 306.273 453.991 305.659 452.929 305.045 cv
452.844 303.757 li
457.189 306.266 li
456.116 306.887 li
f
459.327 306.266 mo
454.68 303.583 li
455.014 303.605 li
459.327 306.266 li
.752941 .698039 .647059 rgb
f
455.567 308.439 mo
455.558 308.439 li
456.94 307.64 458.249 306.886 459.327 306.266 cv
459.327 306.266 li
455.567 308.439 li
.584314 .529412 .509804 rgb
f
455.613 308.44 mo
455.567 308.439 li
459.327 306.266 li
455.613 308.44 li
.419608 .384314 .364706 rgb
f
452.002 277.427 mo
452.017 278.409 451.778 279.796 451.566 280.745 cv
451.395 281.515 451.201 282.175 450.952 282.874 cv
450.161 285.086 448.98 287.222 448.057 288.453 cv
447.678 288.961 447.252 289.434 446.745 289.832 cv
446.435 290.076 446.073 290.308 445.69 290.479 cv
445.187 290.704 444.646 290.824 444.141 290.728 cv
444.135 290.727 li
443.945 290.689 443.776 290.622 443.636 290.535 cv
443.66 290.444 li
444.229 288.471 445.024 286.245 445.563 284.343 cv
445.652 284.315 li
445.819 284.263 445.984 284.199 446.147 284.126 cv
446.239 284.085 li
446.291 284.06 li
446.371 284.02 li
446.632 283.877 li
446.701 283.836 li
447.807 283.166 448.694 282.055 448.748 280.827 cv
448.747 280.827 li
448.746 280.566 li
448.729 280.23 448.646 279.898 448.501 279.581 cv
448.32 279.188 448.047 278.818 447.729 278.477 cv
448.188 278.264 448.623 277.895 448.948 277.504 cv
449.302 277.078 449.54 276.618 449.739 276.106 cv
449.75 276.079 li
450.152 275.868 450.618 275.685 451.064 275.771 cv
451.189 275.802 li
451.49 275.898 451.748 276.136 451.875 276.513 cv
451.97 276.795 451.997 277.13 452.002 277.427 cv
cp
.52549 .584314 .423529 rgb
f
446.632 283.877 mo
446.701 283.836 li
446.385 284.56 446.13 285.3 445.835 286.069 cv
445.72 285.496 445.667 284.908 445.652 284.315 cv
445.819 284.263 445.984 284.199 446.147 284.126 cv
446.239 284.085 li
446.291 284.06 li
446.371 284.02 li
446.632 283.877 li
cp
.458824 .521569 .34902 rgb
f
451.189 275.802 mo
450.99 276.619 450.693 277.413 450.306 278.161 cv
449.864 279.011 449.313 279.793 448.746 280.566 cv
448.729 280.23 448.646 279.898 448.501 279.581 cv
448.32 279.188 448.047 278.818 447.729 278.477 cv
448.188 278.264 448.623 277.895 448.948 277.504 cv
449.302 277.078 449.54 276.618 449.739 276.106 cv
449.75 276.079 li
450.152 275.868 450.618 275.685 451.064 275.771 cv
451.189 275.802 li
cp
f
448.867 268.873 mo
449.33 268.785 449.636 269.179 449.843 269.62 cv
450.16 270.3 450.367 271.398 450.398 272.162 cv
450.452 273.417 450.159 274.97 449.696 276.149 cv
449.502 276.645 449.27 277.092 448.934 277.499 cv
448.614 277.888 448.186 278.26 447.727 278.475 cv
447.302 278.019 446.798 277.612 446.332 277.272 cv
446.281 277.236 li
446.118 275.957 445.785 274.72 445.327 273.527 cv
445.605 272.209 446.332 271.134 447.232 270.146 cv
447.556 269.792 447.986 269.349 448.382 269.09 cv
448.53 268.993 448.693 268.907 448.867 268.873 cv
cp
.52549 .584314 .423529 rgb
f
449.944 272.588 mo
449.855 272.124 449.727 271.658 449.567 271.317 cv
449.42 271.003 449.263 270.822 449.137 270.822 cv
449.096 270.827 li
449.008 270.844 448.902 270.893 448.774 270.977 cv
448.495 271.159 448.148 271.48 447.713 271.959 cv
446.926 272.821 446.417 273.602 446.122 274.411 cv
446.026 274.106 445.921 273.801 445.806 273.494 cv
446.049 272.466 446.598 271.523 447.571 270.456 cv
448.007 269.979 448.354 269.656 448.634 269.474 cv
448.762 269.391 448.867 269.342 448.955 269.324 cv
448.996 269.32 li
449.122 269.32 449.279 269.5 449.427 269.815 cv
449.722 270.445 449.911 271.505 449.94 272.182 cv
449.945 272.313 449.947 272.448 449.944 272.588 cv
cp
.639216 .709804 .513726 rgb
f
447.641 278.384 mo
447.234 277.964 446.767 277.59 446.332 277.272 cv
446.281 277.236 li
446.131 276.051 445.832 274.901 445.425 273.789 cv
445.803 273.877 446.186 274.101 446.543 274.483 cv
447.36 275.36 447.601 276.757 447.638 277.909 cv
447.643 278.067 447.645 278.226 447.641 278.384 cv
cp
.458824 .521569 .34902 rgb
f
445.94 290.137 mo
445.863 290.255 445.778 290.369 445.69 290.479 cv
445.187 290.704 444.646 290.824 444.141 290.728 cv
444.135 290.727 li
443.969 290.694 443.818 290.639 443.688 290.566 cv
443.652 290.475 li
444.221 288.494 445.021 286.255 445.563 284.343 cv
445.76 284.285 445.955 284.213 446.147 284.126 cv
446.239 284.085 li
446.291 284.06 li
446.371 284.02 li
446.632 283.877 li
446.627 284.646 450.59 277.447 450.306 278.161 cv
449.386 280.478 446.688 288.994 445.94 290.137 cv
cp
f
448.747 280.827 mo
448.748 280.827 li
448.693 282.08 447.77 283.212 446.632 283.877 cv
446.289 284.077 445.927 284.236 445.563 284.343 cv
445.415 284.383 li
444.93 284.507 444.515 284.514 444.069 284.443 cv
443.619 284.373 443.099 284.214 442.588 283.989 cv
442.499 283.948 li
442.157 283.792 441.822 283.606 441.519 283.396 cv
440.701 282.833 440.188 282.151 439.918 281.199 cv
439.792 280.755 439.732 280.287 439.753 279.814 cv
439.78 279.192 439.942 278.589 440.255 278.067 cv
440.771 277.204 441.953 276.155 443.027 275.917 cv
443.236 275.87 443.441 275.854 443.636 275.877 cv
443.737 275.892 li
444.532 276.032 445.633 276.766 446.281 277.236 cv
446.332 277.272 li
446.767 277.59 447.234 277.964 447.641 278.384 cv
447.727 278.475 li
447.729 278.477 li
448.047 278.818 448.32 279.188 448.501 279.581 cv
448.684 279.98 448.767 280.4 448.747 280.827 cv
cp
.52549 .584314 .423529 rgb
f
442.142 280.601 mo
442.124 281.015 442.174 281.432 442.289 281.84 cv
442.526 282.671 442.964 283.271 443.709 283.784 cv
443.798 283.846 443.89 283.905 443.985 283.962 cv
443.608 283.888 443.185 283.75 442.773 283.568 cv
442.698 283.534 li
442.689 283.53 li
442.36 283.38 442.054 283.207 441.779 283.019 cv
441.034 282.505 440.597 281.905 440.36 281.073 cv
440.244 280.666 440.194 280.249 440.212 279.834 cv
440.236 279.27 440.388 278.74 440.649 278.303 cv
441.109 277.533 442.188 276.573 443.126 276.365 cv
443.242 276.339 443.354 276.326 443.456 276.326 cv
443.584 276.334 li
443.653 276.344 li
444.041 276.412 444.598 276.675 445.264 277.098 cv
445.056 277.131 li
444.116 277.34 443.038 278.3 442.578 279.068 cv
442.317 279.506 442.166 280.035 442.142 280.601 cv
cp
.639216 .709804 .513726 rgb
f
448.294 294.73 mo
448.566 294.837 448.707 295.078 448.701 295.363 cv
448.691 295.87 448.186 297.086 447.986 297.554 cv
447.669 298.296 447.386 298.868 447.03 299.501 cv
446.51 300.427 445.594 301.868 444.86 302.637 cv
444.591 302.919 444.235 303.219 443.863 303.368 cv
443.603 303.474 443.334 303.506 443.079 303.409 cv
443.078 303.409 li
442.91 303.344 442.768 303.227 442.677 303.063 cv
442.539 302.817 442.553 302.543 442.602 302.265 cv
442.632 302.09 442.679 301.901 442.729 301.728 cv
442.755 301.635 li
442.854 301.305 442.985 300.934 443.142 300.542 cv
443.465 299.731 443.894 298.838 444.358 298.055 cv
444.762 297.374 445.117 296.897 445.46 296.508 cv
445.968 295.932 446.546 295.442 447.143 295.053 cv
447.488 294.827 447.91 294.585 448.293 294.729 cv
448.294 294.73 li
cp
.52549 .584314 .423529 rgb
f
444.559 305.324 mo
444.786 305.897 444.402 306.411 443.86 306.725 cv
443.687 306.824 443.495 306.907 443.291 306.973 cv
442.297 307.296 441.013 307.212 440.168 306.725 cv
439.836 306.532 439.524 306.246 439.431 305.875 cv
438.834 303.51 438.495 301.101 438.535 298.661 cv
438.964 298.883 439.338 299.018 439.561 299.058 cv
439.558 299.073 li
440.196 299.195 440.838 299.006 441.296 298.614 cv
441.566 298.384 441.773 298.083 441.879 297.733 cv
441.88 297.731 li
442.038 297.2 441.943 296.661 441.686 296.178 cv
441.591 295.999 441.468 295.822 441.329 295.65 cv
440.97 295.206 440.498 294.792 440.09 294.464 cv
439.875 294.291 439.516 294.01 439.132 293.743 cv
439.765 290.948 440.798 288.532 441.737 286.199 cv
442.002 285.542 442.259 284.891 442.497 284.239 cv
442.588 283.989 li
442.987 284.165 443.393 284.301 443.767 284.385 cv
443.871 284.408 443.972 284.428 444.069 284.443 cv
444.515 284.514 444.93 284.507 445.415 284.383 cv
445.563 284.343 li
445.024 286.245 444.229 288.471 443.66 290.444 cv
443.636 290.535 li
443.455 291.202 443.3 291.855 443.173 292.504 cv
442.65 295.151 442.594 297.694 443.142 300.542 cv
442.985 300.934 442.854 301.305 442.755 301.635 cv
442.729 301.728 li
442.679 301.901 442.632 302.09 442.602 302.265 cv
442.553 302.543 442.539 302.817 442.677 303.063 cv
442.768 303.227 442.91 303.344 443.078 303.409 cv
443.079 303.409 li
443.334 303.506 443.603 303.474 443.863 303.368 cv
444.063 304.002 444.308 304.688 444.559 305.324 cv
cp
.376471 .454902 .294118 rgb
f
446.281 277.236 mo
445.936 276.985 445.461 276.66 444.973 276.39 cv
444.546 276.152 444.108 275.957 443.737 275.892 cv
443.685 275.46 443.612 275.031 443.523 274.605 cv
443.126 272.693 442.389 270.856 441.494 269.132 cv
441.493 269.132 li
441.277 269.131 441.037 269.095 440.705 268.974 cv
440.059 268.737 439.328 268.303 438.811 267.86 cv
438.405 267.515 438.112 267.151 437.862 266.714 cv
437.488 266.056 437.211 265.178 437.428 264.459 cv
437.428 264.458 li
437.669 263.656 438.563 262.898 439.368 263.073 cv
439.963 263.203 441.139 264.106 441.612 264.489 cv
442.179 264.945 442.868 265.564 443.208 266.202 cv
443.453 266.661 443.551 267.17 443.424 267.675 cv
443.402 267.756 li
443.401 267.759 li
443.287 268.139 443.051 268.463 442.744 268.701 cv
443.767 270.214 444.673 271.825 445.327 273.527 cv
445.425 273.789 li
445.832 274.901 446.131 276.051 446.281 277.236 cv
cp
f
441.737 286.199 mo
441.737 286.199 li
440.798 288.532 439.765 290.948 439.132 293.743 cv
438.669 293.421 438.171 293.119 437.846 293.049 cv
437.386 292.948 436.893 293.154 436.512 293.501 cv
436.511 293.501 li
435.855 292.475 435.367 291.247 435.151 290.008 cv
434.998 289.13 434.985 288.278 435.123 287.304 cv
435.275 286.226 435.596 285.156 435.979 284.146 cv
436.175 283.632 436.423 283.031 436.685 282.545 cv
436.914 282.117 437.265 281.557 437.712 281.384 cv
437.871 281.323 438.033 281.312 438.194 281.336 cv
438.344 281.369 li
438.448 281.404 li
438.624 281.47 438.782 281.563 438.935 281.674 cv
439.76 282.271 440.629 283.601 441.083 284.509 cv
441.356 285.057 441.563 285.611 441.737 286.199 cv
cp
.458824 .521569 .34902 rgb
f
440.776 284.933 mo
440.421 284.441 440.031 284 439.666 283.735 cv
439.529 283.637 439.41 283.569 439.289 283.525 cv
439.283 283.522 li
439.218 283.501 li
439.126 283.48 li
439.041 283.474 li
438.878 283.503 li
438.718 283.564 438.451 283.779 438.091 284.452 cv
437.884 284.838 437.654 285.358 437.41 285.999 cv
436.983 287.123 436.712 288.124 436.579 289.059 cv
436.451 289.967 436.459 290.78 436.605 291.619 cv
436.67 291.986 436.76 292.356 436.874 292.723 cv
436.647 292.835 li
436.143 291.938 435.777 290.922 435.604 289.93 cv
435.458 289.09 435.449 288.276 435.578 287.368 cv
435.71 286.434 435.982 285.433 436.409 284.309 cv
436.653 283.669 436.882 283.147 437.09 282.762 cv
437.45 282.09 437.717 281.875 437.877 281.813 cv
438.04 281.783 li
438.125 281.79 li
438.217 281.811 li
438.281 281.832 li
438.288 281.835 li
438.408 281.88 438.528 281.946 438.665 282.046 cv
439.391 282.571 440.214 283.797 440.672 284.714 cv
440.776 284.933 li
cp
.639216 .709804 .513726 rgb
f
442.744 268.701 mo
443.424 267.675 li
443.402 267.756 li
443.401 267.759 li
443.287 268.139 443.051 268.463 442.744 268.701 cv
cp
.376471 .454902 .294118 rgb
f
443.173 292.504 mo
442.65 295.151 442.594 297.694 443.142 300.542 cv
442.985 300.934 442.854 301.305 442.755 301.635 cv
442.729 301.728 li
442.679 301.901 442.632 302.09 442.602 302.265 cv
442.553 302.543 442.539 302.817 442.677 303.063 cv
442.768 303.227 442.91 303.344 443.078 303.409 cv
443.079 303.409 li
443.334 303.506 443.603 303.474 443.863 303.368 cv
444.063 304.002 444.308 304.688 444.559 305.324 cv
444.786 305.897 444.402 306.411 443.86 306.725 cv
443.687 306.824 443.495 306.907 443.291 306.973 cv
442.012 304.112 441.427 301.286 441.296 298.614 cv
441.246 297.603 441.262 296.612 441.329 295.65 cv
441.478 293.531 441.878 291.55 442.391 289.772 cv
442.909 287.976 443.377 286.147 443.767 284.385 cv
443.871 284.408 443.972 284.428 444.069 284.443 cv
444.515 284.514 444.93 284.507 445.415 284.383 cv
445.563 284.343 li
445.024 286.245 444.229 288.471 443.66 290.444 cv
443.636 290.535 li
443.455 291.202 443.3 291.855 443.173 292.504 cv
cp
.313726 .380392 .247059 rgb
f
442.063 268.881 mo
442.744 268.701 li
443.767 270.214 444.673 271.825 445.327 273.527 cv
445.425 273.789 li
445.832 274.901 446.131 276.051 446.281 277.236 cv
445.936 276.985 445.461 276.66 444.973 276.39 cv
445.111 273.01 442.063 268.881 442.063 268.881 cv
cp
f
441.686 296.178 mo
441.943 296.661 442.038 297.2 441.88 297.731 cv
441.879 297.733 li
441.595 298.676 440.572 299.267 439.558 299.073 cv
439.561 299.058 li
439.338 299.018 438.964 298.883 438.535 298.661 cv
438.374 298.578 438.205 298.483 438.033 298.376 cv
437.546 298.071 437.085 297.709 436.725 297.259 cv
436.132 296.517 435.634 295.336 435.904 294.434 cv
436.006 294.095 436.224 293.766 436.5 293.512 cv
436.512 293.501 li
436.893 293.154 437.386 292.948 437.846 293.049 cv
438.171 293.119 438.669 293.421 439.132 293.743 cv
439.516 294.01 439.875 294.291 440.09 294.464 cv
440.656 294.92 441.347 295.54 441.686 296.178 cv
cp
.52549 .584314 .423529 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 23.0.1%%For: (Albina Kondratyeva) ()%%Title: ( 2003.w003.n001.11A.p25.11.eps)%%CreationDate: 11.03.2020 16:35%%Canvassize: 16383%AI9_DataStream%Gb!R&G=1-+p&Os'JA6_880EF[*skJiCfuFE,QpY6Q5JA,K+"s/[QiV]J#CL]UZ.Hm]m&r6Kt*,>S2pP<)3%ZtlD**BV`28iO+,uh%g4%SZSZ3'iT']KX<hAuE]9E%jU/Cf2clGlB`hR^$122^DU[_m,gA%F#XM/LV_Ne0pA%1>;rDp&p>OCb!8pK9c`P$^Z*fUE,C"97%%=D"1&e$g!("3p?t(5oMO!L0*rVc*Qr3ekd-a8:"-3%1kb5^:!R?[UTBVP#TFiJ?dal1*MpiG%=TeI"2fXYje+%Tf@08(E:WdC[1p%fud&fflg%$i"t!hCl?"1L2_5,>ufdi4P.Qt?,m7&PJ1.ZTC6-cq>cF"D"n(&ML`F.Npt;0r@9Z-*p2T/fS1h;K&6n:e(3g=[KaJs%4ND[8M][1-2Y9\l1.8:ZQbX8:NfD-P!oLBl90Q&$fBPHSAlhtCXM>3_QG-dp-B@,uVWXB#l5*$7TN'ju,_LWo'\Ki1\Cp/6a^e[E%i"TJK(C&mUZ#%>&e.+CkWjVoWQo:WbYWS@1$t<Aml3Z[g.r:+d2B3hX@FB:l?)DoL\nqEl?nKP.Hk2";/4Xr9<o#Vkcb5PTS:Khf%\A%:="M>,KcIVG66IF]UkMtuAD_`?BVS1CH.p`Pn4I2"kmS/V_5p3V:-N(!_`G3o9B\iB[/2l%c(4;[U<N5TA2cqc-7Y"6KCW[gN%0@N](eDI-[s3k`%Dtr.gg/Wo_3BE%:#`Gm57MTNP_4OkDV>%`^5b\`Jm1+%1X_F,DNTL$p(Gq-]n(Mtg'/U!F_K&IDSq'Vq$bi'E%V=(P#mVgk1BAHUd4(dRfNi+8<5=*K&L4M!14hg<-a)?aH.H&:bU4@7_En'@I@89DK\DJK!Us4_P\\`&rI+b'Bg)Td(&`Wka)WB66%i3;lE(Y,;&"2)A4%SoU`#f9:L-KbOT2P:.e%Vf,\&J3cu$0##D%H)\,+g:1`)Vns(fGjO\"p%u1*.d[.4mlVLL>*>/EOJ+"F]*oC%XK'Tb1lIg+]`Rk9E+.nXBm1uA2m'F+92.,[[?i7'_!0D:i-a2B+keK>?9Z/&#JM6KX_A0#*LJ8ejnENgO(if9=Y\j,D<&7kiHl-o%H_[9,D&Y]*:O)Yp=)FG1`\Fpa<h>)S4:cpe*nKmEXQ=_IXSN'N[.,1&"Rlq+#6EB_!j%+5n/Z:%)Ha&f^m9ra?>27#:)r<E3;,IN%*QNCfNk#Tdbj[AM4<e.OQKl%u='"f2CZ1fQ*GaW(e4fZVc3W=4%aG@;ES_$9g_T(+n+[9'K^[P,j,&-&)<![&)aCSAkCd>#2L0\O%L%E0*X:rWVVW`Yo1QE?2N$Wl7Q995CSmc9aG]\UDd7DgGIom*AL[Wk/;ikY:f9g%BM7%;OMSb;eDN",(GPm0$A,>4I6]NJfNjWhT%ps)iL/n)E`pc,#-!JF_JO.mN0a&pAcN&QG,SiK0!O>C-(0))I2`AQ.0XFmiXS;FSiei[`^MY"`0XMt*so4+;0>C=IP34m=jibTo&%N&_r1\QeU.iYBFL#WZr5o7E,578q2f6cW<lE>`[#\Y=nK)oI]DeEG[L\**)TO!//XA8Z"J1N'^XR/Si?VUEb,.P"+p;oqp^8pR&>%>Od-aJ(QgD+XQA%PnfT`3ZpftPLqq8L4WFAX2a7M\YX!YoFF/h/"6%$Aau&XPQ*WQs%YfS?Y.3!\Kq.7ImWYnoTT=N56(>)27>1<%Kcsep5P\["cG.h(r`<6Z+tcGOq-UJM^XH!XB-dLZT-NamSa";3eM$oTq,pJ1ET8H:I/_'r/$O.5qk<JsOao2/\o@i0%Xn*]PR(do%*K)<[,(^FL8pmQ>27T`n,3sR-2S%gW.CF-!7He5AQ`6;G$b.DOTEYH2q@37PhdIKBXrJr%Rnt/\-M8jmGO4"hOJbF;qo>bk98$mZ%HK"C5,Uf@,*Zn_rEmLJb_s@bHdq@-`GnF:*klouFXSE/JaQ(c>[a]&$);um-f*O?OSV9PM@O/2IX:fap]09X:>+7K0Nr`;cj.(JE%H]`H6fcY]NhDh-(6m?ZV+3#.GRfSRrKg[Yi$:7)SD8;d!ml38i;dd?I2]=fQ_2p$H!kJp_L_&*h5!8*Z,.K1s^QXEWpq-nr2<gI%%4T9*<IXLF3qVh.Ai8,"\Upghr9/&uN;BH<)c3!K%YbZ5;<Z!T.c^tK*)b]Td*bf52;(rM:<jB&JEEe0P?uZ_nf2?ZeFQ_PW"_1,B%?U:(M[tN7o)"Z;P'Z)Dn]8"Vo$;,^9=G7X>FW;@_JTPV);=YqcpL-4_+koYm6Vc0B_;nLWa$^]+q++]2OXu1@[3/X@)Se5]/AtgB%h1/cY6k!e>dl<rk)KLTXY9pPA29_:\jfIMN,''+];CjakPC&sb"cln4o>FKW@tY6JUo\_PT&M4g1S,n&'X&(WUpH>T6=ST*M_es^%!HS^,>Mp;iU5/-#<,s'ALErWfRPHgu;Sm`@Kq-1Q?;NFh$o$Ss]S)%S6X>f%P.9>c;T8TL^@\^M%)P*JQl@/1b!PSJQ$%U",:d:P%@\1!'\"@=G%j=EVja!mEWVO+k!Zbb'6]*1Sf(g%0*j\;pdBQ/mq^0W1E)-*5HV,HC0.$3!*=Fj@_Lg2f$4iqr9o\Qd+%d2>9RnrI%2A@`R:A^,J,tX8i/u1rnFY5ppOM\liY<d_f=ZOYt*6rker))AX]?,:`b-?q%A6UI`E:9k?-0@M&aDs]_heLT_9)+QW@;I@F="hK1%6_eEk`/WS\ga%?':i_V90ip'$UL,5B2'p6Z0>>;\eP(+eP%:Q<MdD1BTTJpl8AYM%8p@,_?fFInWT$L3l3N4Y%4c6f1jr&=aDqYu%-IIekG0o9T"`b$pRC',[gR(19"os)XR#fp\.3&AiIS)?>.X9a#+:E;iO]V]AjWFGb36=fR.E*+X@ISu5GC7M"^9SDkh*X`C^(heR%n.u\N4Jh->Eeu<'09OX:-I"_,if$'p[I"UP!_kHX`KOFd6!cujB_Ih(-)G.0V%d.FNCdY_TI'iDJa_*E9<f8c:'"iB^Hh)6TLA6A%bU)A:`*ALK!TH\k=sABl`#*uJ#nnlU3R!WSO@l?@d6s(*%!=)<U19;*_6K:'ZOZ"5&Um;l:a2-G&m%%RpCjaP=917^M>er=!NDJT%3=cam#29cm=-<$[JlFDnVik98F"YS%d^?#R&5n?RSqC0jJ^j`;?/[Y-U3A#*$<J1Q\<<Mm5kjP'`HdYc08b.Fd_DaN1p$M0Sb<`s%6e<q;=ZCpHBQ*1`!CDgSAo]DAXOU,eS&I!g9kb)EZd0*:9470t]]qJA0i>f[#b>a'CYV1b,k^[474b]u99*bm12k]G9.GA1>*:FO%%^R]r$#Vnt'C#$8YnN!2o9`O$N9pZ*'qe4\95r\;Lma/UWm,"</9$>nXUm^^`7"E`rq3*Pc17EM6)c0]30Pmji^ku4>RRYg:5TZW%DlO_3H,\+9\//^-CUYn)J8rDFC=+B%rFR"4g'O3@OPs?^J]LKS[(njuJ`7(q&(VQ<,;+6_Gs58SLC@gJIqX*7o1IGq/lig%qoq#i%a*]?E8IXZoF@brIggW$/CQd?nHm^T><&e6HeK.=-Qfo#ci?%Ma(:'U(AM!'/3\])/3,>nrC"/X8(<q#i=d^Oq8TY=$Nu[kqFmjdV%c=Xb!;>)J9>bUaPg9Hn.2=(_#/ubb:=;cs:k'?3`X-+mEP#t%Higm$&q#nhhi%085"e2i@GZG$mR&jgb#KBrH7Mk;_o,8Y3(J([l%lT2B5;e;p^G*!W6pg:J\k^ZMO^62Sso)/usTK]iDJj^k@8Sk>W3("Rj-*6o"R\Wd+HMK$``K@F4XfAeT1uWfmdY;DS[*jB`"Z37.%XF-`uBd'Hi"Cj%Rk-_ig@Mods-.l#\W\,T4[O`^B..hm-He<@&9uUlSbp^bi>(GkeQmFm@6'W1KC^805k3+LqQQE[`dCYPc1R[u"%g8#:<>jd8n#F.`?=]=G,VKA!nZWY"%0:VgZF6FqAfSX!\]7OOjero%,+QH<7@k6q&Z/6H)Q+^)\,uasa;HYLJjg4F.:ql42miNt?%(F\FDR@_c9]1qlpnJZaJT!"2gI%&JI`bB<GrD`JPP<%7*;eT(ko;hp]Z;fn!-MFkb3Fo(D.gn8E<d'=0@+SI$QI=U;lOg,1Qq=P^%s7ps9b($EPWS`l$6;?%P&s*Vo4>+!s6W1(#a,l=YbBaf3;jY)F-E5X)`b(P!NAY<=)O5BXNoc3J(1ngfXU\0N8C&`*0.\jEHW%;,%Cg?6s/&..Y<1VLS@r3J(&XbOiWNs5AksM)VrgC2d`[.)AaE(fsc=V*s?Ags&kg<eAK=l)c23WCo*_g5u1/pVt8u9nAfcHCB9Ca+9%U@1372r_D7*?h)G7p&*S32Mdo&tdKKntbJ:\g?Cil<'^haDZ`p6C*MOPViQa1X`*meLZ%:B53"@?A^6GW@GHM[SA4h9$O%bUOFt"%>"LseVp/Ge9KgW8\/3c],lMESaJ9QDXK6DRKY>'1WJ,HF.4":_7\]P@q+n+U=>H,Gm$\3,p[Yp3_c!;tZ!K_ub$M665Ic;c'hd<>%Zc"<=>XgnL\g6sij3#GK7]$PkQ'J7(JhF+'o3F[;rfe*q.l8-T;NF5t,\!G"1jhBYVTGF,Uo0j8S]ailj?)m_H!DYH\QOU)o#,HD%lT^e?BQ6/`/LK[0.tQG20nOSNeD?id9"Hl+N?kuhgq&0cF'L_4^=8H_&iMribh()906&OafP0.--_E/4R;aZhMb%_GX5;4*@*&3%%1eN$@CT0-^,5G8T:pXr_paib')-JPOW(!a:F.gu@(P01HQaF'$=VIY`phTRc+*%91P>D.<[$JG*m^l$4b1rSdCo*#3;=e1")$qdM%3f9X_<sn+HBff73@+:e<1eU"gQDAJ*NLe:S,pga>Aj1Q.X8aMl4dmFVZZCE#1Lql.*G.l?RH;WdR+&%g$tjjd8uElR1<!-`-F@jI%"%Sg%gplNN.aKDRk[jJ=OQJ?9W<)%)ZDjq`I#2=58%D!t-;V0nM1;maGU;lZ&hc50,`Lu.1^K?mb4lE+>;_J&;OfCUbOX4]qCPsH%r*iTg)jt?"j)f0R>si2\@;]Khp[^UL4dGX6)1@nB1n.+h;8e:[VR`iXJLJN<Cn_)E_[50jj4#BZ<\>[ZT9o+sfdiZWBr7>Rk2>JY%Xjd?6h?aoV;iGd418KGo-nAqnIiD"XW`d[;mMso<=1h:2$g#co2!PS44rO$]a[qY.B:7HNH'ThChqJEL@6Cs5HHfU"bNl>EI@er!%.o8-9-tBD*LJ<#j]Q;(>bgL>s4tit!Yr`l=kBRO+*\&3Z)$T7;.*]YtIGJfja)h)[:(J=k-=pf532MOno3#Sh1KFE!5gNr\Zc4E2%Ejg@]YIL*g;)-JrYuq]=ednF6QGNA@hCleBU0!62"n[g8M\sT:j8>u6&t8E<b3ZeoK;kJ(dot"]R=*;4F>[2;hD$]k9B[GK1AYPO%]X)p[fH\S-mDh4n@t,a'4(H)^RT8c0/at3)GI8YCNl+a%AF3KmjrD,[Nn(_WCb;+$<r#mA*%/'AM+`^ECnZe>Y,Tt3I=`&7J#BLY%FjV2O\KtU(&I3ApO0RY7cBMX,:,A)gLig5eDi$>;p)X#9b3<+__mspi;Jr+@)s+Z(g@_K3_aW9A[:>-fJGQ&Y1tfpMeu0A;U@MI7%h&'_p9Dfm`Suo-dT#WtjQ.&$>SI#)dP'-AgK"n81q,?\(N,a?bXQW@(h<-)X$u3WN`EhZ5/CA8u2fC!ep"V(MM,LP4c"\'cR5ghA%h(LJnh\p\Ek#?"SB2!/YBn^9&L*e3&4@@(B??-QHR:]?gP]62TVj%jd"s7L@.CU\#9Im&pg1B\*]"\DP([lWhpn!n=k-0KI@.LeH%BRk<K:=ROV8)mHrFNN-tmr[Ze42&>dgJ$l+frG_7mLA^KccRcLih%7aDrK.DG]\:R0YA6&<l<5H]N]g9D,3[^hOiV!p%A-)pp!k*%V7ZT)VrLes3e6*ZSQ`(<ZSo;)\DJ3KX*bL_dSKPH\96<7(l\c7F"V;>J*lr"2d3[qDfL7srRS21Y#9Pnh-obR\C(HNU`Ep`me"C0%4a+l0)aFZ$5uhs=c`*RC>!1/?Dcl4Rb$*iiDkliF1>kI5InM_rO2eTYc%97tY.N0V<PDgCqY,=8@rOWspEkNg\R':ZIJ;Iom`?Q7%Bm0m#S[@p!k&Idm^7AM/:Ih1/g25tM6:"aJV-*bI@uMXI0RQ$:03;^0aU7j+_XWlFr/Zl'Zmcq!0)f2qUXAB$H^EdDbuLrQ2GD6c%A3BhEc]JNGeF*l/P@PO0R<FQ>MTb/U2jrMt]-m-rgO3VXRoUL#Dm,5K2b!dOV`R(VO*g&2[EV:P%k=RTZ9,_$2F-%f"2leb2u`rF%0*^kC&HhdAf7@(s9O!,gokQ9q=fuUbHD$(+.,DFV:4?u0H9:Jacc%6Zje=[:UfC3.HdclT"/E[AT!D9X\SBrB8XZQH-V9*])-CJ+%mVZoCr+^YY=loU%X4%0'^0P#m3uk[5?u[i2;:SjNPSI5YW`?0F.\A6''t<.RgZKHGkujV<H(OL,0D+O9j>FVQ(r?ooE:H\3&W/V/%-F%LaQ>beI,.pS$DtqSm%.(b=n5f7e&k##A1dW_"6X7#._Ksi?RrtKDf'U%MpZk,Y?B=Ak_e`EaVr9L$,A>RGNQMob`b_)`nqo#O%r_.W@oWg"emshcNHI7aYbG1C7n%KN?JUH#,Y>Kk[aD/Kup\W#+Z;')X/U4b`h6rm8jk29!4Bp_c6/rk?K^H@R#Ch>kd6k\dr\`N!%Y\"!on2LMO@ZGFE&ag3W%OIKr#_ZOc"CfZe#tVFNPE>#'*["AU!?a.L<u`'-:+L;AcOG7iBu%55ro&@53]-)triF>9NIM'?O>R1#%@R@p>h9Z1Cj3ies`'G&=TFoZSn,OdXJ1k/pN"(t+"2g2u-;CiW]]6oJ4[Oa++cI6^(/;rof7D`XAV0Wb!toH9V'ug+#.=YQ*KV6B%\p]Vg"fu7OT@#@X1&Nn[_4iu0'sJSV$7ltnj8!fu%-Z5IpiCs'D.F5d9=&MhEQGVT73ShNf6M[)6!i`n8`DRHU-)GCXILn<(oIe+%->9bm[6Bcap$PdlH<6(/H]10d+VZCO&fN&?'e0f`:mV`n:l7el;K8]eBD"!83hCP+g(kb"@[Y*?nU)Y/#XE4aMd]edK-cNY6dTOK%L@F`KR@7mmlL@+]Qd2ABmS55^BE(qToa*lqK-V=ZRZqN4VMk+api-%J)G_2&*V1SU'0`,tqW0mtJGrS&!(T1E<3B-!9BoZl9[DE1%4UVV;P%mJ=^)[44)g2@6Z"#h\@lpjR3<H,p!09"-aD![iko\Z&nGJ#/pI(g&bR1=b(QTF_;:cj<S8s<h#G+45A!)KX^c!A*M#f:[%Xi\_KA=_8H"0)ruUS#>.#Nud!VVQ>&QiYJ5s5>LkRK^p1!`Q)9<$IcgiL8C,9a;E5&!OjZnYFeCYo."<`28?'fC0sj,Lgf8D,t1:%7O)e-)c<@2Jf]Njpg?]V:sBK#LAJ]IRXhe2+Q]5,hidOJ<MX=->uaA"8(%p&bD;-i%"J%*Jj07A$)!qH5S6MsD1\?p!mR0!c6a+7%M5Wh\KB[.i9d>6<*h,Vr-&Nn6-#0dmF:"t9#_o04"'QV0:kD5(ZlifX21ur;%jEEr6WHr)L'/[n8tC!hg`^n)9)RDC,M>d:n][A4%>Viehh\Cug.oF,WM>1$Nlg!)a,Tn;leRV]nGm8/:-4+k2^q4[k<m:g)2(^ijcnaiF3@WfR/bN1,+M@nG[cm@cRcuh`0+Z73Yr/,7%jgYL8C?KAL[A!UulbB9O*)WShTN'N2AcT7I?YH5R5i`,q>D]OpP)j0IrsF1Te?<?K&7tN%"k=N<DkZMpH#K]AmYO(`mY?.?50+mW%c0-Lcd:Wne5m9V=-bc2t@D[J64ir.P0<u,:Yt`TNL=B(rB.KpTUddpd/LqJc@OtoIe2^PR>"tuA)F]L]O@YJ'Ki53S\]X3>1<igr%];5/#T_*3L95D?iFC8$^_5u]Pq<6U$2Puf/H@-JKfMF]DP##?T%;2:1rOm)>$B5&)#K=cgKT"ASbP1M-4H^cT/*J*Jf*UZB81@tm%C&D2Kr%4o?]J?I>dYq/"e2/sZ@r!fZ0-s,.4Rp)(odE%b$snba.j.;tUpF[eKR.I5?0QAXVZZp#f)-eJ$57,T&sg\?$C9$X#SK^e%j?VqVfIUkS(]hY`a;\e<cAa89!X=?A!qZ^!nBX,SaiJ;P"c?fR)RFYKA\B>Q7+drLe6qI<!YL)QhN8?*On+LU`&A%E2el4nAqQZK%^u>V!e_!NU_?r"79>5EJat7d;4([fe-hW('XQsjp$^^Fm=q?iQ!=d(Sq?VEI>47:m:f!f>]jok!+<@9T@];;PqI@*,7Qq^1>;Ps+%d`u.<[B#PfFt-=Z'rU3$-ZhYPki1F3?GL4%JhM_l&[7TtiK@)"DLaGJH77kIQ>+`rUc\9a9\TlX/(4[hLO'Lu,S2f`K:mYSfsieV%"..+YL0>oF#f)uj^?K\dXsa*KmX/;$b1-@poP:GT6U$R5[&^M0M%\h3$8i*i*Y(X(\SN*t&>*u(%EdmBE/"*-;5*3R6(&]+3.eIr%H?>u]@QlJJRLsU$,K;bJ"l%O)/*c5,?Kn)Or-?Blrrg#'`;m?r?3._@bUaU)r2\;I+^^lm%+H+2Dm5j&g)U'g#kU-%:#n7,0"7Xu%^t;CQF!3EGL.PV/'"'HpnK_L"81!SaSPQ7'Q#fXafhBc9qAD,so[&%:U73b-M9K%eO6DI!+30&6I$Bp"BsU16nc2C=B,.C<Zd,?T%YS,"'as=N\1m`l07\!MRpN*oKf?Th6XqWaC/sXB]cK],CW<joN&U,`\K?*dLcJJA]1j+<r9]5"LE7?#r07\a]@OCRUS/<*E!N[%<%e"IlB3p^'d1>lns%__Eg`%NY4i]iSl:A37QFNd@e1qoePcm6@PUpPkPc3V3O/rkW\$4'7fS=_j!O,>K=gL?7*P=4:/,ggI&J@L](%iXm:i#5`$6RN92R#IqhHGR3qT!+hVl(at)PEa',8,1@$\K+(/,KFEQ%42b[NCim!:r#l`.'[@h&cp=2k#7QNL.m'PHe]9j2O"SJ>%&.f9>k5ZTLPd1N3!U`9lVuse#s#R\>E;'Et]PI\7W1Ys%_&bRP,/D5W"$4>k>ZWtV*fO-6r;QHe+d6P)6V9ie#+.S0H/QYf<]13a%b@b=2!:1K_.]EqKe-rP`RO.t1I1]0:[\@Uq/=R0g[p>(+:/o;+kZ/P<,-,++s%XqkcfCC(4GB=\\jhWKfYX7TJVS#eVD*EMnW3r;%f##5Z_F-a0iFIS13/KZN,Z^!m%>Qdm^HOuO*@"-BUhL)fPNkgD)iC7;,lW,0[[saW2Q8>mDjuD:[MI.&RrU>B/"kk_3A$m9AjrSD%IHcjWl!CROOSl^69fB(E6Q/ROHB\Wq,cF:h[40QZBnFdVV*2s6+-_:)q?uC+6fKmmF]af-=d36al]+s*]$d*.,Thjk`Vf1[1g'oU%H,;Vul/Ugp$4&MH[UI*(Bn2B.Oc4RMZu@FE@AufS8.lI^WM];;D3`\UPDs=?Fg<],!W:k57F(BoZc>NGf+me\$r[(CKO<Z@f^tO9%'>+^!=:+ae!=!)%'39C_,YP4m?T+8^YWc5[lYh"?s3lMF0/H@P-Jat^#D4?5jg&)aR41c:AS-XMEnu`,gaX9[C0LBcLP8dF<OK5!%-PmDq<uN!WJ5Es0*$$@,U&NJm_n$U#c3OoFnI60')j0ABa==(L=!SWbCJ1).R)oXrb4Sao7SJoEG#RHh`/r4!Je7J8Qi:U];UVA+%T3_:De"pm:8s]*).sgg=o*VOD'lE%t`HYtQU/fhZU$[_FCKJ6[kPs)*Z'%Zp()HV0#o\HYs)8['JnC1g(Ht!#$9VP5j97t<qQVNB%l\.CF#PA=V+g3<o<\Jqq.gBQg1!"5:o;+uIEc[Gu&r,*mof=\IU5L:ThFt6=W:#nM"*_(<>F7`bdKh%*PG2HDJMI.@;WNc+VkCQ+%61M+7;'mqC@]Z5/@BsRg98r-Nd>Je\Rh3]^a`]CF68<2d(bMR`j=6s/M%$a+Q#tnNZF6a`2q`W,;dF-:#5dYtC=+0*2&!'jjTeRj%NcEZ=Nu_4K=pm_?n#<?\Hbk0C7uItX;sLk5%.m4%3X:(WpL!RIoA2RhjX34>1,YNV5HuWY?G7;9>sqs)3ndKsU2=<_[kC#O"r4,R%G`#WEQ7c!EpMn$Ffm?L.Bhi,Y9WbpKV'EV'iT/N4D[3=RpOc$_.Prn)PsoG`S&)DA'F\_ADO;;DoDh/nHs5dP\q\I*W^CD2'd1H4%oQ3Ed<FSh#rZf,HjtFaeX:YJFH=3<Z5^4le(ePC'GKk"VW5OkD?[nu?KmGV+l\i=O*aI/Be%8GV.pbre/@bu#mN#mudtBo3CRE%9%IC%R^9n$I]-<b4X[^[&sj(sXGBMI!CW%I$IbKShUA`a?e"B-7&1gj&BT/tEt<3BgUS]Z\-+XNMA"Hi:A*l/Xl#X&$C1;N!qI&(Hq%[3BH6gN[!UAJ8*Teu"i=f?Ad1-!79bJ0L@]![\!u[/Db16JA<<i@Y;;/>qQB>>f_#?Qj,`;<]4fc,ML+*i&VB:iV2f$:)Hs$lUdB%@gl7O(]\d5W/YE%btMt/o95[OAQ:30XWeE/c'$mi,s,CQmU;KoLQuE9f+S=j%P37t&ss*++bA-/9TqY@2X-E2jA*$F`U,9hH'tE$%+&l2>O9[]TC_>/ZTZ,]N?QgQl_-Mm4AQAb#GN<9U+IZ6IA_6(DfAc`<$Z7rbRhk6H$birDh9j(5dCa9)>F4/cp%>iD*O!`&<h4TH%c5+(M[]`:UDlm#T$k1uKWIsaP:MJC.7$Z;*TYVpJgjis*@c>KQ4%#Y?.+eQ-_$@#9s6+YSQ)tk?d;MDK;;JCVI[1MCrOQ%cH3M<l%\l%-Akm_P,>uekB^<Z8sLDCRD=4!?hCe?'8/j<)D^R.K@q4nq=4bhq:Afnl^qLmN4J&%-.nDu_Gr<AIh^8ue_C/d8kr8G.P"*?"s%I#mDbV7HgA_C*S3-D/Ro+ZbWerU+d]-0UE8IfeL)K77Os+9&>U*WUT;7aK.0?$Z]45'2r-.0sE8o!-!$U##'.4t2o?\ZY!8TM39$%A%B5L!#KAM56*K2)TT)hCrZN%jN*^4\YhBQNmLcN(gpeb6XWgf1"cb!H?*#'ksoS,LQISTAnhUl'8.>q"Ob*hc[[%[AY0`E3WqW8%S;.+%K:^V1#-Mgk(r01,EakA\I!PMf:;TkZ6!S,l_D0.<?ol/j""a8(n_tDVdGm'<"5N/aO_LeQZK@HC)/',B0-?=_oY\eo8+IAE%"4*]`$#knl$k+B69Tc.n%UY5M92-aPp`\KZ#FdCP%-H$MWW=hh5\gDD55Ms?.%uC$J58b&"5d%obpajWFV-]"nM'On;">dkbQ^=5%@P?)&%]pkcY%^a_VP0;1Q@4d=ktk[)%2^9c_T`-"V'j8%%X@oqd`XgC^-q\.7([t^cV"rph*.MST9lQI=Rs<"V'B6F&T!7Bl$agL%(`[&nf<qGu!T(/>>(Q.j,*@Cpc1SCfPj0nTd9jDJ6e^(0D20NV@P1no$!1AN$?YT5ElS/^bLOUBZhb;@+!6F+MoSGNJG=./'2shM%cWMUaW)W$H<\1g$$IapAlj=.J]XTK@Q[OFOkgQK-$Z&Pg_/b6k)]n'XBolt9ON%:&!X=MY',!-/n*cm>C>OBcAmmqVK5)FW'9fRM%pWp?-LL?KlJ#;-Y:kc[D6^\-ci\M%JS,Yto6V"]()4aE&UJ^n(O7hFP50gUdDfE&P=0IU47;Mf+rEfI#ZJ4X"%]\b<ld8?eR6o5d%ePuUbX<nt7.3MXd(jL"kO2g!IG?RG%D@M!)Pqt,(eZIkLX,eiblH:f)WQ2-_Zod^S8a_Nq%(EI#9T.N3e!o+VJi:-1lrUY+!$Z1-%)Ge[LX`:8m*q`$5n8Q_N[h9hI]FJ8RS4H.EU^%pKVHp.Q*HpWL'!,n`I=h>RSD:Kkh-p2AlK,P-WD7bhW`dUeS$2!pCapPS2l!@B%[\m_ce*;$qYRXj#CG'Yg8C4p6>::UU2n`Ct?)ukPE7#-s<t0)GUBHiNKEThpedYGqdMq!8>:Fl2i9YbLC1!$P31#$AqbiZg*-]$#%gT>EWDD=HdDB^6(6"#srqsS^.-e$I;ojHG:ra($#r?HlNL8!<AXBluCn]670X4tJ$XF2e(mN5"g\HuO!rEgg44!o>kr^mF@<6neI%f!(^n24:u2UttLq^l0sRq7Sfn&K;0,o3:"C@#TU&<_'oJa#>EBPB,6)kpPHt=14R4hi,S((@Ylp!R[>]e))tio03C(c'\F/A_028%C4^gR*lPPd^)H?DG<>m[i+eD:Si2]HW0]"'<D11>rf1GmmAu_(OH6a.hW<:pq)bsQ0!'EP]uX0DKh#O[5+Y:IdEq*g4"8$M<dEEt%I9MZuK(9""mSi,joS%'okSeZA:gt0c2a%Cu#XbeY.[a;LPo9K.@G%HBksf04'ZoAhGjSV:_kT]nhDob\,7tq:#@8,(]rbo;4)&XT%F9BqYF=eG@^:%_"QrPV<4*5YcZdoiS%,B8O+%-dR=qF!5k2E8plD#!Dlfo3[OWe_o68r-A*lCk2$;VQF#JM."gS56Jpa^jnC$uu7%5Ma/*s6gWd;B]L3XhK41&>dggp#5#k.r89V->;rHTKe+QRm?:Zn,.@/GX2Sr5MX4Bd(`V^IF[Y-`eld@;HHriD>M;4ii`U)ak<l"%nRP."/\UGQXcsX,HnqJR0JV&iP"Fffs&&-QpW/)Y9-=J$#X/[o.uQ-XfD^PmoWQP[3#^'D=eB%C9JgLe`H+s8rupt5c.SS-B>5-d%H`3^*@JkhDr4aN@gV5?ml<*^dk$jieRgsc@G;\''NXrTH/T_X\oE*RJ/3EjOjT8ic*s1R(%oPI!q!ER`)ZRui0^8>cs4;C5&sCJ-%j>hpd(s0E3pZPGe`DeIuq0+^%Rq?#>:%L;+8T1$-abp,i'>!I<TXr@+<6]o:9")KJ7_^UQ@/fP=R's>7,(D."OYf9#f2^VJk]YbL%f(%tDJ)/V,62J&V(j)[X%X:0e(QREl_JrB5/=0cmXYQ2eY%tYU1Rb24d9N(;9X71sHVK\q$`bVFR[H;*O\.X*G(6.40r;#D?GAFa%iaUo(D+V2d%G5>'Ir.nTd`f.`-;=kns23FWneR;R4rW7U"RlnYFF,k4F?;%"\jiZ:]c'U$QS[q0VH"'9W_)on2=/BfK6^)mgk^ui%`[h`\U'^!%AOeMVc(gJp*f=/R*\3^B`ASm:9g_UD-Ar7X-(;_eRBAYHdZp\iI-g!</pj\_[(-BRpUBqmoP-OUbuSt4]Nf)Pp;,#m%R-/A.4SSBI4LYGf6@Y_BAkd\n@5plchppSF''Q(s*IF:EP2MfmH5=9*YYdf,Tt=2&(U&!ZgNb;SC7LJrlfL@/XmScmeM!b>(/ZNK%QW\@HQ?/_G)1`p%_ZrL68$Dl=FC'BDK;22AWT;Auj>p(D5PVn*qu6-'S^rRUkOsP[S+XJbrnqPgEd6bmHtQs^@ADGS:%!@HT/F</%gO!l5T=f9;DBF=Qpi:;#gD4eXHKhW#NcWN#-IMSOEl5E%\+<8[dGF<2c"(b`_V2#km-PeL)66BUVtJ5GD[uMbSaK(Ep\7<AWmr.s%(5=m:I"_#X'X)>2:]&W)qq&FNBlbL=N".5o_9)=arJ>ae2NF=)n*Am.&)UGhU'p#WH"gpc7;sF,^%qRP4DiU)boTif\,CGfpH&;b%[lp]"et\4igN[kUF&?'`AB!HO?Je3g?f-cfJ$8l\qkANsD-VonAd0:5*^jl:nAjDRdtdD&*rpT7puV(5&U\rp,<G$.go55ghsZ=J%S+hXG_hV:U[^$Nn?X7S/g[:Q]`g(VRZQ$("&(^'M2SQ<^2'0Jk)r97=:Yn7LGI>n;\$#7*DnUF9Gf:ns``>`kHhY9lpO7DEWV9Jc%527-]J%6"!:EKF!pt,4_SmU09'lW9kf=c.UIQ1GZr,QFC%)+jl$*c@uYetJX^g+Y22No3:dIYIA5b!#N(%6"7Ze]D5[=H!RbK$ZQ%)r5gI*"@,s*tMHH)@*nKhD[@pG62kHq!?g`+r[4`ep$"o5&XZgpV'P7:PLARTdS]lHUs=GhL"_9&FoCgI_Fl\9%JCA3Aes`pKg<n%Xka6PSb5cg*6#f'^JHR_V6XR#h`YrBqtcM$=+8nPhgE8j)]R%?gmRi_3WRb0@&uS<dbM($VjEHU5OT]_mW?1XqLp>c!"Ah>Y.J]g%W)S8<!:ViL^g);8N0UsaQ+;,(d2AW=l;!p3hC%c=4$8M:Y=BC507G`^XbZZ:hYGnb_9pD\\)HXBr@#6:l2B93nTF`7Z;Pm1St7Yl%5C&eqbqjG>?/>;f^5euWn';ocn(uX@`F.d_DHo:Z!J+%\$$"`<V;qA!56`dXf8#Dn`6hcO"li&qRX$!R5J=&0=b$:Non+Xa`:I2[%4/^Q>iT]suD/j;Nb\DB!K_R78UUiJeaa)^0<`YZ]3\-QJ\)!sE&V&K?M$8(;mD]`Wa.nXeqC)+b:TH$YFi#Up0]tR3RbSOA?nOL3%SfdBUB?s<3R,.G)ST"&``J[o5m%/[3f'`RDbCF-NiS>O[h0AV/c!'/M42,U8+4fG9;aCCIN_mW`1crdPHQZ:?#;EQ4CQ6N<k!\RC%h]@R4PP%+8K;3)XGF?26mPd'`c@[m8"P;HGpmBOZQ^r9G0Md;!Ie`HE$sK[1e_C*P/jO*=Q=9/B08l>V4c7jOqE&]XI^7Osm!mck%XJGH>=g]pBB&ni\\,#k@.@ck&m+hjT)Jso7GuXf-m0r:YiO_s3HM-5\FRe?fd_SY!A+[p$+)Hh\iUOn;6YQ2Y6.d'Wp-;roMq4qg%G\t%B+Vh0E88.s3IqAXq^rSQ"]Y*f2+$=q]s(+'fAa5gnUDeR@r@gE_"pi!":MgH[IW@U:oKRi^)rLNH9m&@V"E`n4V:"Dsq/+Jp%?iP?nO`gSX<T_N+TTf9Ckb@_Gps$-HiMgs)!sHAg'HB97Ir'MENqW85oYpHBI+GJq_irjP^#o-)Etp%trbM/ci6Fo7F\?`FoIrI^%8h\8mfX_h,hZrIChliZ/j0-J1nU/+!`4%e?`M*,T!rV`pbP!]&EBS.>(fN;UL5e[NOM2a72V^?m(FO-\(uLAD/Q,TY16'_X;7Q)T%Cd0aK<9te45&KgL;U@*g%FkggZH&_&8Urj!;s2FEaXBY*-jjSr\sqU^qeJ;gk<depnG;1Cpm-)c<o6QSpa1Up`ojCuQS:oj)FZ#Q%OgKUl&32N8./O=V)G0TL$(eHdi)um@lcF8/)).<$AI4MrC]5)^#L374Cr(3BAW0c.EL<.oasuMo,#n(\=_.&-lPXeXJp&mWWEH2o%&L]B"TCnE/>LGs#FE*>=T4A1dP<g'(g*g+(1@?&PoqkS=.ZAXh7KT5;Bq3Q=Qo3+6UO#,=*%+iNdWd;d][l452-d$5*#lncl,F1P%(leJTq0%opK7HI[rd5M^po3k[edK=^D2c8)T<*?7hE%jW@&ra3#%Mt(n9T"8?2`2fhqmtP&Ucp>QpTN=i9Wi0bnoDhFE$1:J2$(E%NmH;E>bNTn'O>UZ4_7,X3f`Qk%'h35;t%#?821hTQMDqDo7#sWASp56(:]e*ZYk"M>\c/Wj!S3nVLSLpSWMM"F;TcCN3`E)N-Z1r%]mH7e`ONDOmc!G[F8aXfoBb?(j.4uUHGA>E^%\/6DF`"phmo?ec(p!bA`K3H_.F:c%Y;XaO*%N.B;9p))0I#YO#)>r[Y+;D;;HM9%m3q_QHN_a^mWEApkC!/!TPk_:NQ5+=SaDd4T9:kn]=kKD[s_D</>0>?ouFPBERZpu)r5@A8Y`1GlLWE\G0VTg)%Q<\,pD[d7^Ue6%eUA14pX#<Hmbce_GIBSclYfILe3>EN(0Xd8JB*+"If&s)%=QElNSf1GH36AL@Q!nm,XhFW4?%F*7G[KY_rr.)hFVCG`RD.Hd>PU1%&/\sFSCl]&T'egBCbO0?4LQrBfLu<3n))Zl>>jKPo(h%*CFK6*]!%n-l]j(^^2J1G0'H.N(YeCKGsF)Xff>FY/fMDpc\!@JhJ6AE%DQEkt0>A76/]8=.b2qG0e1_uU0;>QZc^r"M2]MIC=7>%fl_=]>\@t*j1(IZ]hgj_?Zt@J2Nq%5S)ho=Aj!&.V8F#)]>R=cpe=Y\J%[roUDGWSJ`cEB*ubNE6L@->L@EZnk7N0-mXFb*6<NY_='@c11i\+AV>?/Y[^4#0DpoP\4Xj`PgRht\>^2BS!^]si1e%V@ZfDgd)I%H>@ZhcV>Qen:`,Ep%u/e1NR'6&J2D,amcg3)k!NX5P@<)Eb.\EUfW>#^=8;H7/Y6[8,)$*nFi?Z&e+]FDdTj^T@_s?m2]>F*s\u+%)SC?<nr?gI??lM+<jA%"\NO[I7/[Y3*H*jRe&L.Oc.9AIp%@IZ&'ksMmn`[BD1*ABX"X0n8GMAfoB))<6=ZqI)9h1%:\A?JI2R]B%?MGX(GIf0?@g.l!2P47@A`["^Ce<kc/KdI@MraWcB(UKKkhBS2eH!_1mU.R2LM'[<b1CspYP5`Rc`*S6)7T"rf&g_M>?uP659D9J%F?i>9:I'uC5OpF)'=E+,<rZb"h>QT&RIB[(diZt<Ci==S%ol@*0t",WU@)SOB]!]iS'rWM+)Tiih99M%h)O-Xf!eBRcDu3Wj3^i8%=RS=URaO,A+5_joVs@]Yhn5F-If$;F0W_N>G/%R7rS[:b"4YHM0#kKiQ8R9`m5JgA1"k-02WrhL]lW`eMB?ZJU9]+&J%2?bDn\4"%`6Du?"t&.fNLir&D!YCh429S*I_YOso.\SRUJQ?O>glpm2CRGMlJ?bA\-6N?ruS3\6,`cl;$l_ri053J04/%W7/J)#/ts.8:<iXt%G5$`])^YCB8XquSIhJC0HghE)0m&>+5/3(la.:Jgm8r2K2=lR0o'XN8L<T,/ZGXp/-Tb%1Zo>J0@uY-q<jYMph'4_LoO2KAM1._?%[EHSOjlLc$:[]8(k.qTCVl&'eK&%SHIsr\fs3nH?.RCb_F_;(FNd$iuE\Tr@_K;8kl]/UU6ZGkq@>\<ClON7J*X^/0o6flQ9aP`g%1C9#P]5Dj`iTomnMnP\XNTM6RNbE71mHo:LHUJWpF&\r$YR5buoZQ*oGN\SC^2KVj:9Z"<hlF5Th_m.b?t<TnR_Q4)Nl'h7;B>o:%6;6RSj.5qOi8Qom53t472;Xb#k:Ijh>e('I#k!:>G+JcQMN?0(`>bi\TD%.0k+.uTs7Q%He?>NRZHVkcm1u]d4\1).TH8H'asBWr%2THp_0CPK=n*N<LM*Qd^pruV%o1t4F,TG^u]*hNd^"a9"j8FFOp!S]cXBg<.Xl<^THt\mc#F"i$cTe8og#q9SCn?A*35,N*[/W::%n\5".0FBMW^!B7EQhA2\-gl"2Q#9p:QZ!FZ=MEb*],oUkph9P.&aJ'3hRaRGHD!VX^AsbW"&+h8oIca5(kA8bhV%er[,&t8qX?E8%cYkEn=[R0Dj-QfqAS$@fq8h.6s7h;]@N9dPhj$'_HoeC!]JB=r:EH#g*q*uogt`7=^>->W?9H!4IeNPpA**O*HF)<5O$5f(!da4o%p@MCsC>Ko)fks#/li$:Cl\(p[GgbL($==%)IcG#,1Dm">1T/<uT/KM&2b99EVbS^**5A.f0R^I?qtU"%\GrPsh7pS0&q'`,3_$1H%%0N(Pj^=S,#7#HP\)2f,p"O,!GW^;"(:j`4kHlFu%0.7LQ'L0<d91mAmJ]]s>XRP&GQ6O1*B1j=QZ;'MNi1!nEe?L!\\g$b;'#f;%KQ.lW+$]["4pk=/o"rZ3Gke^8`ZBlojMCHO,&DiYEH1]^LobsTU&43B6$RLdrAsf/qfo;\PaAH0M0$*iUPfB+nDmp9GrU3FkXW9)%[jT?iC6n6Y>L$XS,l,_Y"mu%[hecTT%X4Za?Vg'6FnE]'.gP#5ZeP5N.j>cFhh$''p18<TELK:4Nurp,9K&YuK+I]2PitWnh-]T)%D]Wc/_ZbX=kTlSaE.'671Y#D8`^R8t`-[i35NDlj`FHL4IX;)_`G8U#@ukPE]!)8Xb<*8gk<6EnqO?WbN2LbFOTNeAn0n6^dJB.>%k3r*47YsFa";+bLMe;8g_W\t`Qgait*l-KYeGX:@'!X_PBDWB-eo7b\mJZ8El^_F,4lEEF:sZiWP)P@*O_O3J`nkVr],TS\d<tG2%B:Yta;smae*c*_uP<hbaO@/U"_&n:Y9iZijH4YJ3SnKY]R("$Jn+@TTpu+/=4Dd35i3IEjAcLsmq^#Fe0B)0mqmGY`qRsM0dS%5D%^t=R+Aga?*?Zi*g+P=a`gf725>G(B9#O;m]n_)<7/#R^<okS!3/_IIr?ljk6';s`ZD8jn>fT_:NcbKH]aM2Z]@aIbggnsaf_ePf,%g=uGo]F"5B]T'D<j1?aUdMcKjE.90_oEOs?_i=NTcH^U!]lq1igkBW1^>6]O!2%Xjl.>glc+7>#r+JIP:Y298/oJPd^AGX?fkZtu%i+qX83p=5E7aG.;@pWu#Zhk4q-)VL/r9I!]#p2?X(8"=9DT7#6];O$Cc(bo*3g$]"d=_,4H^e)E`PUZo`r>rbs7?\dL[]_6ks"<b%UT<"-dV'k6#,Rb$S]#hJ)S5'SVpdgU3suJ&q]cT3p27<G:2WR)ht$_Uchh,Ta&0Ir\rIj)[b>3BDK_MA/e4=A2NOl.J:hkTa*Yh5%"gVLIMm:[D>227:PS+ppg)J7t$m0@VnM#?INqurXH=qG#lF'rYQ[=.fJXpnH7]'DJ#^7lWC3I$1#[LbDmA<sAa%l(p/5+d3-/%dZ%r)gS^;O3!tqSV.,k/Q$L*GB:!d[V^/CNnh49+RISH6/W,kT8?jIt.$*s5VcA`;:g\M*j*%o*KEh_h1O4pDDf*--`@8`P\Sa!"V<Z%3_40iVt'%<CY*o[e3OO2l>adJKa@S#nOE0Kc@o,sIUd]mIU%Q-@9*lWp8kuHis22/LXF*)lT-=G<$\'Y7U'fFgk5FQI8#3ambcT5%IL0A/>4Y\X@t=T`ftP/sMuWXAI2^`WcZeBTNHa-FnWI3RS%rMVnXCVAN0a,-%Dqu:+UIMW0CRo?gCHe=-<hcC^Bk*cit@ULjABK"%qg%M`bB3`O4?/f^e-s[=UPrC7W;5@C.*^u@,PS,1S*fg,%OS9Lb-Jk>#>"PEb.rM\c/`-DMS5Qf2K(<n3!6e>GlY9uZPAM;DOc=!%rRe10%P"![(`o39dFZRF(;#C..ob820IeT4hC_Ls`Q+0N3nO/Cro$S_or*&s61E1kT(akNe'3rGXQH(uqUX3$e%-W+^)mHacW9B1%DV].$mX0K9>^t9&&K1=%LQjuGmkc)R8H!`7dV7nAR"JWuD0aTMESF\cS!7V?*ZqP.'ZG*V?1%OQI)OS+)[#aSd]IcJN^(]X\',od%Idcuk]&S]d4+E<<rapE18N:L,iQKWP!5R9`H\oGu[oqjoh6a%\1[@Hheo/Yo`<H-\=$If!qmUYOfk=X@:2a&:fh2"oDm`)`4LY?;%9<k5")XI'8@j<,m%/5"TVS14Aj>kcba/qS#d;MCdZgL8#W4"o0`gg'W\*$$$GVkp3j3\Y5"pNU_0[M7dkgU-d.'%2nmC/93S\>.W%o\H,qH^D?):UP74QC'aOs(kEAFNhY,ea#ln/t*!=(t]^eGXrE)"1icu4j9B,c+Z8gfc"4il?>tI`)m+#YW#%h?hs&FUJ\e(E0-TE%;DunfM[LflGVf]He)*XTCV5-HIkO(?JFX\n5>nq[?QXm1BlDYHEq6j\Bas^fbTDP"\,e^6HJ0/*RcVi4_<JHg5YSrEDFnm(H/s62%)NI_#3>f+U]A`SLfD2a.'0;CN>e6gsgMX!SIMQaHSg-%1SX"7gQ$EERq5cscbdeS6.[n3`"m%>&4"'0g38sp6GNiE*]&UOL*60L\%/0qNUUc5cb<#o2/]/6,MSE2<[an?Ibg+=\u>]%Bf[tO/=ke&c9D#FB<jKIM)FEFk5,]c;6TB.g2`<04se"cHs!fY9B$:RuZ(q.9W%k-W8D$omR_S7UHO-g/^_P_>R.WVeb#nBjtRg&>,JWnj_>f1&E(+uXApPYl)Y_.>X)oG43o)L+ihkAd*=7q)\W07QOD66XmL8%]EC%jJ:27iS2b+g:]g/B5o\DJa5NqrKc-<"]7RpP<&h&H?I;4O4mQ[Z#9kBg<IloMCG[nXmu<LYmdRXTb^_k3VA-Y96c^eW;#->GJ3E_%d`S.f!=c'e?rj1,h.h^NpF:t@P$q8emA`7L:0JJeJ@ATK9!-M.UXIaaNiBH6GV'Aae1Hik.X8YZ0>()Z=f0q<7^pne@$N34>F4SL%5]E?^Xkp;9)cF#B`ZZ:$(cH(mKW/%N,OD>aXnLu(Yu\9iU1So5nT-r6?tP_h$(cMRclQR=^3;S2qr2U@1uOp/J9Z0u6IVE'Dhlqh%89JdX&#+Hap:,=1\_D$'4"bB%=g<NQ>YJi#A^UOI/.7*5@2INjN8e)t+&(V/n7&c7VXdd:""g11?+<?://H+cPLcqnQb][cd!;=t%la?*3]TV#A943<1^..\ElM"N9hTA+(lBCPjbrP:^ok`@H^!?3PW#d!6h\ohH#punqL<m!dJkG&U7SV\NSQ<L5>W#`&m%*2a@D!KL%q</g_=Og/gRucH0:n@?XK,4#srcZp<]A6^%Y&!4ACSQfGg:>4oV4Ich+!:sQX-Z[0gH!?d;Y>)::2Q(\]nE6*\o&$nK2H7kFjdPX%d=l<9b,2jd?Ze7OjJ/`J\'ZGLcIDWGnEK\:g/-*kQ,>`8:77_[(&Aj)9]l"*W=?J+/^.hOY&j]Q@rco[REjcQp:+&=)i"6lS(b&=%Zc4uT[7g!p[WXZ;-?tL<6<`q7<bP,AFOqPmWCNMU-e(q>R3guOSYrqq>r?%V?)$U4S^D6W1S;53rGaF"nJftlqg'=2Df3S&WtE;U%o>0aSJT&eWK7Oodks"7_<KIqWrD]Z;16p3\*u&UB0%]jB2C1-A<bdZqVaE=@H,Kd7-<Dcqm.2DZl730oP3J8*L49%3.aIDj&AGXq%,O8rh0e/b\OOFi1+JCp=JQh*HYpb[0T]TgZApHO5]$+/]D9=h5e(Ai@RVU6S")17F>gMdEe#9CmnH;m<`Q@KVOn?,`hR#@?Q3k:N%m2W]i]k>Jt"?2C=>k*!i?;MrC\B:';eRM<%N>0DAa8>PpQW5gIr%Dil((CJ@E#*1-)PAr-Nomk#e.]lnmD0lc@OA5:#QfR&fsRnR%SuZGU)IOP0T#?1QB^YlTOEE>Gf4=)g_eJhtC]r5()G+I"gUN7sCKGT("'$]8Rst6qq/rRgJqmL3dC?5X^T.e=6A'bFLVD8@HT9o.%5WeO@cAp,KQ9&$K&>c1S>!:+)kmi@1c``dVM/SV/k+q-b2E%&@;Ie8766oni6$Ps,I!3I;f_!Y<(<n_uhUSP4@5c%1kC6I+0fXaE%)$5kYLC4l,OR4@/Vc>NKO'6`*EKO)RbXjf>UpAi$?s34M]p03DHIGmTS=/8Vcn4K8G-=g4`=9t"Lb,%A&nQkRDQZIh5@n1XC=0"D%o:rp@Sq1K>Y&*=HBKF1%1"5,Z9q&guVY_"@oj"*)2R>mVOIk]5((c8$U)"BRT'D(Hs3l[M[TZ<FSTEu>SVJT\o^5?=cGq;.ltG_X%ZX>.uXc+@R:G,u145:9@mbHL'n,Kr-rH`DIhJUqPru!tl1fs^1Is:=^I>dOKH1^UoSNEmumoEJfUHd4WGd@2BhY>?H$"**pnE1,7%B[DMfpQ+;#Y1TrHFnZ3&Poa7UpYL>sYm+PVXO>GW[jOE0gOif0\Q-,AcH#_OOFHVgHL:c_I\ECYDs`2?pp3b5laFS"'PFpN5:\72%Vk;\t=R_O^il8sha+&E-]UPtaq5J?mhJI/fg3);%:>;>kl]9n=5b22%4hUg]96>0"iR=JJiC<jsTR"lm/\5j$\+Y76ms3d+B?RF_%&"`fhs+_uIs%.H(be:]OR!WrRM$r;"hIQ$%VbZ^;q>0U?Sb="APUiHbWkSeB@$:7:Y2OtP<u'Tjm_b;c%4HUPP8$3o#J]/D"#RA+%B""?HGUVC'U6th^24:K"f0Q3W[?-JAT2_/*fZOUc.g?N"e"/Ea94\i:4r9!HOCM6Y:c0i>C>fhuprSJMkEXRgWP-2XL!EPcQCQ!Q%#PW.<e%.Y)is]\;9ji]W`Mhc@q*+]\K82Cl*q?`#'Dl%hYMokOK8TSILgN:@ib#pp`JYW'0DM)O[oREo)c/_8%57V7mHqo,4RA)h%>FjX<A:*'mQK_fP/%GEOH0`"Qa/G<^!cF)jROpIQoeVm#AHCe&%$(!^)Tb!QkH*eq5LZ]aMQLr"%Yd-*O5A[#0Ln/%CWJ>^#!_5o%W8DBI[\!\5!MMjXpa__t0]PN_C[S9,G0sCfpt#NG92&hCIZo0A:p)93=5^QZ8f0/]r.i35j5iYt+A].D37:Z>g`!,4q_CleOD8X(%[>(6$GPk&ti%n;#dn[BNT5H.N#T,jgK6-CpV2*&N_JfQ-1$l]La-PaQ4mDKg/jCm,+.%aOW5BV6ecJp_<SJ;]^e.F$Nc3GVe$bpn%WL64`<ZU)$)4h-<oRt,^'0,co1TtOt!kuGu%;9>)%,VMebbtj&pHXj$Sq@QT_hKL%DU"t4*sR=o[U$4F-usu@Z[;jJ>_$/5eKRhL%=ZV\Ln`UaqFS(VY5-m4A^eNb8@mI"efT)"K9#:2jl&77>d]WE87PjcZ0aek181P+,(;YM-!aY?DI:bP85jQ5pC9Cu"g<H'?HnR:#%:pY\D:uoFq9$.4Yc-4/CVZWAe<YuSQHLu@j7>basPg6>F=@LdkiIq]W%=A4fVSob+>R;"=;+eKHI.\"7/%#Z2TX"Rer8][K'SN>+%<s=%gPd4j,pWc,uapk3W"%"(3]aTW^RF56mYjiTf,#b?nCC,2"a&ka.Iou7LE":%RP6dWAf'L1k11_6LcOhr9Z31p6Vta=8@-I_e%@+IN#K[7XA6k$FX_ZN9b,=JtOK36iNeHG6.aN.PQAXN7O9dHh-#(T5u3gO@-K#"70JVVP\263&'J55WkLqnfHQ!:XY?r<P8,>`sl%50N\8!hYtkDQb2`&\sOu)0haN(V.Tk-4ZIGlk,6U9UV@%+qts(i('7T!/4&VT_<c&+"%st$jM`-n<6o+>%TIe"s9)GM"@u=%)G&P%d#I/NAO']Yeoi`W/dpV:MpE;a9RM/k&$kS\RZA!R"[4gG;!]lMTFsL"5(eKT%r@G%^aQu$J1H!`fU;$_Z[b>a5T.WYf<Xq_^0"k&%UTUl?_FIlnL0O9=&saB-cCc267EtIT%;Z%Iqgqp@0*CV+;4.EDk(>pLA9`[gB?NQ,JO!Y3,=#+pT^Y3*#a>#jQ([:H5p/HV;jNh(%FH+bU/7rP.bSQSDC*fN:9uGIR!YdM\""IG-=]>U\k#3j-J?m*+I'PGk^sH'=Jb#LH*^2]TMEpGYJj:*&Z?%V<VBQ]#%t-JsEi@13%^^_9UV]F:Cpr$C<jV^>a,o.$u3KJ!RK-d0_*0A&ra=E(BJQ;nI"_^c*1_VKR<#l3uE?#`NYe'mf"0_p$Q(T/U%G780!]8:i8?dO7%gTsW('+Qi3fF:O'!#!3A5S8=8a3ouuhgL`3&8VU!@9OPR!6Vjd#Vot_LWi.t!k])rAr"b)a:N&s2YJY3>HhsX(BN!&7`qsV[/t9$%1mTSVUA?=F5,D;[bZ?:cWKK"Z!H9sd86Q)-$/DDC\/'%+^rBP2Zb.F0QV1A8>8jGoYls.C,>S:K*0gMfg=2Hro*Bd]*%Q!IW0V"i%#N6k@5qR\h;tGjVT`i)3eBZ"3@6<Zq:r^_`*1)RWSi2Rf.Kg_""$o@>&N8i7)gZXC,T$;5!RSXuBEWmOgD+6t'<EsRJU/%"`Bh-;%;e(C;,2WGH=TN[Kbs4Z&1Jii&)iIsQ#n)j_fF7[4'H@A?%ZVegNc1\1!\"_;']B&4_(9#:$c^'HaP4S8$%[aa5m+]od_PAJTVGA<%q?2mUc5.YC,[\lk1(Wb4Q8hE</.n[@;"]G!,gD6CVJh]4j8"#9^m]mR",^gqS3k"SWZmX0%^ZCa!"P9^p_\?W)o=oX"A6INZj@o6%Y6cZZ7H+ngJRd%p@[V00XB`Op\n#>G:c$c;(u1JFP-P's;8!a,bor(>Plr]f_+Zp=o.8B-TVK:^OAc<<#<kr6!WI9_XC\);n;qqe%:0+.F)(Td^b+-upOY>)jolCBq=5OL-Q(q9k<0(R/`*.<4`J9[>Pb&#TZp6BDoD2hse&8([X^>+&:`J>)]2d5Xi!06$+O:D1lm<EK%4pj5^7Bj@jjokU,TJA_?.cBZEkQV$L&29RREE[%dM2u\2=TOO@KaZTg&>0s,mCtPoIE>@&+,)Gc?@Y$9(DNAI(_L9/H@<M7"+CT(%m@[?+NF;s]+lfW=6t_gW9FnS`-ca5H:!Qr'`F)O)DVBZ$3nT%!!1%Dn[<4%9$$mT4i?1%]PTZ0K/93lja[2Ea#r9gRVJ;<XG>ub+%cp<4<nECpmAYX:@&jle$ih/Y.EX!QqnNGQCMoo;Zj'!:hO:]#@p_LfZ;(DPQ!a*?^.7gk!J2$A9@$Sk*"dd=).;C^C7LUp%B(CJg%D_kW]N-0`sFrD;7/CgCKc^kkgT!F<7)-MfZj@)X2<R_=D]i!-/H&^iV>2'<P5\7)@pW3Ja#`hRXY^d]Jn3g"!E$Fe]049-ZS1G?0%23XRe!sZUTd.Op^Yd1uZa(5Og+)nTOP^unq#(q$&&$"@gQF/<;3a+OPU39"m;1L5b$]8g^)B.hTpO,?1T4Q,<J7kUU#KpoZY2HAg%MC1Ig5^sWs"lr!d.8t:OKGmeoNg`I+"/jcq@[j1F4YeE<PsBo&aG@A</9>YnDMC_*&GJg<S-:'!80Z#/&6%<$WK(C0cVqLB",t=@%!aH'T^-RSf5[T7]].)@+fF*c=@3;&eJYicJoMs;Pc]hN[oU->Y]oSrtoUeF`X&^K"@.L/SN]mLO[Y\E.E`kZL/hjp>1fTsT&QOIC%RZs$?\m?.@'8D>b3RXF2!af3Y,5uT/[0;_eE#G$i@Mo1MNc[PjPb]M11>e6t8AlCn!UKq(5qM%89Kp6BH@gYmdj>=J2_Y_4>Cj-E%3!=p?/t5QT"LTh6\/<C?N2s6q<a_YsM89?fQ\V7?7MXiI)SQqcMa$52f/)lh1=PCafJ6gCkReX0jtbgTl[e64Eb+7Kap`GHLd[Zh%jMe/JJpBXN"d0\c_b-?L(KEhj!\(.;U+4;9/7")]`HG?4=+>K1=f+`0ZC$ik15\f2"<;\i6;X);PH_Pbn<sHFRHWe%Pjr4f_Z^W%%0P*bk7"h;`*cMmZACKUCi/h0ne/k)m#[OD:!m=?NB#07)T$%1?Jp+pPq2WR__\Bn-=9A0*"IcU4J62r.!PM-eni`Z!YaS:4`@r`"%JDl=G,/$[Jk+\c5M/j;U/:\#YUlrO0/-V8g=s1R=;s%7U++Z_!oTh0QHo`2U-pSc1.WLS?r_GKeH+bu3PUN/uI`a+E`XH,X^'?9j%T]gVC'<HIQN&RFR\=/d2[kIl+#m(Ja8^/S>(1NNH)>"iIG8Gm/N$\piDO*W5:N/UC*I%Q(Bp31j0(jb<r.)Vg%<P(4`-32Uch+^i%+Q8*L:#&1QHi^#ZPjL_F3935r:@b2"M'\N7[lm\%JjNqr5;!^3BL\@`J@6<K]802,;h6:SJAF\2D6kLN3sI/q&-`AiQ4mX4qQH9B%_3!G@&d_0.EWG<rG]RtF?lC"X!g@,@'E#eK*pd*=$Y90Rg6=JqWadZMZ35p.aT^E4_2Q#m+h:Fn5Eo\-MRe[T^8#)Pg6FET=1!Z;%(b*dJ7><A!D3;BP"<]3A"jpc1U!1Kk1)h$jYfuc#nU_'EQl3iVTLqAE]1n3"&.8JQ=cG]I`"pR_igMX(L"aEk(5<[Nf:Xe<6=X%!%/o6?Z%HMEb1f,f\0->GZ`'=<U/g#ZI,@]LO2('l#A3p:sDOTKVGc5X6i)!K)+WEl;")cuc6#I,#6j.+@J8084jX.2:TZ$LX!&r9<%_h\i?@F4a,VJS$oKW3NK`e<hC^`4[l(ka^e-=9AKH'fdg:5%!5``>_uM?3iS%VE.C1`"7<mAM.DiNd#$GR`+g&'T0qaJZF:e24mI%_rWBi-o5+Ro2`)GGr#b)Ab`3+f_l;9*s;-LaVjYT":]F$53NVi8qAFYFp/%SprMM+jmo5\^f6@h8T#1:U]d"h3/=,lTjkf;)nj0J%&NIIWUA7JETV:I[g<ftjWKk!'97p[tXj"`M2V2CunSgVu-O381f`YOieCn;P?jos+5.XsS'(A^okoj8]d),8QAfhQbkV2%S"g6)Q%?trQJJmniF!#IdPn3UZ;DYJ->%nh:jTTlltLBaicbneuDNs"KN)/5_km6j*gff+#Od7'ji.k[;&O,G,/(%QBFOB35E8u8J4MX%16%`+HqdKt-HQ;A,K7_RHffY7M!UUW%UOfr,T0cbmo"pb[h9F)E!YY,L!XbSB1m?pnOG/[->IJm?XO[@Xis$]kG-D5.Hl%\b(C2/.cG%OR7_s\/kZS6XS-Vp]9a5-<O_"XA@[RYb9;C&+3X%:$^`g.pSOF$K,mM+OEEJjX+q0@MYJo:!^9[8LE]+T-(AQjH/:sj,PWthnV^1%1m_./\@?-\\Db%:9%^KXlXAk+CB:pFO3h@I3P\`$8o.`N`"FmJ=Pt?[)l3AHK+kVFi&DS?@QH^ZGZiVegmKZ'`T;s9&k6l7UTb_9%>V[a2="1;c'UNGf.l_Q@a-/+rGU0SW.KTA<b!!Rm[ohch(>[91F'<Zn9AJ<s1L/onQT<TAa1L9!QT=O]?@FU?.+=c5*F%%2H#6ii%e-ij[bH_nXBLQOd)@&-Z9o0ZE8:Uf3k[HNmA_;s-W0'uL7C],OHoC7"\jojH8=9bq*=!6:#4R8+^,I_lN6>OZM2TV,.0aNd^]Nr>%0[SW@J&`qc#$gPYKNY5Va_*OP>fs:-jT-YkD/+T!QSouumhXu0TjR'f[!bX>9>RUtQLRTWgs`M7mN9dr7LUh)3/grAP<@om![U*I%3A;F5r9.>F>Cp2h#S\sRBM/Wg6)1sH%)6o3R,rd2^(ocra;I@_@S"7U#tRq\6.a1ZT[SV$lseCm+?NG&.i;7JY%ng)50I"uPBGC7%>&/+H[^^3Z>h^i5.OqN#c!8`?XF,G,-\Laq6Ac*]975N8PK]p]4''S!Q/pW@ZZ1\`>qrB]RenUI#`Dj(P!tl<dS=fXVmo\h2f"Ua%HQ8:<Lr5mXG#MPB-k4du[74;(b+,s3$p#EYVkpRZ6[Q21McZKegssFq\Y+3["dm+0[i,O/(>k?,cN:SkiYo%X$gJl0KpJ3o"VqYS%;3P%PEO2JtA)V_'T_0T9FjQcN5__C+]*=]WW@LYUA><l>95@_<_q4NW%VWJQ!KK6J7$Rf5q(O!F3Yu=<:qE)(&I@SRg(=O:`T^^_%n7GN+!7@:tR5/5$A;0Ws@kPs&R#>\Bnmlm"ct3Hn0Vnr#?C:/RP_%Mg5Te(cE6WB7TVW'Fo/PPl:A;FaVh5r%*2c/&Af][?$J#B*%$>cr!/f7\UicGI!"5K\#5d_^@M@G]qEE=]/J.SkT99B,m:7jaaICVWaFEoI:&!jK_Z=Nnq2R,CEPD^`FiF[@3>$R32Y?L#=2Y-/S%W9.2Qnd25"Uf8t`r@]cgU\bDG./J$DDjCOR!M[F6*6M#Y(+-*ch?H=GP`$C_p6Ge"N>cE.%*fH1k[%ce_nhntd\eFMJL(jXAkIGm%"FSm_b91Igc9SYab?,SE,o.Yh8nd*-qX?hm^0F9%;mI=tC4XSs^]<_gYb7f'b@u#Na_jC?>SJ"ZBAkt.>5:&H%%tBpd/ARugMj\@%)FR35j0G\B2E@QWV1tonk2YC9n`_Y4o\g5uodNiF=#(m]KQoml!pkhRF'6U+jl0V/_b/UBkH\C@`P'a>*S,pMfS/.4ElXgoaraYV%ir,%15Y9t.QsD+P+Gt.J,0BF&k)Fo!42bEV6jo?YdGQ8;"6td[kfN,qC>dIGWQ];`9#4C<JKe[K&KJ._#"@"NNSW1n>\%?*BUG#E%(bbGDDS=8i]iA0$)uUbhMoAkePV#Pak0pqR8RO,MS51N!,b9"5l!iqhR,BT&/hZ`;#fX1B*5*\_!d636VKs-68Am,uOE,$D&XM+W%J-KSN7H/r3S9hM=m-JIaA,Qf$_kj?=69JQ_fujHo@ea;(&X4RSMWokC8tmkV;4cVmA3c#dP!\0BR+s?!!m%PXPV"-(?>M#B8X(c1%BQ@(:[Sht+aK7)<9"oFN:6\"09pFn*U;eWsV7c52PVCVbp%[Me."`C]Wg);dU0AQ*$+VUl8=5U9AJ-nb\?5gNg'6qZ_F]R!?pb6&%#kDO:Wr>[0=;KCej`etnn>cFEm8/FOhVLai9trS<'2uh3"qTjCgbH=_GQT]J21o`$9rJ>r:9.i5I]5Ns1],ZKQ?Kjd$SE`6);7c'%@kjjR#%!s?(b4<C<-AAlngG<E&Hqh?Dc=U<*U3ls&bNo#.0MC1MD&Z'9b3G,+=<Qp4b3pm`4K_g_,`mq(;XfMh:<#@KSU$:#BR?<%U)n<)=UGTs"ZU][AIu,^-cJTT2DfarNbHn1<j9Mu5VgPJ;]B-^V,2K2ChX+UH1D[/0*S1>]D8EL0%b_sr+Gbi(DA`[nlm1*^<HYb%&dUBJW/I&MSmimW_;0Qk7q)PfY_DTSRXQ>WH'Fi7g]ZKsn%8.F7GoH`$jcKQ-pB$aaTP6@p)G?Z-?'dZN/5.mZMuT7/mVGUKCYK<%b8g@6eQ\cBs"h,i(-Sui\Hc3%.DjgkCin1sSdItKg^_@%Z9K;1*l^"5a!DRQ<f<PVUXV[/:U+4,lp:I>b4lCZ]"YiMdL%Cq8#Lq-%MYueoM'He]E]SerS5NKto!AQQg6-5edc(QchqIFofsY_[H%q2)?/+@^%],<8J%#iXJSe7UISL8,#63mmkX?g>b[C.M.(@.@-kV@:%O8ota+-],qLtS3Lo9"GUqCg#(PU$m!\V=QW6FpK*`*)plGH:q<s6Wpe(rm(t`-Xr/:o6JJX?B4h9FPm5-pVLCT[8cdU$527jMSq,%@'UVgAu@Fl\r,DTb-_@aTBL_(>bVaF.pI`/\P.B"(D)d=(>JIJU+;QQe'_Y\;eD7re!"Vu!N5[gVs0)<]L'K=Qkh5E*L>0J8?DqZ%ZY5o?Qq]#Sga*R=4Tu@&4_V)H;Xg%g#&7-s"#(]9`*enHHnRn2VMh^^b8GQ;LObQNGl+4lgBe2r2_>C^?dHSK"&gTjhHkI7Ids*(%,mSQt>b)*tJP?5X!5,sT%fRPmM@']+:s#cG_b*KM[[=3L:$S%d6qJY-VBSZ4l$q5e(>p1VQqs,&R&`%*7ce]6<Ztoob_YUY`j.>.%@lZ=?bB1.2?NAeCE34MKZ5:&,=UuL"QStq5GY>62%<!uY.q=s0OLHbt0$-6RF@O)4n:\t.4mr0NO<%7*!eu5'$Bu9:[kk.UU_Hd.%$s&_\Zp(hFFD>!_bCl43fi'NMH;Mn:A[W%L%;;ZR^b&V*9)HO2DRM+@:Sh<Jqeinpjfl*u):t-mk?P/C7*C52K7kf5ijChCN+#kq%UZu=\4kE*P+Pm?WrK"#me']cUC#W8YGj>Uf-m.8F-kueK&h`#S?X+qd/Nc7:'4u%Mrk0W0L^QT$QQ-W^3oW==cZaouQHYR-Oo_n0%#"?D%.CCjDAYF8*F%qRlKmBK"r^g!r,j/PO*q%Yb915Sm/U+]b;0]U!9`R\MOU>\J"E#\)GYjT>MP[:P(q%*=W*oFp:P_fZ!4Uf>%Ik2pJ+b1Vu+WV5pE]G*ZIs4qX>nW.CheD/]R%4&34,l@,D;C=@*uNW6DUe@0)&EdS0`d@D&%`%Z>\JrC_A-2Yn$$d[=?"LXe64P>%ICVXXAI-13%sN!f9:g*"eDZ$X3`pWq+)g2Y]u+rY@#;$>YmBrFbM_5o4%Ckb>N.:A(ERsX)cd+p.EfC[(7p'\()-.-j+MBNBR.+e%&^<8;A=;#mo10XV=^Q2CbeX[WXoP1V`mU?nrW=<ji@M57=]k0RH/7?IEIeX=cc-NV:*h\N4N,.OE6C;.i0MMD),PQ\]T(U1gL!2h%$Zb*/=tp-RaR_*a$RcnTd)fTHme@<kbk,VQ(Tp6f)4LYe,3Wj5!;?q1JSF_52jR<;JRskdh?RY)4SC8hr^80M"ZQ5@)jlpg^F`^d%jDLn!@5^e?Xs>H9n-0Yp:)X3s4$7f$H]QH"F7BGlgnog=M;^"55%+iB!^W`OU#1SPWL5*iD^g`KZ02`Hb^7u/5ClNnDQVtr[bT8I%EoEp8^0C+9\GSp<s32QQ[)e4gK5m6/7HZ^`d0ESG9M,D*6GsLF8SSn^Z,FKW$!:Zq)G,S,=ec'0$oIB1+2-ej12&V'Dt+EV2MPXf%CC4/^8*V`'9)OWp,:pKKQL<Tc;04q6^dOm*BLGjT[lsR?X21UUVSdAWmf79iT_f_uQ5tWN:c&XlXb")pg19MciUR1C+86$"FH"#u%rQPi?lG/P_G`DGi$bCPXjK,qu,OL@Yhap\\fF?%!F?BrI_k4_&//knQ#"r20Mclp)9\IkmAp?*MQ2h(_.PYa5k89R6UQbFkU3'`q%Q!(U+)U!*?"/6,uJ-^Dg\)i^0"u/6sGY2WLlXeM?BobEC5\qP[0c$BZJ;7%0M9M8[>O>[#e&PMMWXGPQ+nX[%J78hZSgqX[\U=6b%>%Af>;EN(;c$rPti[.q^!PQ<BH,:5\lmXB)I3Vh:`m(u\&i7Td6Qu#F3031O'f6BL<kaenhfFV5(8m%'b6Y+%$Y7&H>rro&+dYQH%",qrP_4/+<2+.Iu%5hsPb6A0/PtT51W+?ig(_d:K#l$;4#AkDXN_DR$!,_nP"S`$'B)5CCW_)1=,'-ol*9EQh>TGr"P"r$!4[-L.%10d#</c^Yt*ouP64bec%g<j?U9fXP__59;a%,@j0$01&/lO@kXKoOdqn*"_9XTl9'X1L"o>:t`l!Q$6fW);):S%)fii-V/2WDf,A%h8i\F:u6$F_p>e5K)Lf:4OM8F\:N/lrFWEHT?f![:lbtc:#MuR7$tO=UqNRGSdFDC[[s3X80o\*-k$lg5RYVKQCEY]'fi@[fp\Wu%.^N;IgQo<t=o4Rgbf#5W<m%L[c4&lQ2=m%TT)]<$K8e*J_fl:mMchcM58GO&$[X$$jU%`g6rR5TW[r9iE-eYdYJ'C0O6Yr?]E6oA%*3_0+TQ7gK'TeLuYd'1o6%BX9K_ad#T=OZp[<A,/5,YDb9b;V_L-L,o[ecf">s%Mg&>)8>(,]A)F6u@QAQCu1q<!YS8-lMb(9.TB%lOa8X66F?6=">@%UgKnip:"5eGdQ"&Ti3i'0'3cUIT]Yt9/Hkg7Hr)+AgXOXW#uq.)79i$=/I[VY#M(Rn@70Y"f4pQp_m!1?5BX3%;CK7nW4)u+03O*U4MkFJ'Y^AJ=(rQgDAl`F$=7UcCI3h6(27Ql:/+qQ]MVf\VG5apZ`7T7BSF8jk.hM,hsu.fF@HGbnHI$_/Xb1D%!mCaG?3VB3?Dl%%ba6^(d%]>;%0]e6bA0QPmrp:5ei@+!ER(%NA-9/.MY99^q$M3K9Q=amelB-mAMV@-o`bn*=^5s]+C0j`&dop,%pR9hEiI)TbC\6]37=<_ag>JZORm!#3f0o?@/*/^LW'2a+CX'ZXFsuurs'%)no21S#>)mF0[`@.I!U-):jrh'lAF"%qRa]\7r7MFp%!:>kar]hiPe^M@oPmuRS`_U(mlurnrB3Acp`4K[\\9KZUhTNo\iofWoGA>@G[T8bXNE+IaSQZ,r28Ye&kj;<\QfB+TRuA[A)+DhG%2B2qJ&Ee0+b_U6JTS2%f_f#aQ*,QR"iSe24o.guU8$,nXOZtT<!KO<X:;6nMEO%E;]mtueO>>uR@3e?G+M<hhLP"2ThXNc9&Nn<8%:C0_q\-rk1di93&1`.3bN9VRSS$!I[F9/iQF2;8r?]_h_(nH>r:6Ib!1^u"I750`Y,,j/*Dq1['\TqX&[*IUZ@I1Oi4m-nGS[PlZ%RfW!,$1OK7na.n'G2@Ub.XbrQI;ciJCS(9:pr:OM3Wj/DnY("eN5i0h?m=D5>m$q#XHC=9$7*:n1?a`ua9Jd4E#Bm48$J0oZP,$t%`,!Y"g(#Ri)`a:/EoE$7n>K'u^_4X:&-c_S^1%$CqUu!-kfJlR6F2&!h]L)CY'Un0@WACfYb0&RmVVZl@#gs3$qhYgWkMn?mF0>C%2puiW643ImSa3SUb:Z==GMYsb;lZ!rEh]lm#Re9ZaEhXL<_77_3QXQ.E7c<`\?X_S@:V)!jCh12!L[=GBU6TiJ]<`F"Y!:*R'Hb6%)_r&(0OE%/L@0GNi1EC".3'e'0]XX`9&Xqk]dGAhj-FF=3QYFuNOj&bb?_P*cF(6q;1Q!T2RW\'hF:o,-qu@\dme`=W6dAEZkQ<)%a-_mqHBG-a=uD:Rocmhmpt42&D%s)cC$WauR[@A6Wjb%]f8C0J0uPuuLfocYZa*!@0omAW4u]blCPdeYP5H^QJ`8Y1.p7=*;6U=F%e)NoQ&lug<HOWIP?qo#;/E:t3d*?=>jQraUce&pE$`^IuVC'jCnELs+CM.smib0J;Z&S9?Lr'jg!d:-C"rXpBkcBLr62^gQ\H?1\%VQXEr#g<FAJT@Qc+<tWEbN]9'\/-$aS*P6fLC&W>h?aAjNfGZrHh7R2D=g*2PSguVfs7S9bJ6?!]P:%j3b$04:'1cL]qcn\ek,$`%3WIPXm;EWgZd/Fbim9\pe6+@/4M@h>-i:SX`_HSeZgM*.3!2o5m"/aulqeW\Cr;1W]SO0+S'ACm#1qQ/>VAd['[1=pIVi2k%3@Ft%`Ej+]%90d0b]1F>'EkOh;,KeW.(YC=pL;k:4LG=4-ct^5hq^aOf<a8^?^&.fe>m@J^XbVc]uZeCg%.^<YI/@d]?Y?\+ZE/<cdNr9%+W,B$?.Gs]T$lr'`fBatULIFrga_WP8oIXe9bqc6WE`2)%LLDAm,a?$Ct#+qlEj9h2At.]R^Sj64XJM3A@Q8VD'E4]eu%^&2Po8'%]XR/$-A+NWo.R$@LN7q,eGm0nTIh[](*DnH-rN=E%-u*PBU6nR,<03-#_8"\+XIu;Fl(_s%ADJ]LRL4L;h%cL(HZOqbI$/$7J/E:%('F/u&XG42<EdD(/C;%BFc8Uo75O"%`*).,q#q48%t`<Z`RJ\H):l&mCM*4@Oe2$ko+!i_bPEF=U9MGV:SI>XUXL_/rm_>&cs/(c%d8>OqQSIDlLRc!<C#Fu05**eXXaM4Np!gYaT?>8"`D>BOCns8,"A*rfB)PW#2KRRt=1]iT3BbUfl^bodXEMn\kd=3V9N'[07-r^G%[[Kbi)l&Q-9dhZK)IsOro=kk`alA>2>?\?^,iu*<?.jk?FR[B0d<gO]"X/%T$Q.=XWX,jj<o=l<=$^8dTJeLcNc'_cNNOJ^:!Vaq%`$$flBT5#!I.n"qD\Om!(b&=hX;S!!T$m[>B&sCt^COR07igTBL+F5T4!>m2I_\?:P^#lBQs(#h9i<NHBXA?lOm0_":NR!F3lMDR%`&2A$R_It68j6PI\)NIA'a8KDk_7ST>$i3J6io-B>QkW8Gjf5!O@H;VZa$?U2p%;+bW%.?V:O(TY(V=YP%OhVEp31b=a)5UFDo'P%1>;qI2/;dER*>bElPRonCT[[>cZu8dF)\uGpT`ajXtPbfgL^&"],k_nVad<q@U!K6#drG+,?#b$USlgBWAfKO4rYFIJ+tL.?+KY)%Vs\Es<#NVUe/@\F2Cjc*Xe]*L+&J%dk7.(gFh9]S<6+3+O4J"RS;F*068[/0E4US4!fIEi%hT[m?0hc.@5W+.90)[t0#o)L3PZ4D%5i*4ncs0_^bHp^AeaWj/'R<\#lNU/@g[M11VG+rg097Z")`Q%14LRFfoY_)bdaNkjitpP';%h#m>%$JkBXeKpgG%'?c0GRq96=Wq%`G#,,)'NDG3p&m<]]@N>:`I6\_@d;lUU3Y^FS-:oGekb`(c3b0,6+erPa)pLKZK19(XYe]GX8ZG$N#W9?R)#D9'r3X#T-=&_iWWY%-(5^_XRhOHb(6pq=Fs'T)J#Y1CrW]#DdiZ&)Lf-3''R%*S/),2&6DsB-[^qP8:_s=<L05K@uM<i-PE$]ES-d!Rmf,]p>aKpq1R)Y%]I%+I*)]D$7h:nVA$GUlRZ@@<LgStAPI%t:fQ.fEB*c&!(fje6*K,&_QS11%L3^(W<iQ.\#9R%85*;KZnB$BsUN+dD)[Ze_!<l5J%E=;hQ#YVrXhlNlm$\H.;ERI)haL8df#geZE&0h_l:l@SQp,LCRg[LVuiG/KGK1&[sc.X^Q3;Qe8C@+T\N\DAB:_6A3S43;&D50P"%7RECiOtE;i>XfH4Y'+N2(+i8s&p#;\"\+r@_X2C_JtZ'\gO@[FQEeXf\`A$4k=icSOQ9/K)H`3b,jrGn`:.Q[0n2WBH9gftf76QT%k_EV(F2[RtU.F$3@3l*,O)/ma*/?=nRHERCmVVeoPTP-$30LS++E+3#JKb6MD+uP_RSqHV_TLM<ENh%nrg\Ka^d7`$gPpmBh'HJg%'l:2kEk57=*Heb@&ijT>Kp_4_dq>\bVQW2L.cd2TmX(RcbjVNccJ!BkE37?&m$Cl4cKX%M4e&<YqfHYMom9Ug9^`NYYq]^u']pJR%\!LhhBpaO?Ds"$GI;odrTfqPD:4k$9Yt'f<2d6kFl)Ct[M:e8[-a`$t!)]m)rl?"LEal/HF<c_OAo]J7+[bU0`>F)b=aU]u-8AKD%"$h\\,a>&8qT!@rd!S>^R\iK,_-\bc6:4`_4$X5FpJ=_YO`-gS['k8f?9g?(D*+IPju%7h#dKXX09-&p'ng0qRc4;LP?@s?6&^Ij%ccEE]WB.jO6M2b)D3EH32!+sA*g)78aL>BJ"n]=bm<$`q%X\>c)%=&o:32e\D:?R0=jh,%oO$Kfn!o$%s3P8MT&$afN:-r;(Gmt6%02oN7C_jiAjb]0\Z>`:=!_m)X-D*Y\]d/#X3*1\pTHF?3e&=JF]/<m0=a-DK^@nKFG%`aRA-2ojX\d:lU,61ZI=`'9YVb'.4$ebV%N;=9J4Ej[i;3"kX;6MOD5SS_NJ:5:C`IYk[TX@Y?Vp="eT>T*VS&PVD^$n=S3BKpIAm6XP57L)`%k17VA(H'+AJX@S9St>;W5iNu%<A\5TToDB7%EWFN;_7c2+C'ZL(9T."`)nugc.g?t]?uKh^\I-uBs8-eK=jL2R+#puQIn,C8pN&'pcHAQl9_:4hITgqK0f=#^97j*%[Oat3GV3_`/IPh1M"EKt($e7o`=UDuEFKB-G41@$?n+F=5oj-3S9Bha3ub_J2_I5JH<<l&K-pr,TIuUKL]N3OS1cUY0_.q,p/<(N%NVG$p:<M&LLPA'0?;Va)iO'(n8Oj<P^%-"-L*b%j'o.TMA@MJgk2E"Y&ah%RZ%9L?)(WR0f1ZYYVb&<fKMEZFhO&JL+DUhDQ/53@%,"K#G&%4;_'K45[[\e^^EGS;oRW8lPqRZ$<f")bf0oTfPrbGB4:(*:*7&og`1@n!9<71LrD0RU<W+`)e.!+m3kHZFl$DZ\'gS;a1%$P.m?,JYHf@s.])9qr7c/5Uj%@(MgtomLeVdeF)I*n8F+oVm)#0=LHFq:E&nI^O=WMc2'GDDl4[gS>O[Z\@W31A99!*AnT:nn:<c%@^#KqeWpS<Vr"qQ1@O;@3sF15KM\-t>-BtjX0ScR)Gqg?Ce:'Q12jpGTXH=_9gFMG.4FO7mQH^[0I)-"NVRBhpHG6F1N2^^>7^sN%41*J[X"iC-bW1&>Om8AJ+9Gpa7AO;t"]o`BBY03nV"W4WfG:EHc.`gf<DWa9miUSXH^d24ohm84m6u\'3oqf29bqM5Y,gYFNG;Rk%j3^Ue^mT(8Cb6l,NN.HmVK5fIa^VE)fF6>gNX5\"Q*J9\\WPb-S8T::\tBd@Tr"rC2&IM&7HL8j@N[j*(>j:ho?jfF46GPeoR:2]%0Se17BGm3N0h+Y2;iV_BX:n>d!8\93iYOCKM"]4EeepZi"@:Cbhkqa&TF9XIUinji%1&,e7KlRS;@1nH2;F#KOXZ=o]U8ICOLcKR%!0P>^j@;]nqeVhf7Tdo9(ihclYN&?$^$aGW49GhcH/%#0YA12q+[c<$#"u>L"j$a__N.9[6(0M;LbId]QN@YfPru1K`TcR1\i0R$%/P&&)$/`BtR<JP[MS!KNB"\HBhIf-lWbIr(Cr1pfY8]=ahP9hH"jO<)=DCbGeV%5r=HUjU^[cmTL\lZd?:9r-oJiPJ%=4<Ch%l*g%&KR#;-8Op[[&1'Rql8riZPl#sX^K3361)iPYIra%Liif4/\A2?F,YXY=9XgcbT+2f?5h+1><H:I<KU*-.&THC$&uUA>63.X7BKri%X!s3iMIbt%bnt2OqS8Z#J9-AH5]c#s=:E&Y)o[M"fVhbrAKLN,H^d4I3"Ds1$u2QY?o'%J!&9IUMqYC?Z(-1XlHlk'224G.[&_tH%.LBW[4d]BuKB`8-")[S?N^%VPW$E$aMQIVloO>n>Hj_6(Q!V1P(n4Y_,*#OjEZbqr?\is1G4$tO9\OFM^$HClH0YpKZ*p9ID#u<*%4KL;sgL<t*Rc'5^RLJS8!$"(F8]P%V;L'!N*!_e5UH)guH_S@]9fE+P*9=:j%=Kss:g]6,iXmcW!],VK\=dA?/kk/Km=>$J_l$@9%'C(ru<&EXBcek+XT.IcLMG-81jY1t+rl`1R)r5LPeK'E`>.W\7.HEsgc*gf\#NhGso8^nal@o1SWh:_*f8E,=,<-<q`?bZL_25JF%1A-0fC&&I]RUD+*!*OViTrKZ\Z+)_2r)"^S16r9RB:;JOFMsgcJ,ut&ctJgZq`%C-g\@a%P)?`#%%B^4b%;9lp!RI.&43:9]BdYJ%52Z2t;kP'd,FCDA>]b6>">#IpTK,uG*K\XU,^#"\^%GqYd!#d@]=G*B+3YeBLm+Bc%PINN/#sH;5B:\K7j8gd;4SU+$A;7n)f8U8%^WsE.DJrlAPm*EQS?BQJ)dZl]lD)Fj;:4AM"+=#LLltLK!N,F;')L"uPm0tOb2ca4(lNEX)"/0l!q+bMb6k!$$PI:]JSC&h>#AaT%njE.0Hml;g(-[-Lg^./L2D[L$nMgpr,'"#XLIBRbZ+ZjKDO!T.#5Y[Y8#MH&!,2$rLYlFJBs#8//:*de./'55n-o9]f!h*Mbe*N<%1QkAM4<[_#m=J4GR.b-[;U`m=<RZ.lf"!V#2f%@n5(!%;q9[gG]%(IpCqd(L/+R2@*.==!?h`CD/S=rO+Z'tErU=udID%9+^K_r/%H->k8A!\C"BX&C&<\To]Gmn,R`f'rGPDc_(da,85j'c.o%'G/o5RBNHYg@fiNR3Mq%2OLPK5*&5+Eog6WH7He<LDTr&t!]eb;o.$%PjiZ6]=7<?OZE.BF+t;S`2-2!W`*?aVG(C+U26S@@GNK@f.09LSMmA=/SG$,EA+IWcZ-fSM38aHk;*S4H!+)<-ooT;MESii\>Ai!%6!H9*esp@&JF:Or7mP,b'9hJr!P/M)L#6%k.YH`r:nT(-<s#4GZB9-53^e:;\O%YXRYAFK9#O7T:_Nef8d#(Iq)DW5J,i+]ZQi'"%6uEDFdoL?RNZ\L?F^HbZoi;YF?:)d)Y_\uaUh%#YZLc6Pr#sKbge3N*[B3a?="3eG1:ib4/JEF`&<KeGqi<22R!0d471aruI%B;:%TJ;9A@RPc0+pF(%oD*+n<c_Hh;_MGl=GUs!"g/4F'16't3_G@[kiH+o>FEg'd;6S)<IijRkCaPbol7.hr+goGXjH;nr(-Uu,1@t+%ifTBH"^-2_c:;mZAj[D<@h4)d;W;Yd)t&s`nB#"elO9fjjHCVAP7XM+*G$+"rZ&2u6*WGlCKeUf(o6sIK]\%s@7D.a(m%5,k86Zb%Z5m7;lQe;?9F^bY-Z;fiYIM9-*Pe&Z,d.(lH%L:;0uIGK.$^1K`Y?&`jlAA3EXYRG&Kq;eR)u#:AedoHnd["t??!).;\V'(]_oo^%]H\l0TL_X:D+,k>jX)9UM$nig`adFnk=eLJKN)mNOZ6qK;mR5DZs^8fP1Hp:g<%eV9(,=P^b@k$PGqV0R(sPdJ\!*>(omnXnj!s_%0JXS7q)gbje+#oI3X.UcMK;2o`IJ'$G7`N%=J4Nl6.WTp3)5^MmZfo\a*Jeb:Fc)K+Um]>]`nfX^Mlu^.cbpH.R,(]i!+12P?\mn%]jt0-j[Uc_8g-EoO!Nt@m5Z7(0aM'G=Zo^r;_"dIQD99&?-M>-9baLOp+=TElVm_e/4JX3DVR!!%h_s>#_neF32%1%k;#$?]-m*n%R)7F9&]K)UM#97b%'hs'8-p[m8K.U5:&"=+ooi7[Z+VF-UQ"@W;c%4+"fFodKZ9([4f2=o-57R#r&X6eZE3Z`.Rb.,E^J/6NWjRB%,b0uVkB)eFVASgMj>nO7]9ZD`Or5HR$@6;S'SgGqj7.92(n4c3o]>-SI$j1L7(?3`r!F?O9M%NGhq_r8gQlOSr&%[>B^N*_L0t9s%k!8]0\Rh'q-aB^R\U'lQUtrg+Y3n^?\BiR+MN%IZCJ9V'=Q4Wr0P`UIDPTjU[(Q+U.PrAJ3';(RE\;7=PclIL$Hauj5bQW)ePhqj%ZBq>T;Oe.'=rR&)SAK:%$]PTf2M2.JY(<J9q?AV!f5XX>[Q]2WG<U'K:bf*51uP<a?u8oq`@$iGg:=GeC)=CZeh*rY%*2tk/.s[M%8.V4gKe!KL6EFp'bFQ:gK1I&do4h)o$1\G1Lfo^:8iat>B+\@#dWICAdmt(gn+&YAKdqt:M2s.UjK/t5FEZ?CEOL7%Qu<A!f-)mc%.OXL0^P^#_S$*;F8N.H1jC$u-N<CQiGp7_p57&>!\I`![Aqd+EIQNC<$J&d>#?hrI-,gS7K1>tKPiVI-i%aAkoC`O6r49NPGSD'M%B'[R.'3lM&i'?hKNC8LgKJr_t]jk&_o++D^q<=V!7",oo")V1ncLJeWAN)1%Je[@qJY2'.1j^Ac$AC$0GFV.,_u,^EbWU<B0X&jV%AO@*jR%<gn/dDi,ZkltB9$Bq5%SF$E`9!NE>`C/jEYi-.pgl'*R#)]#\]6*R4"8RZ52ZaPU;hkVD=n@_eefEsXSZ4#_ffe5HKunI%/1g(X&\J%%V`JZQd<nt=N?d.b)D5<`f4_Qm)pTnR^:!F6nN2Y!3#e(F3)7.T4XeY<$^]_[3eUF]1F,&mXE?J4>pmAU8A`RtP%*pp%=3CS^9cdF`3:]TFN%(GF""*"Rl9(1U+U9fs+M(UWF&g3q-'BT.M*Od2Hp5_EHrFlH>>Y^KMFfn4R&i+LFRkkT"P,N+\#;Gc5`8-I%.Up8dN52\R9cB4!,#Y6S?_iR&@f[`LAf98o1)grW/-,4WVt-4nUgp6h$p4iW=t5An.9a!^eA\QQF&?+N3%kjd[1ZX]BGb5b]M=>5%!fWr/^ED(^EuO5p><S"n/NOP?Vk:!$/+Q/Iq2Lu=V;_o('oSejTR8OsdB1=ReE_8jRGEj-U.&?T*g<LnUk7mXk<(onh."[l2CUZd%.p0Qsh6ZL7=us+`2=E-FJd)IXdcuYj#&J8so8$E]\ro(:o@%C#!\([biQtbmg-h59bmub+]mWWD/SLh_.fSQQ(bDHU2G@gSB2aMA%7pc\=9FH=F>gSS'N#Z$^`P%BKcrNq$cWQAdh$oo+hMHURoL?R&mka:E[sXcMrk.YKF@:)7?e]-OV39TA?t%Wg2sC;LFDqJ>?67;4%-PiUtes/-0X!?T\OY%Rce1%pf"0pQrm;+'V/0>_b3EZ!N"1YG74"Rd?Z8VHEoq0bJ$9cSJE>E.ola>!346T:Gp+6L=$%t!)!$c5Z%CI<_lBdp1Z`jJr[n%=G+Ko2"S?kgI97*&l.7)gW?<.D1IMcF/=5r%q_Z_\8CeTfcaQ7a>0+b_W_dhXq-FpIW(bNgM(]6FSZA/@BP%`%\8j8^Z4$4EPN5LSFc=_&#Is]@@i9'=NUeZ[UBES47;uj@'iK`1!)?b"rSZ^XZ;>*c8;bUhuf>o2[B"4k%PW:P=_CQ7TO&(fOu*%niI&$Tm=$nW2&7qb<:WQQ3H+6VL'h3](iY/]:NL)FPDa8CRS,>J8]dB#L_&(3j#Ms:d3_6W6X-]6,W+H[0R^ABstn.l^<DhLT5L0%euF;@H(/qN8CY*ePR)Q19Vf]DXYXpATn9Vp$1:um4^YGR1Tmnn9$-ij&b#;*lc"2P-3/`Gb$:'"U0)RYJRasQG=@q9L'`\C&6LG8%/]'XnLCO0DKWaqeHc#aB8+(6l8CYKYc@gI,Qti+HN3[<C,$^`GXTg]dQ9UP_@.SD*dWWFEIr#*HO'*oi0Jf`;b0'hgk]eU$B+QVp%(XZop3WH1N0+\b(_:loHrEb!5S:n.fREe8I:k<_8/%W^k(Vl(o/^",Q'\S@a.u+Ng(c!5U$6'k88"3:;Ia$An,U&ZE*P,[u(;ZQ"%A48is58A!tnO],'2>X-tMfKHZin(S$i5E7qXh<tIBp\:6Ad,A:$2\7s'3][0#)7F;^mT>YNt"TlFM^>Adl4qm^lOKXQCohpM%aR/%cGYG)n;Pni0tlbOqr!Ka=@qkB&;7ajp!tSqX,9b2)Et,tdZQO+5$9d!A/99]UqE5EM"E`C=#*[@W\uFs</hVKCF;Fo.YHT/k0b9&%.bF6!],`\SCrH1!S>Ydlr)AZ5()5F%CQfjRf`9083f50D,Nf7@*e*X]b3@+](r_"VE`l8u"Q[jY:f)]I5mXR=l"sa$lT+5JoYGc/%Xd#1H@DHGg#"n<mDmXE2<sW_P0*Fa\_$h7O0c3).]XA%L(iE(DSQMaIrU&Co++B,SL(/(5\,*Ok04)6Y-6jZT;_h$:"jFQ(\(/dk%Lk2s(I_,E_h?!)\;pIt9q'tZIc<2P+0[X^VC29YtERk_BI0\0:EbP)'6Cp.d'=QSF@R@B$fO'FB#6(79N2An`'X^g"]Wj#[drcN5%fE%pN3L5[g?Ogq?j\+<#$V-UoWW9%#S5^aW9uY.ulJCZ!h'kFr%1l0jd:A;I.O#4bfuGkWW.:1eP2&%u\0`&FgTe:m]525m2:gT4%cNKal^bXB+ZCM-(*:<r6gflNk''C1kPC[!F@V&!h/.BmA[\mKCdR^HEA5\XoOp:Unl6A/Ui;9Ar@4-?"K%kj3<#ib!XYF"Co:PPN%`PP)TN"rI+?1:jQ47!Z\?'Zr@'KBK4G2f=Vl*W.;e>t'bOO5`ch$u&`XJbK'r)AW`JIdMCCpe7IJh$2gZP%9/`1TuC1:BQ`]$lTt%(W2;_I``!BC07>t/YQNDHD4HV]/VHjIE\s+-R8o(;[eu(UA>KYKS9tQLh1gR?g^>rPFnM'=#XfVESdF78NI7aRUsLTNa?e+e:(AW%;59o2rD#0oD03)9;$AOG&t*GEXLb61!1n"$C1^/YbUZc.fAP"kKNQSt/M(dgpTrW#l$mk\RF83Fl#FZen+IDLlM)$*rM<WC:^L)M%;J0h`=dQ/NU<nQ+P-7m15gu8WIP(T)HFb1mLIRWDgAO"Ib5q[-G`F]2F*'.2cl_3_V$T7ap<,-uAs"\n^6G@'_)1tp@UBI0b2,_/%51*V<CBnN];Oh'rQ7&!U\4CP:TWa(K^>?SK=AjP,L@t_MCQZ`GC#FZ>Y6;39d3M@pb7m<rR6d[6p6H>ALPAo7W,P/1@8RstXjn<>%mq>J[Y(\2pk*N$27RaDR*gRoP;"SI</I=5=M,"Cg-6,mNAAgIE,qXJO/@`p$ULgW5+j7$*&m@tX<:bbq$uNH-76##7T*DKYC3aC@%k;B5&ednj1!iX6]IBk0ESKE:P:a@O6f9VRpb>!=PWP-a1[_0"L"RF</4KE7C@-tBgpQZa+8XDX:=g7V0V4]HHZu?/TSCK[?BV`ni%)]_!,)99UTM"J%H,M&k`)k9a;e9-gf"@rAl\*L!$:r(Y(p^X*Y+T8+`"3&Zq$@gb<EC(D,GLZA@eLea)Y]FU2>dQXK:D<Cjq)>OT%CLtlm`?gZ_;\*K@)AJu$++XhZlFEsD,0*pJ?VP;X(H36qmf0s-cDN,9L.^K;ETW>hYK^KEP1LO\0VeJf0=,^hiiH/_08m0uRc.sd%ENf5K=/4R%1&%]=gR@?7DL26*cV@IN'r]<gjT+cm$^26^7+oSJQ5@(i%#bt40"eEa@[@4`1knk1C0;I?qF.Wd,ab/>kq6#!%QaYh%DZ7\nP#PbD74pcanu\IY-,<]IB4qp_RtqB_R$3WY#H3LDb\<a\B+9u+9TMjKS*nYUJ@SboDH`ksoIHX8&="3-:l8%TC1YXW?5Wu:%O;ONaP!hq+dOY4*pl$K%baJb<E=]>!iO;/gFT0bKp2>3)]p1N^I+ZkQ2[C`meZ.nCQ"9oaih]em)R<F%fdhR?'LSEW2QM,0fubu3%P_V0igRSj<_5VTHW(Zo:.14;;AA9F]C6??-J4/(!L/:u1&XUf+S@apgZER]=8774)alCtW*-hmdl3A*YjYWhDpH,&mU+'8MiXZke%;"gZ4GF3q(3!UB<_6&-7;c^/.Oc^jU0e0fUBG%B->;n+^fW6dRA%%;?nT1.o7@H`#JJdd*[eCAn=\q%,j;[N2_Xlsf<HP<?B!hLT%SW0Dh`u%XlFQ&B"8#BFM/#;LUStIJEU$O!%a/os-,80611]ne]=*fI-a*$kH:]c,=%\3'X,#T`U@uXrkXB0<nL8*/t+QlMG-b;B5%,)j]4jAFp7V=8O\&@q:3W`V:i)XMegS_Dk[n-8Kho^ltuBMpu#\T8`d?+*T#EJ0/OP=u3?)FHaEDY+?rl-nRFjbK'Z9POE`@).:;%'(Er$5h\/@'5W?P].fm)4BreM">$9^=Y=AYl&N!3&Ci6l1<*E_PID4igY<:BZCh83`l6?h-;7rC7a8bM*as/S`<</Toe_^H5Id6A%U?BQ-7M%pi2u45J5IqHVNaig&)3;$@m^N!a56PR*ER-=G#OYSm*&39o]YQ4TZ=+?:PX7"W`?S;(Zi)4BmQbb-eq+T=5.o\c7/TR)%#"EVeT@>!Z#5j=6$nWim632JU?TH'L0[)\sT*!rH<LE^HOVCH[#VtN=%C%I7S:I->j$;5;l0B4D^c$95T>3&t%P1Z%hJV6..c(0b%HBAqI$;.>FnG8YIJ]UBm8=2_2KeWoM>bY/0[o(AH;\Y*U9_NtYYG,,c3;sn@$&W-s#ICKcPncMLN\@+%R@V+&\&Yd7-MPY$i=2<Z%0W-o&##i>LiF7trF2.rm+V9UYU/RR<0.kkSSCr^1CLD&6`"E.d'JTGr0K1[Rbp0(s-8"\1&Ta%9$(Wckfj]U^iqG.Q!p4nPDct<Y%`5liC:s-6V8s.l:mX$r:TEG]95mo*Y4gh<&VNso.67`7l.NOCOO;fc@W%L/A'e1<0]Il`"2(/rWe)G/0a*l'2aM;O%?OYaa$<s@G%'.'fS`RY*T"HKD)dINLS?S4eQ,5r_3WaV\9l-r>1&i;s2j`jF3FZ`;`L_uAn;drX-'ISDD3/IWC+b:5>d^Yo;i<f0YU?&WRM>o3N%hi$2e$qLI\4Ye9be4K3#bHDO^\iIYL1[hQ?1"?RW*,<]ZYlW=hMr[^XEgf_@ODb,eBG?\rVrJR%lu<6CG4d<ldrPKZOl-:!9&csQ%`1307>s\T/,92TSTZYq4Y6J+ZNe$(@n66N_XXtPUO.6jY#s8]M#-Bb*:#q3IX+@ar(1lqZB+G2JY5`EU:4m[gj<G-UpqYoY/Yu.>%,fapS5a"D&njfVfLKH/J*69[kol??56'\2r"=INl#NJCld$l3^$Z!(q+3\Ge!`3R\$$];mH8??J-d\T\hf0";7A(!#$Io4Z2EGdg%!YWeeCb3/Jb/toK;[A19U:S[=lKjh[3'@M)M-m$DbfYa2_&b(q#Zq_bV/S[?%rth3!f/-FeO1N7TR!G[7tDR1@sT8t8fVG96*1tp%bAnUM6t0DVe+>9R=!#XI.#&l-NilD.?PIE6nThPo'BB6F=E/ekJLku1%]W9\Robt6@n[RPg]0D3r\=p]Lb*8]X_8rcj:^U['cO,W%^_J#e#9](AkZeLWei$tU6pOP07T%bq!,5F_-5DCR!Y.rXpgd3?S,#R8&lDE+6eO/_cB.:SToCtX&$UeR'b!ne!Yb_<50/MT,`'DT%FVLJoW$hM==I`XHS-8N<6DCgJ(`\<fB:rps=t-Kc+^+uZKMW(_NZ#PX@!\8h9i:6OS>+"SH_(3un&`VSDBjCQaA1]T7?eZNhW;3T%r\uGCVGpIs&`,P.ecD&nr%6o1:+2>?r!hr//V(8c-T-Did*(KYDrYaAW"'Ms^o3OFV'`%K27btH6PJrj=C3E1l=H[#&eX]b;THj]%6PLU84^QndjhXh/O*qI,VRYOt*Ql#d!J2%mdKAgg$OreOpuS)`!6j4LI_#l@s7WBh-r2Y/'5%WWatC"1OP*Vn\Y68#J'6&-;Q:-E%JY%DZ[",Y<T.`QaE%;+2JE(MrOqM3,a\RF>G,0E'=p\fB&.f&"3`me4Jg+:>Blir.0FcggCmKR7[H)B.PE-kc'O!M)j],]Z@n8:%%$5d`9FYF%[P4,[(ON9k/P^=>*]NC:5GKo#)H(6W6":8M3Knab)BO3b?=rA<N)''Mhf#TZe=sP_Xi.k55)_(@FE,aaDR=l64E2lek%e-A%2k\adZ5o&TKbu_>j+=Q(Po*H"4.@12g>!6'2n_n2uUKFfmr5cYt)F(Rgr8Zf*)(p.hS2jOg5AZp]=*dJ(^#bhO4@ICG1Rt<-%V9_t<.h,>a1e?VfHF.#sVTZfO&3^YoL;d^`q,'DhELfDNPBBn;L(U3W*QECtSY*5:>E>/Lk!WrS$MhQ*W)@`%a:Tb$Z-T6p'GTaH%*>)Jp+U'QM'Sg.,VI`aN.NtPiVi0c=)?Ei6)@[Dnr5>tAPF4P[h6?,pkORS5.$m9r(["P5lC()%5>%t)SG%C)g2[6/m]JE;gSh-0%*CGd")_IqSFpULd4;o>^rhIj<FuEg?Z5D=IGnBT4m/=&lW>Q`X8G)@k/].aCJPUA9+jC?\;ERX?%dWF_KFA8JS511+$m1)j"nQ.t%Ve$^&Qu34d;D9+260dHQ;lf`O\m!@P&FY'PM0Zk8fY1/M$&5@5X^3ouENm/.No!s$622)31)H]XGrGRRdE8m8<)HI2@0+bY!u1H$%Jc,^k9efdbM0;X[`\4DPp&^53RIY!1G8Ws^ZOBP_$tWO.@/!']MI<:mO!kVkT<^jP3Hc1abAt.5SQt8b@MZY9nP7G(TEWhf>+g;[%U]dN5NZggl5S2a.M7emmlf($mlepu@Qj"%T$&L>=.P+?'@FV^_gS!'6nk4k6$Vi2f69,/qnV^=T3sfaol09o!BLn9]cS2o&Wc4Mq%FKO)4?F&O#@gt*&#Z"QNlq8dD#`4FIKXAo<1_"D_BU=1E_7sSM62;!h_NgF`jq)j#'I[&ADB"92TnE,Hn.[H@_rh'Tce%K?:k_Xt%CC_TI'c_31;)kQU"i,6t2[Z%=?6O]3N?1\F[QsAq4C_gQ0iX/U)m`]U)Si.30m)QB,\bsEL$e0G9@r.T_&"@#7O_FCo?U"$f,$13%h@37j3slTV.*2Sq$j,0I_+,c(%m1W7BR/84NP\Iah^-ad_(kRBdAqFue&860JXD-p-;u,Z(_hT'J:VA&a[kM)*3=[2>#a=/4TKSl%b-A`nfH'%K%E5K'[_rK)-,d'e`_->0nLD]E0Zs^!cf!W:lW[=@>S-Ur($TBO>p<!KBQ63I8VoaG'A+))I%[\`,sN:`MUb.LKet%@%m_nQIV^_4O?j0.r5X]:e!,APjr8I2Z8Ga_p-Q0pV;4MZDX1*Vne3^KA*5aXW!JiSrDbY9#*Act@$LT._*^o'DU'YJ':&[-PaPVO-%/Q@PBjBKiiU_Mc//CB8;WVJ&u=<=&87%#4;d#Lq)hcMNfQnM!$)61)28I1CiRhYZ2]TRh/",[ie_T0H%_ABPa(#S>>auA6EAAb)q%Bc%e2@r!]/=ZVS&,4Z;R'5&tm9YpdIeC)'$>RT9h:G7QG!WNAhMAVgbEKmi*1sg1MB<7[>cqlGY06>Dgf`LP?#/.6u^8cf'Xk@/M%<s-OA$sXX:qLR*;3UIYp(5Bfi%+,oN%51ojT0kn__0j+[doF4GU>OffJpB[MV]'JCGQuOs_g0'19q%$6BW5\\9nTd1!u<#:dD]Jl%?="6aO=JOA:a%Nm'*EqEBF.]0TOl)[9MD4^@4R$M2GcMF)5&r@*sWb&;B`o.G;;%K/52$IA]0iHn4BnVTNILk80hQah#k6OnD_a2%a[WlD$!8K5G@:53iU!dij?8;BBJHS\k,Hau1a3rig#@Zu/&D@ga\g??3^hs^n6p:!6.#s4_41cJoZ?D=4[)C"fHbc)nhjiPTE>P$%-@8_"HS@A5,Y3,JiJci^;7=1dL<XeP,)<i^%.:6m-mLXB'JOs_a@0WRH?c)oKN74t=]'#S0b4OE"inauLOt[)fr0GcTD4i`GmN9V%ZqsVdcdCn_gk%U*bWq5"BsaBt^d0[6,Z2u-G]+-H5Y?Wp'+g_@"!8=dYo*HE0qQ7g&g8UM.[2Jo/Vm!6a=i"8(#q7""JfsrS-b/1%LhRJUq[LPJdq0&2jJ*R'#([p)'oW`UhRA(E-bn)$$RH^G/.CmMg+J6!L3fDK@[1\_/9(>35N5pZMa2E.@`^Ye^FVHm";iB*kt\`#%D.810`AO?/b<-6q-2OX7]Kn?$#2b6G_1^ts:D_%iXqC5B\?7pr,Gm&^25,[J9((Wji*hL?R".G[k6lPeIQ)X[=+aKCIkmb-33Q/*%ltPRlTu9B*,V=3CTH^98):&&<gB+#m>i?"="jrB[Ef7/+(9%A2U7fFWUPDL"11Ep'(0uJE4jOY^cRDo1=-s7dRkM'Hgd<bVRTtS.%)(@Om-JM-TU>h-ej_A2/%@ro09iDeS3L2!YmD5>O7Q:mPG+`On)p"'GBE8q*93&Q5:gIRS+^JEJ"^MWQ.[mIPM]Y9^GXkXMXm%lt%il.id!B$/ZUhHQug1:0g[ZQk"A0VjQ!U/fK`Bl;,,t_$4(^)$2BGrKror&ciP73J`/8*KGAd('ncQ!]j\N6XYa.`E5@rsc'(SH:1%<N8Z6FE_2]_npgX1=%on@0[(dFtUX`%H:*VDNG_C)TtYZTs,PoCikS=BWo@!4(q=_Yu?6P'gq9&f,ih?KG$;U!&e(iYQ>Z%4sQl^%&2aQ^i:r*N#a0AI1nh#8'jHWkdT@410S+sK4EKL)U<[*C=2#\(cA>*6MTpOAj]htO_t8CUkQpcFTq2bmYHX'rO"oN=T9iF3#;N-<%#\-J,;*8TP'o*_e-/DoPBrI(:VcM.e+=3+F/`F-B0D%p&G`0!lW61?m;_-QQ;4#&ubIM[7$IbGu[2DN(+]QCAcjh`WA1%t?0=Od.%9Eu^sb-R)/\[<(=MI6U0[>>g;-KA52Kh0%jCbcsg&A&1U,-6>U+e`D!ejP$#_NZ);%`:1DoTF#6AquXQ6)h;&djV;\ntG8!iL,u,%rBTI2h1&gM5G8klG`/PD/a7_[q%.=.m#UE2U@&S<R$1>k(pOr$dBj3\m&g0PqV<f_$H(4F4b;+GAiAFaB5eCpLRfb]h9&eg`ksdg%),[leYZ?j!0Z5bN]"I56MkUQU<Ie[,Tk7i7'V'&!+sJNfl+gc37ODIRZUNCK94;KH,>%,;q*^+-a-@tTYCd^I`M/:5N!`4A(j,Je%CD=7tdjXqR_j4CO>TEpI*6m#u*0CL1Ng(Xu4VmgUi1(anUbGP(qS@uNFI?,qQMk<hL_audLdtAs;m`dU5R<3tfRDu/LUdYc3#Ds.%%<442(KbSY5UpMhQmq$WX+YE.$S]N$KWdfDCD:Vq/HKKWPoPO-iSmO%D.I`pZ3FmTpm-bM!/<s3XBoD"H'Q`G<]"j>PuER28*tpO%#[3%O1]^:F@sEWri["X,$ELp-@DEu:"XK4a`lp6u,kOI?L6<:A1+$O^7P5J%L53c=PR4[`&DL3@"X)TT_-3dM75c7WKbf*/]l@-m%2@B(,+rd%OO1I-*/o\ft&k[9/cXR_ek&ChUbo-o'oHVW5Nn\GY'/'likp\G$5p8cT/GVUJ*bIhXB79t8F_6rgaET81E2U2)nfS^;%Tj`HsT5.S7JDX&F[(("Pa3C..::Z>b=5YpU1$fr!<pVf'WsplX'Z37GX<,)DXcpQU,fE#313!!tC/5Jc&<t*[nWlVTK_dNblnZk]%Q-hbY#_^/%-:YAK=VS$'6,F,7Zj5B^//84KQD4f7[[P.&Lk^hCeUX_Ym$m^]I=6l[U01(g3))pH'+Z#f2ip>DFeG)EWaWDGK[V4Q%%AMsWAQkmKDl?PW#Rjp+*9sH.(rq87"V'PXiO"3XiXKsiXPaAsb]uagEpHQOgL0qV'OdXG9Fe]o940$,L7EUa7#(7pl;5Ht":a?%%H^n'$A?r@STTK?8RcO;Y(Kj?>RW8"%7!gX^cNp_-`;;M>QfTU:%u.GYGn*A*oA1>06\1/Y%W$*jF4a9UI@`gb@@qU%(BVB@8(d\%%RR1NJ$gEdE1I"OZSirb[)+B:_I(JYg.ggf!(#UoPN^9uaqfGRUQX!:KYXYC'W\&cqMP8Y,[XY%:'%Wfb7NN>NQbX=US0XpNNWl-O%'ab\\bS3+J:SMP/]3dVinHKssLegn3T9'm%b\Xd1"r7R@d^.kAhI=S,32c"n#5Q)/?T)o<E6V"4?iftBY]HRV<fL"]*G1gP08"lc%Fh"7cJkWI[i_",^rBU<Y``n"W!#tVRm5g"4)q^<30N$*9"]M=TFTHs;0i@85h*&U$.^t0B']HG%Q])<hN"MBqH+[O!E_bKjre>!#%.t2PRmoT>bgR!(Jhgb\)j:CZ"s*<eqp)@6!gm(+LX/hRO3IgAaX`r*^ht+%*pYKl@/q3cqK?H3\]6WA-g\L:3QbNo8X1o1ojd4i:%pZBdDRCB=_q!tVTm,;l$4`l2PG4<<(H0=D'K8ZAXqtKd$F1:!dq!dQe5Im8e^NFd?B9qH33X<M<]/RI:&mg(Wk3Kdsqq^-7]DM&F%p&!$P])C7,YO?mb-,+hNs4)J.++EnKO65AcK0T!JfT14M_TUR']>%VGoTFOhqfD&Z(I)93k@QC6?2Ed)`G>>D%hIOI(Tr5]_s;5h%H08l,h!8nWqX@/Us'MqbIcYhSc,4>s4t)IanaNA>hYD9f[r_"cEd7!0r?'RdF!(GPmc?[Ys*a.X:QP8#-3*uAG1XI>X"M),3TAb3%Gi?iL&$N]iCNoOBKnJ8q08D4;$bZ)^3SljqHZXLSmIlMMj50a8pFU)\0-=Nup[H>Q^&.Dn+3B"e2>M.Yp\b=uhDk9!r0;'$r-@m#%TcLkl-+NS;qY@E(qgVr*rT2McJ)<;b5'Zs_YEj'Ws3ttTh>_6YpV!=tpTB!p-/%`N^3KYH`@kg=9<GDso:CAOpPX*B]j/;:]N71%%r:KF@/pBN?\FfIu_[S-.J+N@!h]En%8:N+=qj3qX?G:^\Gk[tk+..]P5O[rE48732&(eM9YIht:GkfGEqmZ<;^:/<+G5$T/G9<3h%&RQ4n4+-Sqpl`48o7rh6qtuR?41KM'caWYOTDS<XlIGG)hUk%T\F7>O]rP4P?2E[NhljQ)IQb1qhu0iDLBmh$$hhWMeUp$Zou4+Y%o:$hNW:''1flQWG]>*b4EHqKOK8UOQrV>jP&'`qD&!(W^XcC$el/e\r?[qq9V5oq)>Wgg?r8GUrp---9nI9pEfo;&<kH/guhD]A&%E:C^0YJ.GiJYgEenCa_C*53$qIt%"7D]f"`s,4Y`k2aG9[C?1LAq/P36B,o&1jmK3S)<)TrUnaD4nnI>f/LfXqnIOMlBTIE(X.oS%cH8ZVGV#2(DEGCCjlG98l[=6YrS4foRm29]qLbm/DgV6Y310*if`0pm_51@S^!^8CDh!&/4QVPe5;n;[s1GMj_j;u]?i4X&&&##n%HM-K2g$Y2M%^2;P/u0GiI.dHGj"%=s_u78riS`S3TDfhek-^PacL"nejTY/.cYDqC=+C/?E<"dMj]&610://VA%E3Gn\H5O2Yk?[%q8qXX-@b7NfM?k_T>1(h^@9/(?f(eE?uPbI^#0t.2a:[JfD\:sI/2_!pTIpg\>Rj"HXSkG>0b=PI6'SrrDc)D:\;KZ#M7jb@/B!C%K=B*lHKV<7&3XsFq>Q"2n*U/Oi7Ce9o"@]JB7'CAJ,J_j7GP@@\Es5mDK3Y/H1/F>2g.FbjVO]I]tM+r&XWORs7Pc'B%LA(&FN76%:T7:Loolc[q<do0n(ka'=O'Rqp_Wu+(iSs8]AFXbrqQ%;[kAcjhtufKG9A#7a,=82(7AOc\[hXM#FDSEI])V)^\Md#q".d9c%B*-%Z<QMKrq;h2YEgd;lr>aZpk*2!f3\:=l5R@-h>$\mq"MH#coldThYZSjfDghs55P3GYLU===5PqQ0&3sVnb6C?fi9-,qo)kR9`*_$%Dm%uDmr8<PD]b;FI'kW>5JHLqFuR,)ouiD<gO0%jqNngD]m&X#D`bLD3A9L&Y9!'"IfK#urmf?O`K,IL++4$1:`nK,SCGUTp20]_%:ENn%(LBp>b6+mfQK@o=T?_#sHOoH3?.kQ[5@&R(p\p`T4+BV9]TbV[eK,f=GjSd8Nh"r6?[VM7-i.+sp&**"0>?uDhYm(e3N74/%\?3V$mp%NDp[8p$^3/Q,i`g>KoA/k65)AZWistM5p`>rQjlRMSQ?1t+QCkd1#7!?icF)8R;tf/+pG_`P=5UN/lg"G\m`MrtQbj]*%q^h]K]_?4"]:TW%?F[GIhu!+a`UeP'rn`F-aQ+O>$9N`drO:VXmGE*ZeR*\a="PMl:Yu%epY)meI_Nna]:Z`]GjF-Ll'$$lGYR#k%ETa)i++<mm02)-6h;/lNkEb6)=*J!;QiY(BKCJg7B"\-;V-Oi(II^!mO]Pj@qf8M\^rMUfmGFQ25CC@IJ',?@\X\(-rMQamc\mkS%pntZ3WuqACp18!15/Z3+at3%L/,"cMnC73/qtOfM.SlH9:AgEU_?*N=@[j^>l0QUcn]tMgT,nAVp+9(_!`-I<)mR1-mRqdO:KdED%VnrLrn1@GO!`*IJ:1Ae'hNr2I]72:]n>P78GV&=u=)8<R4Hk1R>AO-cZbU(!b9O@/dpB:C$TuU\3D4/cl*8%aYLoVS^o?Zn_ZJ0^%<1]pDr`!"X$!1q1(-'!UH1B,GZ*UgWT9KMN`ep>2!iN[a0:o^;G*^_S'<o8N>HtRen1=:p`A>!Dc8I`[3%XQ@=)8TZ4MuSmS.P5>%>d:VpN]nWpSAN!^=Q!>Sb0smP9to_*USF<b^hN2ZQj(c'-D(nYD#>kt)]daj"\s2Ijt(Ip)YrX(^nZ>$fg\J-@Y*"c(U1[mgLF$E%"Wl].c8]%ARK];9^-(M7JOfa+Vo8^u]4,ECXmWL1ZTXSOb5rW1b>Vf"-X*c2c;m_Di!a/eWNj79hst;/nDl*C`nBW'(-!h(Hl=R*%8Dj!j/F\m)m#8:$c`7;C<t@Ku*dh9Wpq1qBH1g+elG;Z6K?pS'cYW?B=Q"Jti7[Jr8M'ADHLR?hbOb#8kLG42Ws>7u%mI0<4M0F!%@M\b=W-U.V-E^Tq]Ct0Bn(r<JoC0NP_)ReKo=OI,Zi0.e>K:sVCu>0Se*Vcls5&&2UKW,ZFRu9&0A\qG^0H-Zp](*bZf</#O0<ED%-0iP,J,V$LP[=d]i%d>FOid$-KfUYPD1D+%BP2W/mEA"XX2STi9P>%U2iIsMS5X(u`F+ton9\AphdU,WcN&l=a5>)/'M!1`!%7jL%*Umm%IXn+](h>)&%.%Fu\&Hk4E\1-CA@t_]&lSUMpJ6H-"EG($6qtlBD%C^pVfEmeWQ.[S9NL_E0[RoBO)b^=4iN"o"NJ@32U@e;%M6!C^0X^X?WA#<u*+cPn:g"bESgZdi4m$;W(\#t\P6"Vm"4T=?=qNJY@sK'A$*uQGL.iPSD$:V3Jtk<.;rS5KS<Q^R/^KEP.*e;.%Y]es[<fWp7J6e3rc'^8'`cI*:_s9_lEH;tDL^A,Gb'RSI<lL7&Z4RA"1\?2a!F-5\Z`L)>*n/;n"]HQJ)=M?#g_CA6J?e2m:r5O6%MBEYl2c6H?JOVUAdP/4iP`VaV5Q;2U[j=]bPaAbIap7^+)!#\&#j0(7WP_5sbWI5S_Iki'GlkgO:qm1T;4n%l.DRo(k$&`4<TioS%(lf7m3Ln8-`lG9=G))be(lRTfSc8"2,YBC0@_<Q/NAHJYM6="W4?m<uGc5DG1e0)15#?]n;k;!u<!D0D.E\<J+4ZA"S9YAYODdE>%7/FkJ<s"#*,3o[P!'b;0).(#C\D5mGa?lTQMY:[B3uAZJU0M=k_[A;.3Q9-_f0UXP(?[)\Gpbq<<X//c[7?HZ\U3;h3^GM>_%I/W%#"WJr]Q')g+:TShIKC?]&qZ'F"XG6'*>HM7RsGDSkGrr)&*?^qS8RYL]oYgB0$.PPdE(BlcnICpTH+=JZVc"H"6S>FK`p^N]i1#$%ER%`_`<FL_2?75<bHHNq$?uR+(!`J<$(ani<3NVtae[6,bdAF2(I[]TKXoEr5Uhm]_3`a'2qKJc/V=#u4KK\o=?.m3J2fj8E4JRY%J5C!SARdQj+[%Qi4OEZo3!f=2dg.sc:TfW$a8j/[XB\gC!VdrX7n=!-%Kl/kL:IsH(.1uNL1.XS!<;&-VSZC;O9Als7EdHob#"(k%MPM)HU-dgl;c#=.1.*5IMR+J$gbB$U'8]:Zot%HF18lte+eU+6bm7RoiH[Foq)Y;97/]eA%NpZ4K"4Q4`:4/$fKO##kdA4o-;\uM%%Yioo3T0LZiKfW=7AYFjNsXKDoM]fhArh'mAF;\0*#th,;i"lq.MYY\Q38LrociKORU1Xc!Dr;2ce71e@6nF__?eIgVX6U7BmlDX%N_`hBT(1<0DBr<hcV1d![Gb$q"D5i>gR^4fD*=Xc7dmnhn0ina@Pq9)+9\$"fD]j=FnVPFs!1J4A>Ut[1VqEbc6C8Qc=Ape.7S[C%Q%6uE(r;`$(.rU4P67>';L35WEd4pEnF4;O'FXsM;WIn0$7:=D9K(RMSKfm1:t:`:'gircT7'j0Ne:-G5*0VQ!4S3;X+RX-Xl\YG%L7fSq"-l8;B02Un2/)$CBnR:WdRI>;-^_\W3g##%9j"'!9eT#Qf;ZBL`1=9V+X3q*Y-FWFQdr=O!oFiG1S?jM_S?b9X@;D"GlsKK%Ua16S)!ldoZ60bWS!$TLDGcE%"UqSl5\WXSEX"BJ(M!<NLg<[;[t/]j>#=!M^o135.PDincK2+)!#^XL9Gdg]Q;lhA:n]8#^d@2u%A2nf&<>sN.lN$7Q9O2\bJb=QK;5$So)TDp=0lkR[I!Cea/UjjB5d8kV!&k4JLEi<epqFRVN):r",/bbPM2gUuAGJ4#G6'\DkfWJ<%f-MjIW1J?dpg?Yr7i;^OU&](cA7B+:#7tUrEi'ZW'64ao2j,]N7=)iR5q^X+:4K)*^Ou$]b/%&72>&F&F+H/D=V!tLmNPIoU9&hI%`&B*ee9utF`#r:NY#DY*7;`B"5d8)q5[c%sW7/>XZjbSu/4pLl@RE-",p:?qYe2kt!*4L\<"hP+PsN_F$Yf`3-SEl9Nrs^%+K0Qc%SL"8'LhJ47-4f^8MN([]@O)gFC0:NI:`0!f7B&l^""fF?M/<XZ,j,<Jfb(a0!-.&j@$PeN2cuCpdDCL#QW%0qn*3^.r3?al;5#:7%I;rHt=]d]-elBksiF_mU&Kidu8e-XcA0p/fJYJ@$N!PSUrF#(^N>9,P9ZTpCFr&(<ZnEhH]Rcc@.X)JqN/R#&=rSQ8',AcUg8l>L%:,:Nc?o%=i98&6;;d*=2AL_?i6b@-aPGuSu>GbRM<^Cm2B3J6!:PJ4UYiig&#*FXTbf[Jk-!*fBU8a==F0+MrJ,p=/?3I29eHlOM%/'"Y<-&Tr,=s/X17BpD<k$?S(Nn>dGJM8:>KB)$7@'*ioGdG-M2j@t'<J[Ldk'3>O."]6;F&"Pa,Q\r05?>m/?B4sMT2"AOn@B&#%ctsok<s$G"-fWrRPfML'i.lQl$jQ7[BS"j$=:h+E=A\rUJb!:.7g]0Y#McTfIL+[8bKpX?["4k5ZT(ttG^!D1%MK'n7CS,[;h+Ja%S=R[OM<6O@S_X'&ErH,[3WUSe)0dS_ABJrJ$&6+0H*PIaeA[p9hPg]@Mkqk,0]qL2?195NS&aK]fiB%]P)rN`BJtH:F%o<_^9TLK%V4La:P%rWZ@g3Yd`2,*W/2pf]@DcR:<4CU"n]W!STH'*^Kb'`W)]Wrj27P*f160F(QH.8]^FGl68L[u?gtMp@oiR6=Y.PWGPQR^0%L<8O6UTf,;^/!oBc3d8W'u3".5_m#IJlmJ:/-VgOM:sCl/@gdU"Z/S+*[&`I,JTroL_.!dcp.lQ#?3/W1D7/^':YgpLgGh744l5R%W@#H=84qmp&ZD7t#4Mqq#`>Gm7KgZNFjX:gN[._@+=6Q)Td=u"B>gQf5_["k%=h==_S!Tl<)n>YLE\MM:u,,Amm[E@<nt`)Hk/;8%::mKc.">1&6N+Cb&f$`M3"`0+5SAZ%f3dbnpQ!a9Upq=;-`RNjASHsO'+kkW&t&g$!^`2>Gmu+T8Ae2fDL$"p\ui8U'm`[C:Q:"X%J=*@QW]h_`k:_^$7qA$V^[ZaY7^O5o'$Ul7@0ISC`iY2.9HtRkBLjdg;RDn^NY4p7,n!`BjXf#CV9VY5gCng'L`:(06F">dR0h,;%XLOe5*8KPE#fVQun\\6?M@S0:a70Xk6Y?XgYoKhbAO31<$`86[LQ*NjBan5Ab*FJf$#?R-7+Gr?hC1MVT^,Sm0H.IfTTfO2!lc@Q%K/\TSnc3Qhe\c`'=2g8B7`8+[<B*'Y7A,@nSVeFR$mO%DC'.YMq[mP.(laVF7`i?.Q^91b-1Hl6R,r<*S8uhiV\5!o^k`e8jU&Rl%cm'nN`"FU9gL*Db6`RX'V.5(c8g0NOgf?FH68=qC)KL6l&(fJWM9@<oHO8(.iSWWF700hCHkO^=+s-<H>#C"SEeqFXda1D-Td(cd%(/pTn"Q21=M<1b]#XQQ:=s?t!'!7tj*9.G07BU^BL>h:0nr,ksU.'qO&7"Y:cr"m88TWG'1O8m"_%2lX=VdqtVrUo#(eKs@')"i8%gIq1X"C%X]81@MBR#lD\%chAmBG'!QP+3q3JN9&"_B<&?5qbB_##uE4<eO7JQ$n%]+E'rC$c?/mRhIfi*loH)gDkHIVW[^l=@S$J%DErrmA.Zr*K1S>WTt9;^<BSuOVuo;9`4(E2%"h5AJ;S<pEg7D:mJun$D$`IQ!<jZBjBUIB[g,Rh6qpd0.)<,$@i-)'W!Q,kgJmk*%&[<M]:os1E:ZDlaSlUaePaEBo+B#.-]9+9;cr>]k0$=i/lO["f8':E:.06A_"(rPJPrD";gbMP(#h3+)S<-YHN<"ct7,TC8M5\Na%ZGkW_UN`[5J>+6te0)2e*OdH.#QsgG6L+Z`L`h\ab`$q@oCZ'!G*LlPBNVgJHpf;5'-iEZcWhi_;jFM?aPd@&hB4+Y;?/aXg%q"p%gHm1E8n$6V-l%Ci!TMW:ic3&Vd8W;_:mE4/%3?=UEp%5T:CE+++g43Fj!\IkYD50'NNujr\X$n/"B>h^"]O6jE\\lEU;Z301U7Qs%Y'Z#SQH5r'VPoB`&q]jT*-U_.E-HIL6\-/GU7__VBZ.\/Or$Er-'VrGO`P#iKi[T!nbG4,iBWaI!*i\2BQ1nOE27VeLgC\RYf:Pt%W_p8dOC!3sa2L"o=eAYbjfCkQTi8lfK;;2k*J]IPMQ%0(FN@n5!6d$@q3<2]-=G<.Oo7"b%3l%M=(*u(^cu5cPSj1Q30k[4q>eSu%,Wg<WZ+>jI*(b32#bZDB*4&BHL,CC)<gYd^AGZ]..`]OpTaOa8Gmt%R8LPXZIP=LLbQ.s^]VH:f!fSjODNWfVpZ5A&"Wsb_.38N9%12&iY<#`N_UFf?tP\>"ZWk'iec-*<+^fZ8!1C<*i2&:o4BcPlBpkj?*j\<&kEa</$&J/]=a89(-UC[DWjXO(@o>6"gB.s_]LpM]I%CCtu&=dFm'#TkT-mm-AUS-,VKM(YSR^fcm8Z^?7GD&Z08*0j?0(-@3f2__`C^0i*4!eqHtnKR97e+k2,HX1%Hjg$G,(I`'@1YG<,%#4>WmAO?fU$[>u<$B0#ePUp:d7EJ0F)D+KKdaodSaq4Wb"Sj9]DY;\jb+\[9Yss:2%@oc:7k"a:c;hRGLDYu,U#Rqe'[3Pr:6M`V%0Yo!mHtUhA`ET:[7Y%A$A!aDZo\-X;@n6D!KP4E]of_bn)Bn=`&UMiZ2BpPgb,0klD6[*E,cb.Ze^Sc%$G`ZJ+Mt_k_PXJFLC8qU%AR/G5n6?29<@nf]<[AAA\Q!dPSf=_X:C@Wd2V(kKFZ.frK-SfX`^Y5+C"P^T2JTasWB9shebZCZd'Fft.q<=N9[&d<JlsjDNjeeM%:MUu1D((7d.[ZD"egti6e<(%0N'rBST'EPD8hMFk$jhf(QG<LYFbo.jTYqYOW&!<,L_[E[BJi3.`!0TP7m%'Z;@VR*@@.1#Wp?+D%`+HZ_N^-uaY#'/[ik]kL-0JmH)luX$[=ST^27LH",^A"r=j[JW!\#KF9G))P\X-u"UmW'8[Qi97R\2qkVos$06Y]qB"I*G4.AVgH%N4ORJWY2,/,Ea\^DahEm%5"9fZ`?.=8N&W&.Q6fuRXQ_?_]<c6d:;VI_.69?*\XTBB&]3#1)1<6#"2"\;\8FoB:,kRdS8^u'9_Qa%GRO_s7`NT-OsdG%J9o)A`4$l'61isKk=-T<#jcD]<2EZTN<)("b,)$_22`CbR%-6T3qC6G*'nSuLq&<YGLfi"#TOTkKrfD031NIP%\""1qGM]C3:8[:VB4Q9"mAX0$k)<_,b!h=s%L>r,9+3ckk!cS9Xr'_keg"oT4c6r"inc33<$\-i_dLhqfl3/<Vd7dbb!K"N"bk#!%'*DcR$"]1_(.=K[WXP;-#rPl5G=]X5.(Q<s@SSPFAFJ4T?PB1sh8JL+GaN>*-AIn9;`gd0<BB7NU'7na(`\?PG+t-AV*kt*#h"9W%lm2WRBf9-E3$k7A-Oe2A*"O4*@AKKc)DHps9ikM10hFc]#]kEU9&SN]XeR%K?tp'<ZYgNnj]R32&Hrj##NoKi5c>g(aF"t)Y`i<>%e^B6ULh1MDaJZEWH0X@a;kl]96OOW$Nj[@jiRf7De[<nM+tcBR;EXt&G>Oeg=ThbU1A9k2=cG0P/&fA:O(CJ6eC#)Xa3g)9m0$qL%#*r>j9:V`ZGgljLNsJT=P_emm@BVFrFp>4N\tSao5bTM/JJ-ZmV^aI/XCJ)/2=Q0V\\8+A%j4l[Wt\PS(FR$n`%)W$@qnMc\'SXt%DO%1a$F[Z7QAB'KXX;[DbMff"/P,XP0g_(>,,TYp$:Q^Z1@"-G=<D9"K<l0kotef-fp'^(F';<l^s/BBc)@TaM!XUnN3:/SN-Zm0%8OFmI^]7b[#*E\D3W7**1JgB%?BMG&`g)gZgDUZZGk9Gp1!.ugU&O4GBXF?sUVRLE'2U?XoaZk^Sq5(1E.i>5JSZu$*@4laMB50@%nZbu4Wn44T8]HV&;08U*$'Mr!&j*0/;:e5[jlKjCkd![m^#g45msP,'eN<i7q[b]q^9T/?&!tb<mOkg+6$UBc<Yu;ZWWMEcKrWXT%GJZh#Q!)Juno(AsE835c`Sjf@caK?@LP*^8/Ad@+YCf1pEL]QBHg-S?LK1Ku2"ORp5T"i=$)XYZGdAf-P3[^E;$O-u?Cp?=`&]k(%jE8O(^8?X9'rsTZ0O%+ioeM0h3!eO@Q<R"M!4%rSR=[,&4U<)F(gTCtL(ml,*@6BuEJf!@;1-[q^B?E;Y1D`t17,Lu8VB:&1_pfN%44_S!NAcP'7Zbf61:#nGPZ:j5Q)ZoJX&e`P?C8de6-8UOFCHqR<]3^pd6Jm3%[+0bJL$/lB;'\^,&oK`%4GL4TbcnqkFG@XTc"'n%5`s)%MQW\TpeG6`&\d>j+9*g;>:E>B\QIe_3ZK'K:=C1-bu\nVN;Q;srIXOiU#s3iY*[P1&s<iPDLt!Q=@6*L-gbXQ/ImBD35Y>i%-sAX2L@[Yd8oE`bc!r9TY1#Z*dS?)5<ESTX7VSOXR#PTbaGMN&b)4t)M^"i&'S$^.oI0:9/5(tn\16Jqda"sg4\:#c6#:RVCX0Ac%k3p^NS%g=u4YfZ>O'&i$Q=i1q:gn0<;8N#Z/B_sU&RpOQ4q1?4Sd-\Ch[*+AgE=,t5Z+#Bn!$_PX)T\=-lZ0f=LU'HCfp<5%a.`9%3>8oJW7e1pRYH0qQooI766;lL&qDKq?hUcr-rEqJcFW@RQ9r*3GbN&?,M`dXDOXr8FT6UhoVk8Ef8%Tbljtc!ql%8uFTh?artWA#%a,B]Be3?V$<D>\7Mt6NiBAT,BN.`)rM48C'B:K#AdR)-VU8+16Troe!J9?4;9o2=P=Nm-k)6K@h)J-Y$fpV!Cg)Sg'drnt:>qhO4%(f-(?ALPpK8^TE8."4&e@E&dPKQkY]dn7!tnoRbh5_1>\\!&J*Y+!(4Qn$EeZ4`<+bRbP(*NI)K'q?l!"<9XN9Tlf)BRQ!W<^sS4%'P"5c6$CpOQ6JkqVH<kJLq"j;C"^R=?Hb,"<\"80dr8&$o'+)Hg>GgI@%'KWWXmlqhBp@T?3W'>$3j3N-.,U@$74ZLfl!*qh&6&u%c/3O^S[$:TNqTp,mCr%=]_9C:UKdcSrF]bUleK$HDuG(X`]pq]]modKXe-]jqObCS\,Q0_c[Tm3HhX`7QgLFF\bk=B5QA:+rSX#,%rtd*FP2YTec<^>.E9mN(P'8sO~>%AI9_PrivateDataEnd